<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icignal.loyalty.event.mapper.LoyEventMapper">

	<select id="selectEventPlanExcutionList" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEventPlanExcutionResDto">
	/* LoyEventMapper.selectEventPlanExcutionList */
	SELECT ${strColumn}
		  ,t1.rid AS rid 
		  ,t1.EVT_NO  AS evtNo
		  ,t2.MARK_NAME AS evtType
		  <!-- ,t3.MARK_NAME AS evtCategory -->
		  ,CASE 
		  	WHEN len(t1.EVT_NM) > 20
		  		THEN concat(substring(t1.EVT_NM,1,20) , ' .....')
		  		ELSE t1.EVT_NM
		  	END AS evtNm
		  ,t4.MARK_NAME AS evtStatus
		  ,t1.evt_status_cd AS evtStatusCd 
		  ,CONVERT(varchar(10), t1.APPLY_START_DT, 120) AS evtStartDt
		  ,CONVERT(varchar(10), t1.APPLY_END_DT, 120) AS evtEndDt
		  <!-- ,(SELECT COUNT(DISTINCT(a1.RID_MBR)) FROM loy.LOY_EVT_APPLCT a1 WHERE a1.RID_EVT = t1.RID and a1.flag = 1) AS evtApplMbrCnt -->
		  ,(SELECT count(DISTINCT lea.rid)  FROM loy.LOY_EVT_APPLCT lea  WHERE lea.FLAG = 1   AND lea.rid_evt = t1.RID) AS evtApplCnt
<!-- 		  ,(SELECT COUNT(DISTINCT(a1.RID_MBR)) FROM loy.LOY_EVT_APPLCT a1 WHERE a1.RID_EVT = t1.RID and a1.flag = 1) AS evtApplCnt -->
<!-- 		  ,(SELECT count(DISTINCT lea.rid) -->
<!-- 			FROM loy.LOY_EVT_APPLCT lea -->
<!-- 			JOIN loy.LOY_MBR lm ON lea.RID_MBR = lm.RID AND lm.FLAG = 1 -->
<!-- 			WHERE lea.FLAG = 1 -->
<!-- 			AND lea.rid_evt = t1.RID) AS evtApplTicketCnt -->
	  	  , EVT_SEQ as evtSeq
	  	  , t1.WIN_CMPLT_YN as winCmpltYn
		  , CONVERT(varchar, t1.WIN_CMPLT_DT, 120) as winCmpltDt
		  , t1.TIER_LIMIT_YN AS tierLimitYn
		  , (CASE WHEN t1.MAIN_IMG IS NOT NULL THEN 'Y' ELSE 'N' END) AS mainImageYn
	 FROM loy.LOY_EVT_MST t1 WITH (NOLOCK)
	 LEFT OUTER JOIN com.COMM_CODE t2 WITH (NOLOCK) ON t1.EVT_TYPE_CD = t2.CODE_NAME AND t2.GROUP_CODE = 'EVT_TYPE_CD' AND t2.flag = 1 and t2.lang = #{lang}
	 <!-- LEFT OUTER JOIN com.COMM_CODE t3 ON t1.EVT_CAT_CD  = t3.CODE_NAME AND t3.GROUP_CODE = 'EVT_CATEGORY_CD' and t3.flag= 1 and t3.lang = #{lang} -->
	 LEFT OUTER JOIN com.comm_code t4 WITH (NOLOCK) on t1.evt_status_cd = t4.code_name and t4.group_code = 'EVT_STATUS_CD' and t4.flag=1 and t4.lang = #{lang}
	WHERE ${strCondWhere}
	  and ${strWhere}
	  and t1.flag = 1
	  <if test="eventType != null and eventType != ''">
      and t1.EVT_TYPE_CD=#{eventType}
      </if>
 order by ${strOrderby}
		  ${strEndPaging}
	</select>
	
	<select id="getPromotionPopUpList" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEventPlanExcutionResDto">
	/* LoyEventMapper.getPromotionPopUpList */
	SELECT${strColumn},
		 t1.ID AS id ,
	     t1.DISP_NO AS dispNo,
	     t1.CAM_NM  AS camNm,
	     CONVERT(varchar(10), t1.CAM_START_DD, 120)	 AS startDd,
	     CONVERT(varchar(10), t1.CAM_END_DD, 120)  AS endDd,
	     t2.MARK_NAME AS accntSmlType,
	     t3.MARK_NAME AS accntDetailType,
	     t6.MARK_NAME AS offerType,
	   	 t7.MARK_NAME AS promType,
    	 t8.MARK_NAME AS promSubType,
    	 t5.self_tot_amt as selfTotAmt
	FROM mkt.MKT_CAM_MST t1 WITH (NOLOCK)
	LEFT OUTER JOIN com.COMM_CODE t2 WITH (NOLOCK) ON t2.FLAG = 1 AND t2.LANG = #{lang} AND t2.GROUP_CODE = 'DA_PNT_ACCNT_SML_TYPE' 	AND t1.PNT_ACCNT_SML_TYPE_CD = t2.CODE_NAME
	LEFT OUTER JOIN com.COMM_CODE t3 WITH (NOLOCK) ON t3.FLAG = 1 AND t3.LANG = #{lang} AND t3.GROUP_CODE = 'DA_PNT_ACCNT_DETAIL_TYPE' AND t1.PNT_ACCNT_DETAIL_TYPE_CD = t3.CODE_NAME
	JOIN mkt.MKT_CAM_OFFER_REL t4 WITH (NOLOCK) ON t4.cam_id = t1.ID AND t4.FLAG = 1
	JOIN mkt.MKT_OFFER_MST t5 WITH (NOLOCK) ON t4.OFFER_ID = t5.ID AND t5.FLAG = 1
	LEFT OUTER JOIN com.COMM_CODE t6 WITH (NOLOCK) ON t6.FLAG = 1 AND t6.LANG = #{lang} AND t6.GROUP_CODE = 'OFFER_TYPE_CD' 		AND t6.CODE_NAME = t5.OFFER_TYPE_CD
	LEFT OUTER JOIN com.comm_code t7 WITH (NOLOCK)	ON t7.FLAG = 1 AND t7.LANG = #{lang} AND t7.GROUP_CODE = 'LOY_PROM_TYPE' 		AND t7.CODE_NAME = t1.PROM_TYPE 
	LEFT OUTER JOIN com.comm_code t8 WITH (NOLOCK)  ON t8.FLAG = 1 AND t8.LANG = #{lang} AND t8.GROUP_CODE = 'LOY_PROM_SUB_TYPE' 	AND t8.CODE_NAME = t1.prom_sub_type 
   WHERE t1.cam_type_cd = #{camTypeCd}  
     AND t1.CAM_STATUS_CD = 'A'
     AND t1.CAM_START_DD <![CDATA[<=]]>  getDate()
     AND t1.CAM_END_DD <![CDATA[>=]]>  getDate()
	 AND t1.FLAG = 1
	 AND ${strWhere}
	 <if test="@com.icignal.common.util.StringUtil@isNotEmpty(smlTypeCd)">
	 AND t1.PNT_ACCNT_SML_TYPE_CD = #{smlTypeCd}
	 </if>
order by ${strOrderby}
     	 ${strEndPaging}
	</select>
	
	<insert id="insertSaveEventPlane" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.insertSaveEventPlane */
	INSERT
	INTO LOY.LOY_EVT_MST (
		RID,
		CREATE_BY,
		MODIFY_BY,
		CREATE_DATE,
		MODIFY_DATE,
		FLAG,
		EVT_NO,
		EVT_NM,
		EVT_TYPE_CD,
		EVT_CAT_CD,
		APPLY_START_DT,
		APPLY_END_DT,
		<if test="@com.icignal.common.util.StringUtil@isNotEmpty(eventDate)">
		EVT_DT,
		</if>
		<if test="@com.icignal.common.util.StringUtil@isNotEmpty(eventWiningDate)">
		WIN_DT,
		</if>
		EVT_PLACE,
		THUMBNAIL_IMG,
		MAIN_IMG,
		DETAIL_IMG1,
		DETAIL_IMG2,
		DETAIL_IMG3,
		DOWN_FILE,
		DOWN_URL,
		NOTE_TXT,
		ONE_APPLY_TICKET,
		RID_MKT_CAM_MST,
		EVT_STATUS_CD,
		DOWN_FILE_NM,
		EVT_SEQ,
		WIN_CMPLT_YN,
		WIN_CMPLT_DT,
		ADDR_REG_YN,
		DAY_LIMIT_CNT,
		DEVICE_REG_YN,
		TIER_LIMIT_YN,
		USE_PNT_AMT,
		RID_USE_OFR,
		USE_OFR_AMT,
		EVT_WIN_TYPE_CD,
		WIN_MBR_CNT,
		WIN_RATE,
		MAX_APPLY_CNT,
		TOT_LIMIT_CNT,
		BNFT_OFR_AMT,
		EFF_STRT_DAY_CNT,
		RID_BNFT_OFR
		)
	VALUES(
		#{rid},
		#{createBy},
		#{modifyBy},
		 getDate(),
		 getDate(),
		1,
		loy.fn_get_event_no,
		#{eventNm},
		#{eventType},
		#{eventCategory},
		CONVERT(varchar(10), #{voteStartDate}, 120),
		CONVERT(varchar(10), #{voteEndDate}, 120)	,
		<if test="@com.icignal.common.util.StringUtil@isNotEmpty(eventDate)">
		CONVERT(varchar, concat(#{eventDate} , #{eventTime}), 120),
		</if>
		<if test="@com.icignal.common.util.StringUtil@isNotEmpty(eventWiningDate)">
		CONVERT(varchar(10), #{eventWiningDate}, 120),
		</if>
		#{eventPlace},
		#{thumImg},
		#{mainImg},
		#{detailImg1},
		#{detailImg2},
		#{detailImg3},
		#{downFile}, 
		#{downURL},
		#{noteText},
		#{oneEventVoteTicketCnt},
		#{promotionRid},
		'W',
		#{downFileNm},
		#{eventSeq},
		'N',
		NULL,
		#{addrRegYn},
		#{oneMaxCnt},
		#{devRegYn},
		#{tierLimitYn},
		#{usePntAmt},
		#{ofrUseRid},
		#{useOfrAmt},
		#{evtWinTypeCd},
		#{winMbrCnt},
		#{winRate},
		#{maxApplyCnt},
		#{totLimitCnt},
		#{bnftOfrAmt},
		#{effStrtDayCnt},
		#{bnftOfrRid}
		)
	</insert>
	
	<select id="selectEventPlanDetail" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEventPlanExcutionDetailResDto">
	/* LoyEventMapper.selectEventPlanDetail */
	SELECT  
		t1.EVT_NO 															AS evtNo ,
		t1.EVT_NM 															AS evtNm ,
		t1.EVT_TYPE_CD 													AS evtTypeCd,
		t1.EVT_CAT_CD 													AS evtCatCd,
		CONVERT(varchar(10), t1.APPLY_START_DT, 120)    AS applyStartDt,
		CONVERT(varchar(10), t1.apply_end_dt, 120) 			AS applyEndDt,
		t1.EVT_DT 															AS evtDt,
		t1.EVT_PLACE 														AS evtPlace,
		CONVERT(varchar(10), t1.WIN_DT, 120) 					AS winDt,
		t1.THUMBNAIL_IMG 												AS thumbNailImg,
		t1.MAIN_IMG															AS mainImg,
		t1.DETAIL_IMG1 													AS detailImg1,
		t1.DETAIL_IMG2 													AS detailImg2,
		t1.DETAIL_IMG3 													AS detailImg3,
		t1.DOWN_FILE 														AS downFile,
		t1.DOWN_URL 														AS downUrl,
		t1.ONE_APPLY_TICKET 											AS oneApplyTicket,
		t1.MAX_APPLY_CNT 												AS maxApplyCnt,
		t1.NOTE_TXT 														AS noteText,
		t1.DOWN_FILE_NM 												AS fileNm,
		t1.EVT_SEQ															as evtSeq,
		t1.EVT_STATUS_CD 												as evtStatusCd,
		t1.WIN_CMPLT_YN 													as winCmpltYn,
		CONVERT(varchar, t1.WIN_CMPLT_DT, 120) 			as winCmpltDt,
		t1.ADDR_REG_YN 													as addrRegYn,
		t1.RID_MKT_CAM_MST 											as promotionRid,
		t1.DAY_LIMIT_CNT 												AS oneMaxApplyCnt,
		t1.TOT_LIMIT_CNT 												AS totLimitCnt,
		t1.DEVICE_REG_YN 												as devRegYn,
		t1.TIER_LIMIT_YN 													as tierLimitYn,
		t1.USE_PNT_AMT   												as usePntAmt,
		t1.RID_USE_OFR   												as ofrUseRid,
		t1.USE_OFR_AMT   												as useOfrAmt,
		t1.EVT_WIN_TYPE_Cd  											as evtWinTypeCd,
		t1.WIN_MBR_CNT													AS winMbrCnt,
		t1.WIN_RATE 														AS winRate,
		t1.MAX_APPLY_CNT    											AS maxApplyCnt,
		t1.EFF_STRT_DAY_CNT 											AS effStrtDayCnt,
		t1.BNFT_OFR_AMT													AS bnftOfrAmt,
		lo.OFR_NM															AS ticketOfrNm,
		lo2.OFR_NM															AS bnftOfrNm,
		t1.RID_BNFT_OFR													AS bnftOfrRid
	FROM loy.LOY_EVT_MST t1 WITH (NOLOCK)
	LEFT OUTER JOIN LOY.LOY_OFR lo WITH (NOLOCK) ON t1.RID_USE_OFR = lo.RID AND lo.FLAG = 1
	LEFT OUTER JOIN LOY.LOY_OFR lo2 WITH (NOLOCK) ON t1.RID_BNFT_OFR = lo2.RID AND lo2.FLAG = 1
	 WHERE t1.RID = #{rid}
	</select>
	
	<update id="updateEventPlane" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.updateEventPlane */
	UPDATE loy.LOY_EVT_MST
	    SET MODIFY_BY 		= #{modifyBy},
	    	MODIFY_DATE 		=  getDate(),
	     	EVT_NM 				= #{eventNm},
	    	EVT_TYPE_CD 		= #{eventType},
	    	EVT_CAT_CD 		= #{eventCategory},
	    	APPLY_START_DT  	= CONVERT(varchar(10), #{voteStartDate}, 120),
	    	APPLY_END_DT    	= CONVERT(varchar(10), #{voteEndDate}, 120),
	    	<if test="@com.icignal.common.util.StringUtil@isNotEmpty(eventDate)">
	    	EVT_DT          		= CONVERT(varchar, concat(#{eventDate} , #{eventTime}), 120),
	    	</if>
	    	<if test="@com.icignal.common.util.StringUtil@isEmpty(eventDate)">
	    	EVT_DT          		= NULL,
	    	</if>
	    	EVT_PLACE       		= #{eventPlace},
	    	<if test="@com.icignal.common.util.StringUtil@isNotEmpty(eventWiningDate)">
	    	WIN_DT          		= CONVERT(varchar(10), #{eventWiningDate}, 120),
	    	</if>
	    	<if test="@com.icignal.common.util.StringUtil@isEmpty(eventWiningDate)">
	    	WIN_DT          			= NULL,
	    	</if>
	    	THUMBNAIL_IMG   	= #{thumImg},
	    	MAIN_IMG        			= #{mainImg},
	    	DETAIL_IMG1     		= #{detailImg1},
	    	DETAIL_IMG2     		= #{detailImg2},
	    	DETAIL_IMG3     		= #{detailImg3},
	    	DOWN_FILE       		= #{downFile},
	    	DOWN_URL       		= #{downURL},
	    	NOTE_TXT        			= #{noteText},
	    	ONE_APPLY_TICKET 	= #{oneEventVoteTicketCnt},
	    	RID_MKT_CAM_MST  = #{promotionRid},
	    	DOWN_FILE_NM	 	= #{downFileNm},
	    	EVT_SEQ			 		= #{eventSeq},
	    	ADDR_REG_YN      	= #{addrRegYn},
            DAY_LIMIT_CNT    		= #{oneMaxCnt},
            DEVICE_REG_YN    	= #{devRegYn},
            TIER_LIMIT_YN    		= #{tierLimitYn},
            MAX_APPLY_CNT   		= #{maxApplyCnt},
            USE_PNT_AMT      		= #{usePntAmt},
			RID_USE_OFR		 	= #{ofrUseRid},
			USE_OFR_AMT      		= #{useOfrAmt},
			EVT_WIN_TYPE_Cd  	= #{evtWinTypeCd},
			WIN_MBR_CNT      	= #{winMbrCnt},
			WIN_RATE         		= #{winRate},
			BNFT_OFR_AMT		 	= #{bnftOfrAmt},
			EFF_STRT_DAY_CNT 	= #{effStrtDayCnt},
			RID_BNFT_OFR	 		= #{bnftOfrRid},
			TOT_LIMIT_CNT    		= #{totLimitCnt}
  	WHERE flag = 1 
	AND RID = #{rid}
	</update>
	
	<!-- 이벤트 당첨 완료 -->
	<update id="updateEventWinCmplt" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
		/* LoyEventMapper.updateEventWinCmplt */
		UPDATE 
				loy.LOY_EVT_MST
		   SET 
		   		MODIFY_BY    	= #{modifyBy}
		 	   , MODIFY_DATE 	= getDate()
		 	   , WIN_CMPLT_YN	= 'Y'
		 	   , WIN_CMPLT_DT	= getDate()
		 where rid = #{rid}    
	</update>
	
	<update id="deleteEventPlan"  parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.deleteEventPlan */
	UPDATE loy.loy_evt_mst
	   SET MODIFY_BY    = #{modifyBy},
	 	       MODIFY_DATE 	=  getDate(),
	 	       flag = flag + 1
	 where rid = #{rid}    
	</update>
	
	<update id="deleteEvtApplct" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.deleteEvtApplct */
	UPDATE loy.loy_evt_applct
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   flag = flag + 1
	 WHERE rid_evt = #{rid}
	</update>
	
	<update id="deleteEvtProdEntry" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.deleteEvtProdEntry */
	UPDATE loy.loy_evt_prod_entry
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   flag = flag + 1
	 WHERE rid_evt = #{rid}
	</update>
	
	<update id="deleteEvtWinner" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.deleteEvtWinner */
	UPDATE loy.loy_evt_winner
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   flag = flag + 1
	 WHERE rid_evt = #{rid}
	</update>
	
	<update id="updateStartEventPlan" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.updateStartEventPlan */
	UPDATE loy.LOY_EVT_MST
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   EVT_STATUS_CD = 'A'
	 WHERE rid = #{rid}
	</update>
	
	<update id="updateFinishEventPlan" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.updateFinishEventPlan */
	UPDATE loy.LOY_EVT_MST
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   EVT_STATUS_CD = 'E'
	 WHERE rid = #{rid}
	</update>
	
	<update id="updateStopEventPlan" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.updateStopEventPlan */
	UPDATE loy.LOY_EVT_MST
	   SET MODIFY_BY    	= #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   EVT_STATUS_CD = 'S'
	 WHERE rid = #{rid}
	</update>
	
	<select id="validEventPlan" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEventPlanExcutionDetailResDto">
	/* LoyEventMapper.validEventPlan */
	select evt_status_cd as evtStatusCd
	  from loy.loy_evt_mst 
	where rid = #{rid}
	</select>
	
	<select id="evtApplctList" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEvtApplctResDto" fetchSize="5000">
	/* LoyEventMapper.evtApplctList */
	SELECT ${strColumn}
	     , t1.RID	 as rid
    	 , t3.MBR_NO as mbrNo
    	 , t1.RID_MBR AS ridMbr
    	 , t4.CUST_NM
    	 , t4.HHP
    	 , cc1.MARK_NAME as mbrStatus
    	 , CONVERT(varchar, t1.APPLCT_DT, 120) as applctDt
    	 , t1.APPLCT_TICKET_CNT as applctTicketCnt
    	 , t1.SNS_ID as snsId
    	 , t1.APPLCT_URL as applctUrl
    	 , t5.RID as ridEvtWinner
    	 , (CASE WHEN t5.RID IS NOT NULL THEN 'Y' ELSE 'N' END) AS winYn
    	 , CONVERT(varchar, t5.WIN_DT, 120) as winDt
    	 , t5.BNF_YN as bnfYn
    	 , CONVERT(varchar, t5.BNF_DT, 120) as bnfDt
<!--     	 , TO_CHAR(getDate(), 'YYYY') - SUBSTR(t4.BIRTHDT,1,4) + 1 as age -->   
	 	 , t6.MARK_NAME as gender
    	 , t1.MBR_UPLOAD_PATH AS uploadPath
    	 <!-- , t3.ECOMM_MBR_NO AS ecommMbrNo -->
    FROM loy.LOY_EVT_APPLCT t1 WITH (NOLOCK)
   	JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
    JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
    JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
    <if test="eventType != &quot;UGC&quot;">
	LEFT OUTER JOIN loy.LOY_EVT_WINNER t5 WITH (NOLOCK) ON t5.FLAG = 1 AND t5.RID_EVT = t2.RID AND t5.RID_MBR = t1.RID_MBR AND t1.RID = t5.RID_EVT_APPLCT
    </if>
    <if test="eventType == &quot;UGC&quot;">
	JOIN LOY.LOY_EVT_WINNER t5 WITH (NOLOCK) ON t5.FLAG = 1 AND t5.RID_EVT = t2.RID AND t5.RID_MBR = t1.RID_MBR AND t1.RID = t5.RID_EVT_APPLCT    
    </if>
    LEFT OUTER JOIN com.COMM_CODE cc1 WITH (NOLOCK) ON  cc1.CODE_NAME = t3.MBR_STAT_CD AND cc1.GROUP_CODE = 'LOY_MEM_STAT_CD' AND cc1.FLAG = 1 AND cc1.LANG = #{lang}
    LEFT OUTER JOIN com.COMM_CODE t6 WITH (NOLOCK) ON t6.CODE_NAME = t4.GEN_CD AND t6.GROUP_CODE = 'MEMBER_SEX' AND t6.FLAG = 1 AND t6.LANG = #{lang}
    WHERE t1.FLAG = 1
	  AND t1.rid_evt = #{rid}
	  and ${strCondWhere}
	  and ${strWhere}
 order by ${strOrderby}
		  ${strEndPaging}
	</select>
	
	<select id="prodEntryList" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEventProdEntryResDto" fetchSize="5000">
	/* LoyEventMapper.prodEntryList */
	SELECT  t1.RID 			AS rid
		, t1.RID_MBR 		AS ridMbr
		, t1.MBR_NO			AS mbrNo
		, t4.CUST_NM		AS custNm
		, t4.HHP				AS hhpNo
		, t5.MARK_NAME 	AS mbrStatus
		, CASE WHEN t1.BNF_YN = 'Y' THEN '지급'
				ELSE (CASE WHEN t1.BNF_CANCEL_DT IS NULL THEN '' ELSE '지급 취소' END)  END AS bnfYn
		, t6.MARK_NAME 	AS bnfTypeCd
		, CONVERT(varchar, t1.BNF_DT, 120) 			AS bnfDt 
		, CASE WHEN T1.WIN_TYPE_CD = '02' THEN '추가적립' 
				ELSE '기본적립' END 								AS bnfTypeDtl
		, CONVERT(varchar, t1.CREATE_DATE, 120) AS createDate
		, t8.NAME AS createBy
		, CASE WHEN T1.WIN_TYPE_CD = '02' THEN '' 
				ELSE t9.MBR_UPLOAD_PATH END AS uploadPath
		, ${strColumn}
	 FROM loy.LOY_EVT_WINNER t1 WITH (NOLOCK)
	 JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
	 JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
	 JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
	 LEFT OUTER JOIN loy.LOY_EVT_APPLCT t9 WITH (NOLOCK) ON t1.RID_EVT_APPLCT = t9.RID AND t9.FLAG = 1
	 LEFT OUTER JOIN com.COMM_CODE t5 WITH (NOLOCK) ON	t5.CODE_NAME = t3.MBR_STAT_CD AND t5.GROUP_CODE = 'LOY_MBR_STAT_CD'	AND t5.FLAG = 1	AND t5.lang = #{lang}
	 LEFT OUTER JOIN com.COMM_CODE t6 WITH (NOLOCK) ON	t6.CODE_NAME = t1.BNF_TYPE_CD AND t6.GROUP_CODE = 'BNFT_TYPE_CD'	AND t6.FLAG = 1	AND t6.lang = #{lang}
	 LEFT OUTER JOIN com.CRM_USER t7 WITH (NOLOCK) ON t7.RID = t1.CREATE_BY
	 LEFT OUTER JOIN com.EMPLOYEE t8 WITH (NOLOCK) ON t8.ID = t7.ID_EMPLOYEE
	WHERE t1.FLAG = 1
	  AND t1.rid_evt = #{rid}
	  and ${strCondWhere}
	  and ${strWhere}
 order by ${strOrderby}
		  ${strEndPaging}
	</select>
	
	<insert id="insertTransferWinner" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto">
	/* LoyEventMapper.insertTransferWinner */
	INSERT 
	INTO loy.loy_evt_winner(
		rid
		,CREATE_BY
		,MODIFY_BY
		,CREATE_DATE
		,MODIFY_DATE
		,FLAG
		,RID_EVT
		,RID_MBR
		,MBR_NO
		,WIN_DT
		,BNF_YN
		,RID_EVT_APPLCT
	)
	SELECT 
	     #{rid}
		,#{createBy} 
		,#{modifyBy}
		, getDate()
		, getDate()
		,1
		,t1.RID_EVT
		,t1.RID_MBR
		,t1.MBR_NO
		, getDate()
		,'N'
		,RID
	 FROM loy.LOY_EVT_APPLCT t1
	WHERE t1.RID = #{rid}
	</insert>
	
	<select id="validWinnerTransfer" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="java.lang.Integer" >
	/* LoyEventMapper.validWinnerTransfer */
	SELECT COUNT(1)
	  FROM loy.LOY_EVT_WINNER  
	 WHERE RID_EVT = #{rid} 
	   AND MBR_NO = #{mbrNo}
	   AND flag = 1 
	</select>
	
	<parameterMap id="cancelVoteMap" type="map"> 
		<parameter property="eventNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rid" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="modifyBy" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rst" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstmsg" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
 	</parameterMap>
	<update id="cancelVote" parameterMap="cancelVoteMap" statementType="CALLABLE">
	/* LoyEventMapper.cancelVote */
	{
		CALL  LOY.PKG_LOY_BO_EVENT.PROC_EVENT_APPLY_CANCEL(?, ?, ?, ?, ?, ?) 
	}
	</update>
	
	<insert id="insertEvtWinner" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto">
	/* LoyEventMapper.insertEvtWinner */
	INSERT 
	INTO loy.loy_evt_winner(
		rid
		,CREATE_BY
		,MODIFY_BY
		,CREATE_DATE
		,MODIFY_DATE
		,FLAG
		,RID_EVT
		,RID_MBR
		,MBR_NO
		,WIN_DT
		,BNF_YN
	)VALUES(
	     #{id}
		,#{createBy} 
		,#{modifyBy}
		, getDate()
		, getDate()
		,1
		,#{rid}
		,#{ridMbr}
		,#{mbrNo}
		, getDate()
		,'N'
	)
	</insert>
	
	<update id="deleteEventWinner"  parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto">
	/* LoyEventMapper.deleteEventWinner */
	UPDATE loy.LOY_EVT_WINNER
	   SET flag = flag + 1 ,
	   	   MODIFY_BY = #{modifyBy},
	   	   MODIFY_DATE =  getDate()
	 WHERE RID = #{rid}
	</update>
	
	<update id="eventWinnerReset"  parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto">
	/* LoyEventMapper.eventWinnerReset */
	UPDATE loy.LOY_EVT_WINNER
	   SET flag = flag + 1 ,
	   	   MODIFY_BY = #{modifyBy},
	   	   MODIFY_DATE =  getDate()
	 WHERE RID_EVT = #{rid}
	   AND BNF_YN = 'N'
	</update>
	
	<parameterMap id="cancelWinnertMap" type="map">
		<parameter property="eventNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rid" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="modifyBy" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rst" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstmsg" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
 	</parameterMap>
 	<!-- 당첨 취소 -->
	<update id="cancelWinner" parameterMap="cancelWinnertMap" statementType="CALLABLE">
	/* LoyEventMapper.cancelWinner */
	{
		CALL  LOY.PKG_LOY_BO_EVENT.PROC_EVENT_WIN_CANCEL(?, ?, ?, ?, ?, ?) 
	}
	</update>
	
	<parameterMap id="benefitPaymentMap" type="map">
		<parameter property="eventNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rid" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="pType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="modifyBy" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rst" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstmsg" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
 	</parameterMap>
	<update id="benefitPayment" parameterMap="benefitPaymentMap" statementType="CALLABLE">
	/* LoyEventMapper.benefitPayment */
	{
		CALL LOY.PKG_LOY_BO_EVENT.PROC_EVENT_BNF(?, ?, ?, ?, ?, ?, ?) 
	}
	</update>
	
	<parameterMap id="cancleBenefitPaymentMap" type="map">
		<parameter property="eventNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rid" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="modifyBy" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rst" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstmsg" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
 	</parameterMap>
 	<!-- 혜택 지급 취소 -->
	<update id="cancelBenefitPayment" parameterMap="cancleBenefitPaymentMap" statementType="CALLABLE">
	/* LoyEventMapper.cancelBenefitPayment */
	{
		CALL  LOY.PKG_LOY_BO_EVENT.PROC_EVENT_BNF_CANCEL(?, ?, ?, ?, ?, ?) 
	}
	</update>
	
	<select id="selectOverlapCnt" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="java.lang.Integer" >
	/* LoyEventMapper.selectOverlapCnt */
	SELECT COUNT(1) as validCnt
	  FROM loy.LOY_EVT_WINNER  
	 WHERE RID_EVT = #{eventRid} 
	   AND MBR_NO = #{mbrNo}
	   AND flag = 1 
	</select>
	
	<select id="selectMbrInfo" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEvtApplctResDto" >
	/* LoyEventMapper.selectMbrInfo */
	  SELECT RID AS ridMbr 
	    FROM loy.LOY_MBR  
	   WHERE FLAG = 1 
   	     AND MBR_NO = #{mbrNo}
	</select>
	
	<select id="selectProdEntryList" parameterType="com.icignal.loyalty.event.dto.request.LoyProdEntryReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyProdEntryResDto">
	/* LoyEventMapper.selectProdEntryList */
	SELECT  ${strColumn}
		,	t1.RID AS rid
		,	t3.MBR_NO AS mbrNo
		,	t3.RID AS ridMbr
		,	t4.CUST_NM AS custNm
		,	t5.MARK_NAME AS mbrStatus
		,	CONVERT(varchar, t1.REG_DT, 120) AS rdgDt 
		,	t1.RECEIVE_CUST_NM AS receiveCustNm
		,	t1.RECEIVE_HHP_NO AS receiveHhpNo
		,	t1.RECEIVE_ZIP_NO AS receiveZipNo 
		,	t1.RECEIVE_ADDR_H AS receiveAddrH
		,	 t1.RECEIVE_ADDR_D AS receiveAddrD
		,	t1.SEND_YN AS sendYn 
		,	CONVERT(varchar, t1.SEND_DT, 120) AS sendDt
		,	t1.comment_1 as comment1
	FROM loy.LOY_EVT_PROD_ENTRY t1 WITH (NOLOCK)
	JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
	JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
	JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
	LEFT OUTER JOIN com.COMM_CODE t5 WITH (NOLOCK) ON  t5.CODE_NAME = t3.MBR_STAT_CD AND t5.GROUP_CODE = 'LOY_MEM_STAT_CD' AND t5.FLAG = 1 AND t5.lang = #{lang}
	WHERE t1.FLAG = 1
	  AND t1.RID_EVT = #{rid}
	  and ${strCondWhere}
	  and ${strWhere}
 order by ${strOrderby}
		  ${strEndPaging}
	</select>
	
	<update id="updateSendSuccess" parameterType="com.icignal.loyalty.event.dto.request.LoyProdEntryReqDto">
	UPDATE loy.LOY_EVT_PROD_ENTRY
   	   SET MODIFY_BY = #{modifyBy}
   	    ,  MODIFY_DATE =  getDate()
   	    ,  SEND_YN = 'Y'
   	    ,  SEND_DT =  getDate()
     WHERE FLAG = 1 
       AND RID = #{rid}
       AND SEND_YN = 'N'
	</update>
	
	<update id="updateSendCancel" parameterType="com.icignal.loyalty.event.dto.request.LoyProdEntryReqDto">
	UPDATE loy.LOY_EVT_PROD_ENTRY
   	   SET MODIFY_BY = #{modifyBy}
   	    ,  MODIFY_DATE =  getDate()
   	    ,  SEND_YN = 'N'
   	    ,  SEND_DT = NULL
     WHERE FLAG = 1 
       AND RID = #{rid}
       AND SEND_YN = 'Y'
	</update>
	
	<select id="selectOverLapProdEntry" parameterType="com.icignal.loyalty.event.dto.request.LoyProdEntryReqDto" resultType="java.lang.Integer">
	SELECT COUNT(1) as validCnt
	  FROM LOY.LOY_EVT_PROD_ENTRY
	 WHERE RID_EVT = #{eventRid} 
	   AND rid_mbr = #{ridMbr}  
	   AND flag = 1 
	   AND SEND_YN = 'Y'
	</select>
	
	<select id="getMbrInfo" parameterType="com.icignal.loyalty.event.dto.request.LoyProdEntryReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyProdEntryResDto">
	SELECT rid as ridMbr
	  FROM loy.loy_mbr
	 WHERE MBR_NO = #{mbrNo} 
	   AND FLAG = 1
	</select>
	
	<select id="evtAppliClearMask" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEvtApplctResDto">
	/* LoyEventMapper.evtAppliClearMask */ 
	SELECT t1.RID	 as rid
    	 , t3.MBR_NO as mbrNo
    	 , t4.CUST_NM as custNm 
    	 , t5.MARK_NAME as mbrStatus
    	 , t1.APPLCT_DT as applctDt
    	 , t1.APPLCT_TICKET_CNT as applctTicketCnt
    	 , t1.SNS_ID as snsId
    	 , t1.APPLCT_URL as applctUrl
    	 , t3.HHP_NO AS hhpNo
    FROM loy.LOY_EVT_APPLCT t1 WITH (NOLOCK)
   	JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
    JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
    JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
    LEFT OUTER JOIN com.COMM_CODE t5 WITH (NOLOCK) ON  t5.CODE_NAME = t3.MBR_STAT_CD AND t5.GROUP_CODE = 'LOY_MEM_STAT_CD' AND t5.FLAG = 1 AND t5.LANG = #{lang}
    WHERE t1.FLAG = 1
	  AND t1.rid = #{rid}
	</select>
	
	<select id="getWinnerExcelDownList" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEventProdEnrtyExcelResDto" fetchSize="5000">
	/* LoyEventMapper.getWinnerExcelDownList */
	SELECT  t1.RID 		AS rid
		, t1.RID_MBR 	AS ridMbr
		, t1.MBR_NO		AS mbrNo
		, t4.CUST_NM	AS custNm
		<!-- , t3.WEB_ID -->
		, t4.HHP		AS hhpNo
		, t5.MARK_NAME 	AS mbrStatus
		, CASE WHEN t1.BNF_YN = 'Y' THEN '지급'
				ELSE (CASE WHEN t1.BNF_CANCEL_DT IS NULL THEN '' ELSE '지급 취소' END)  END AS bnfYn
		, t6.MARK_NAME 	AS bnfTypeCd
		, CONVERT(varchar, t1.BNF_DT, 120) 	AS bnfDt 
		, CASE WHEN T1.WIN_TYPE_CD = '02' THEN '추가적립' 
				ELSE '기본적립' END 		AS bnfTypeDtl
		, CONVERT(varchar, t1.CREATE_DATE, 120) AS createDate
		, t8.NAME AS createBy
		, CASE WHEN T1.WIN_TYPE_CD = '02' THEN '' 
				ELSE t9.MBR_UPLOAD_PATH END AS uploadPath
		, ${strColumn}
	 FROM loy.LOY_EVT_WINNER t1 WITH (NOLOCK)
	 JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
	 JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
	 JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
	 LEFT OUTER JOIN loy.LOY_EVT_APPLCT t9 WITH (NOLOCK) ON t1.RID_EVT_APPLCT = t9.RID AND t9.FLAG = 1
	 LEFT OUTER JOIN com.COMM_CODE t5 WITH (NOLOCK) ON	t5.CODE_NAME = t3.MBR_STAT_CD AND t5.GROUP_CODE = 'LOY_MBR_STAT_CD'	AND t5.FLAG = 1	AND t5.lang = #{lang}
	 LEFT OUTER JOIN com.COMM_CODE t6 WITH (NOLOCK) ON	t6.CODE_NAME = t1.BNF_TYPE_CD AND t6.GROUP_CODE = 'BNFT_TYPE_CD'	AND t6.FLAG = 1	AND t6.lang = #{lang}
	 LEFT OUTER JOIN com.CRM_USER t7 WITH (NOLOCK) ON t7.RID = t1.CREATE_BY
	 LEFT OUTER JOIN com.EMPLOYEE t8 WITH (NOLOCK) ON t8.ID = t7.ID_EMPLOYEE
	WHERE t1.FLAG = 1
	  AND t1.rid_evt = #{rid}
	  and ${strCondWhere}
	  and ${strWhere}
 order by ${strOrderby}
		  ${strEndPaging}
	</select>
	
	<select id="evtWinnerClearMask" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEvtWinnerResDto" >
	/* LoyEventMapper.evtWinnerClearMask */
	SELECT t1.RID 		AS rid
		, t4.CUST_NM	AS unMaskCustNm
		, t4.HHP		AS unMaskHhp 
	 FROM loy.LOY_EVT_WINNER t1 WITH (NOLOCK)
	 JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
	 JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
	 JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
	 LEFT OUTER JOIN com.COMM_CODE t5 WITH (NOLOCK) ON	t5.CODE_NAME = t3.MBR_STAT_CD AND t5.GROUP_CODE = 'LOY_MEM_STAT_CD'	AND t5.FLAG = 1	AND t5.lang = #{lang}
	 LEFT OUTER JOIN com.COMM_CODE t6 WITH (NOLOCK) ON	t6.CODE_NAME = t1.BNF_TYPE_CD AND t6.GROUP_CODE = 'BNFT_TYPE_CD'	AND t6.FLAG = 1	AND t6.lang = #{lang}
	 LEFT OUTER JOIN com.CRM_USER t7 WITH (NOLOCK) ON t7.RID = t1.CREATE_BY
	 LEFT OUTER JOIN com.EMPLOYEE t8 WITH (NOLOCK) ON t8.ID = t7.ID_EMPLOYEE
	WHERE t1.FLAG = 1
	  AND t1.rid = #{rid}
	</select>
	
	<select id="evtProdEntryClearMask" parameterType="com.icignal.loyalty.event.dto.request.LoyProdEntryReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyProdEntryResDto">
	/* LoyEventMapper.evtProdEntryClearMask */
	SELECT  t1.RID AS rid
		,	t3.MBR_NO AS mbrNo
		,	t4.CUST_NM AS custNm
		,	t5.MARK_NAME AS mbrStatus
		,	CONVERT(varchar, t1.REG_DT, 120) AS rdgDt 
		,	t1.RECEIVE_CUST_NM AS receiveCustNm
		,	t1.RECEIVE_HHP_NO AS receiveHhpNo
		,	t1.RECEIVE_ZIP_NO AS receiveZipNo 
		,	t1.RECEIVE_ADDR_H AS receiveAddrH
		,	t1.RECEIVE_ADDR_D AS receiveAddrD
		,	t1.SEND_YN AS sendYn 
		,	CONVERT(varchar, t1.SEND_DT, 120) AS sendDt
		,	t1.comment_1 as comment1 
	FROM loy.LOY_EVT_PROD_ENTRY t1 WITH (NOLOCK)
	JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
	JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
	JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
	LEFT OUTER JOIN com.COMM_CODE t5 WITH (NOLOCK) ON  t5.CODE_NAME = t3.MBR_STAT_CD AND t5.GROUP_CODE = 'LOY_MEM_STAT_CD' AND t5.FLAG = 1 AND t5.lang = #{lang}
	WHERE t1.FLAG = 1
	  AND t1.rid = #{rid}
	</select>	
	
	<select id="getEvtApplicantDown" parameterType="com.icignal.loyalty.event.dto.request.LoyEvtApplctReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEvtApplctResDto" fetchSize="5000">
	/* LoyEventMapper.getEvtApplicantDown */ 
	SELECT ${strColumn}
	     , t1.RID	 as rid
    	 , t3.MBR_NO as mbrNo
    	 , t4.CUST_NM as custNm 
    	 , t5.MARK_NAME as mbrStatus
    	 , CONVERT(varchar, t1.APPLCT_DT, 120) as applctDt
    	 , t1.APPLCT_TICKET_CNT as applctTicketCnt
    	 , t1.SNS_ID as snsId 
    	 , t1.APPLCT_URL as applctUrl
    	 , t5.RID as ridEvtWinner
    	 , (CASE WHEN t5.RID IS NOT NULL THEN 'Y' ELSE 'N' END) AS winYn
    	 , CONVERT(varchar, t5.WIN_DT, 120) as winDt
    	 , t5.BNF_YN as bnfYn
    	 , CONVERT(varchar, t5.BNF_DT, 120) as bnfDt
    	 , CONVERT(varchar(4), getDate(), 120) - SUBSTRING(t4.BIRTHDT,1,4) + 1 as age
    	 , t6.MARK_NAME as gender
   		 , t4.HHP AS hhpNo
    FROM loy.LOY_EVT_APPLCT t1 WITH (NOLOCK)
   	JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
    JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
    JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
    LEFT OUTER JOIN loy.LOY_EVT_WINNER t5 WITH (NOLOCK) ON t5.FLAG = 1 AND t5.RID_EVT = t2.RID AND t5.RID_MBR = t1.RID_MBR
    LEFT OUTER JOIN com.COMM_CODE t5 WITH (NOLOCK) ON  t5.CODE_NAME = t3.MBR_STAT_CD AND t5.GROUP_CODE = 'LOY_MEM_STAT_CD' AND t5.FLAG = 1 AND t5.LANG = #{lang}
    LEFT OUTER JOIN com.COMM_CODE t6 WITH (NOLOCK) ON t6.CODE_NAME = t4.GEN_CD AND t6.GROUP_CODE = 'MEMBER_SEX' AND t6.FLAG = 1 AND t6.LANG = #{lang}
    WHERE t1.FLAG = 1
	  AND t1.rid_evt = #{rid}
	  and ${strCondWhere} 
	  and ${strWhere}
 order by ${strOrderby}
		  ${strEndPaging}
	</select>
	
	<!-- 이벤트 미리보기 토큰 등록 -->
	<insert id="insertEvtPreviewToken" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPreviewTokenReqDto">
		/* LoyEventMapper.insertEvtPreviewToken */
		INSERT INTO LOY.LOY_EVT_PREVIEW_TOKEN (
			RID
			, CREATE_BY
			, MODIFY_BY
			, CREATE_DATE
			, MODIFY_DATE
			, FLAG
			<!-- , COUNTRY
			, APP_SERVICE_TYPE
			, ACCNT_ID -->
			, RID_MBR
			, FO_USER_ID
			, TOKEN
			, VALID_DT
		) VALUES (
			#{rid}
			, #{createBy}
			, #{modifyBy}
			,  getDate()
			,  getDate()
			, 1
			,<!--  #{country}
			, #{appServiceId}
			, #{accountId} -->
			, #{ridMbr}
			, #{foUserId}
			, #{token}
			,  getDate() + (#{validTime}/24/60)
		)
	</insert>
	
	<!-- 이벤트  미리보기 토큰 조회 -->
	<select id="selectEvtPreviewToken" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPreviewTokenReqDto">
		/* LoyEventMapper.selectEvtPreviewToken */
		SELECT top 1 RID 			AS rid
		     , RID_MBR 				AS ridMbr
		     , FO_USER_ID 			AS foUserId
		     , TOKEN 					AS token
		     , VALID_DT 				AS validDt
		     , (SELECT ATTRIB02 FROM COM.COMM_CODE WHERE FLAG = 1 AND LANG = #{lang} AND GROUP_CODE = 'SERVER_URL' AND CODE_NAME = 'GLOLIVE') AS url
		  FROM LOY.LOY_EVT_PREVIEW_TOKEN
		 WHERE FLAG = 1
		 <if test="@com.icignal.common.util.StringUtil@isNotEmpty(rid)">
		   AND RID = #{rid}
		 </if>
		 <if test="@com.icignal.common.util.StringUtil@isEmpty(rid)">
		   AND CREATE_BY = #{createBy}
		   AND FO_USER_ID = #{foUserId}
		 </if>
		   AND VALID_DT <![CDATA[>=]]>  getDate()
		 ORDER BY CREATE_DATE DESC
	</select>
	
	<!-- 이벤트 미리보기 토큰 삭제 -->
	<update id="deleteEvtPreviewToken" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPreviewTokenReqDto">
		UPDATE LOY.LOY_EVT_PREVIEW_TOKEN
		   SET MODIFY_BY = #{modifyBy}
		     , MODIFY_DATE =  getDate()
		     , flag = flag + 1
		 WHERE FLAG = 1 
		 <if test="@com.icignal.common.util.StringUtil@isNotEmpty(rid)">
		   AND RID = #{rid}
		 </if>
		 <if test="@com.icignal.common.util.StringUtil@isEmpty(rid)">
		   AND CREATE_BY = #{createBy}
		   AND FO_USER_ID = #{foUserId}
		 </if>
	</update>
	
	<!-- 이벤트 신청자 엑셀 다운로드 목록 조회 -->
	<select id="getProdEntryExcelDownList" parameterType="com.icignal.loyalty.event.dto.request.LoyProdEntryReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyProdEntryResDto">
	/* LoyEventMapper.getProdEntryExcelDownList */
	SELECT  ${strColumn}
		,	t1.RID 												AS rid
		,	t3.MBR_NO 										AS mbrNo
		,	t4.CUST_NM 										AS custNm
		,	t5.MARK_NAME 									AS mbrStatus
		,	CONVERT(varchar, t1.REG_DT, 120) 	AS rdgDt 
		,	t1.RECEIVE_CUST_NM 						AS receiveCustNm
		,	t1.RECEIVE_HHP_NO 							AS receiveHhpNo
		,	t1.RECEIVE_ZIP_NO 							AS receiveZipNo 
		,	t1.RECEIVE_ADDR_H 							AS receiveAddrH
		,	t1.RECEIVE_ADDR_D 							AS receiveAddrD
		,	t1.SEND_YN 										AS sendYn 
		,	CONVERT(varchar, t1.SEND_DT, 120)  AS sendDt
		,	t1.comment_1 									AS comment1 
	FROM loy.LOY_EVT_PROD_ENTRY t1 WITH (NOLOCK)
	JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON t1.RID_EVT = t2.RID AND t2.FLAG = 1
	JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON t1.RID_MBR = t3.RID AND t3.FLAG = 1
	JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
	LEFT OUTER JOIN com.COMM_CODE t5 WITH (NOLOCK) ON  t5.CODE_NAME = t3.MBR_STAT_CD AND t5.GROUP_CODE = 'LOY_MEM_STAT_CD' AND t5.FLAG = 1 AND t5.lang = #{lang}
	WHERE t1.FLAG = 1
	  AND t1.RID_EVT = #{rid}
	  and ${strCondWhere}
	  and ${strWhere}
 order by ${strOrderby}
		  ${strEndPaging}
	</select>
	
	<!-- 출석이벤트 이력 조회 -->
	<!-- <select id="getAttendanceList" parameterType="attendanceRequest" resultType="attendanceResponse">
	/* LoyEventMapper.getAttendanceList */
   select  pstDt
		 , modifyDate
		 , LOY.FN_GET_MBRNM_MASKING(secu.fn_getDecrypt(#{cipherKey} ,custNm)) AS custNm
		 , mbrNo
		 , genGbnCd 
		 , smokeYn
		 , pntAmt
		 , txnUniqNo 
		 , mbrStat
		 , pstMbrRid
		 , ridMbr
		 , FN_GET_AGE('Y3',age) AS age
		 , FN_GET_AGE_GROUP(FN_GET_AGE('Y3',ageGroup)) AS ageGroup
		 , totalCount
     FROM ( select  TO_CHAR(TO_DATE(lpme.pst_dt,'YYYY-MM-DD'),'YYYY-MM-DD') AS pstDt
				 , TO_CHAR(lpme.modify_date, 'hh24:mi:ss') as modifyDate
				 , lc.CUST_NM AS custNm
				 , lm.mbr_no AS mbrNo
				 , lc.gen_gbn_cd AS genGbnCd 
				 , lm.SMOKING_YN AS smokeYn
				 , lpme.pnt_amt as pntAmt
				 , lpme.txn_uniq_no as txnUniqNo 
				 , cc.MARK_NAME AS mbrStat
				 , lpme.rid as pstMbrRid
				 , lm.rid as ridMbr
				 , lc.BIRTH_DT AS age
				 , lc.BIRTH_DT AS ageGroup
				 , ${strColumn}
			  from loy.loy_pst_mbr_evt lpme
			  JOIN loy.LOY_MBR lm ON lpme.FLAG = 1 AND lpme.RID_MBR = lm.RID 
			  join loy.LOY_CUST lc ON lc.FLAG = 1 AND lm.RID_CUST = lc.RID
			  LEFT OUTER JOIN com.COMM_CODE cc ON lm.MBR_STAT_CD = cc.CODE_NAME AND cc.GROUP_CODE = 'LOY_MEM_STAT_CD' AND cc.lang = #{lang}
			  where    ${strCondWhere}
			  and      ${strWhere}
		      ORDER BY ${strOrderby}
		        	   ${strEndPaging})

	</select> -->
	
	<!-- 출석이벤트 이력 마스킹 해제 -->
	<!-- <select id="clearMaskAttendance" parameterType="attendanceRequest" resultType="attendanceResponse">
	/*LoyEventMapper.clearMaskAttendance*/
	select secu.fn_getDecrypt(#{cipherKey} ,lc.CUST_NM) AS custNm
	  from loy.loy_pst_mbr_evt lpme
	  JOIN loy.LOY_MBR lm ON lpme.FLAG = 1 AND lpme.RID_MBR = lm.RID 
	  join loy.LOY_CUST lc ON lc.FLAG = 1 AND lm.RID_CUST = lc.RID
	  LEFT OUTER JOIN com.COMM_CODE cc ON lm.MBR_STAT_CD = cc.CODE_NAME AND cc.GROUP_CODE = 'LOY_MEM_STAT_CD' AND cc.lang = #{lang}
	  LEFT OUTER JOIN com.COMM_CODE cc2 on cc2.CODE_NAME = lc.GEN_GBN_CD AND cc2.FLAG = 1 AND cc2.GROUP_CODE='LOY_GEN_CD' AND cc2.Lang = #{lang}
	  where ${strSVCType}
		and lpme.rid = #{pstMbrRid}
	</select> -->
	
	<!--  엑셀 마스킹 풀기 -->
	<!-- <select id="excelDownAttendanceList" parameterType="attendanceRequest" resultType="attendanceResponse" fetchSize="5000">
	/* LOYEvevntPlan.excelDownAttendanceList */	
		select  TO_CHAR(TO_DATE(lpme.pst_dt,'YYYY-MM-DD'),'YYYY-MM-DD') AS pstDt
		 , TO_CHAR(lpme.modify_date, 'hh24:mi:ss') as modifyDate
		 , secu.fn_getDecrypt(#{cipherKey} ,lc.CUST_NM) AS custNm
		 , lm.mbr_no AS mbrNo
		 , cc2.MARK_NAME AS genGbnCd 
		 , lm.SMOKING_YN AS smokeYn
		 , lpme.pnt_amt as pntAmt
		 , lpme.txn_uniq_no as txnUniqNo 
		 , cc.MARK_NAME AS mbrStat
		 , FN_GET_AGE('Y3',lc.BIRTH_DT) AS age
		 , lpme.rid as pstMbrRid
		 , lm.rid as ridMbr
		 , ${strColumn}
	  from loy.loy_pst_mbr_evt lpme
	  JOIN loy.LOY_MBR lm ON lpme.FLAG = 1 AND lpme.RID_MBR = lm.RID 
	  join loy.LOY_CUST lc ON lc.FLAG = 1 AND lm.RID_CUST = lc.RID
	  LEFT OUTER JOIN com.COMM_CODE cc ON lm.MBR_STAT_CD = cc.CODE_NAME AND cc.GROUP_CODE = 'LOY_MEM_STAT_CD' AND cc.lang = #{lang}
	  LEFT OUTER JOIN com.COMM_CODE cc2 on cc2.CODE_NAME = lc.GEN_GBN_CD AND cc2.FLAG = 1 AND cc2.GROUP_CODE='LOY_GEN_CD' AND cc2.Lang = #{lang}
	  where    ${strCondWhere}
	  and      ${strWhere}
      ORDER BY ${strOrderby}
        	   ${strEndPaging}
	</select> -->
	
    
    <!-- 스토어 거래이력 마스킹해제 -->
    <select id="clearMaskingStore" parameterType="com.icignal.loyalty.event.dto.request.LoyStoreListReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyStoreListResDto">
    /* LoyEventMapper.clearMaskingStore */
    SELECT lc.CUST_NM AS custNm
         ,lm.HHP_NO AS hhpNo
    FROM loy.LOY_STORE_TXN lst WITH (NOLOCK)
         JOIN loy.LOY_MBR lm WITH (NOLOCK) ON lm.rid = lst.RID_MBR AND lm.flag =1
         JOIN loy.LOY_CUST lc WITH (NOLOCK) ON lc.RID = lm.RID_CUST AND lc.FLAG = 1
         JOIN loy.LOY_STORE ls WITH (NOLOCK) ON lst.RID_STORE = ls.RID AND ls.FLAG = 1
         JOIN loy.LOY_CHANNEL lch WITH (NOLOCK) ON lst.RID_CHNL = lch.RID AND lch.FLAG = 1
    WHERE lst.flag = 1
          AND lst.RID = #{rid}
    </select>
    
    <!-- 스토어 거래이력 엑셀 다운로드 -->
    <!-- <select id="selectMbrStoreListExport" parameterType="LOYStoreListRequest" resultType="LOYStoreListResponse">
    /* LoyEventMapper.selectMbrStoreList */
    SELECT CASE 
 			 WHEN lm.MBR_STAT_CD = 'C' THEN '탈회회원'
 			 ELSE SECU.fn_getDecrypt(#{cipherKey}, lc.CUST_NM) 
		   END AS custNm  
         , ls.STORE_EVT_NM AS storeNm
         , lch.CHNL_NM AS chnlNm
         , cc1.MARK_NAME AS txnStatus
         , cc2.MARK_NAME AS txnPntTypeㅇ
         , TO_CHAR(lst.TXN_DT,'YYYY-MM-DD HH24:MI:SS') AS txnDt
         , lst.RID AS rid
         , CASE
           	 WHEN lst.TXN_STATUS = 'A' THEN lst.PNT_AMT
           	 ELSE 0
           END AS pntAmt
         , cc4.MARK_NAME AS storeType
         , SECU.fn_getDecrypt(#{cipherKey},lm.HHP_NO) AS hhpNo
         , cc3.MARK_NAME AS gender
         , (SELECT loy.fn_get_age('Y3',lc.BIRTH_DT) FROM DUAL) as age
         , MCM.PNT_ACCNT_CUST_DISP_TXT AS benefitNm 
         , ${strColumn}
    FROM loy.LOY_STORE_TXN lst
         JOIN loy.LOY_MBR lm ON lm.rid = lst.RID_MBR AND lm.flag =1
         JOIN loy.LOY_CUST lc ON lc.RID = lm.RID_CUST AND lc.FLAG = 1
         JOIN loy.LOY_STORE ls ON lst.RID_STORE = ls.RID AND ls.FLAG = 1
         JOIN loy.LOY_CHANNEL lch ON lst.RID_CHNL = lch.RID AND lch.FLAG = 1
         LEFT JOIN LOY.LOY_PNT_ACRL lpa ON lpa.flag = 1 and lst.rid_pnt_txn = lpa.rid_pnt_txn
         LEFT JOIN MKT.MKT_CAM_MST MCM ON MCM.FLAG = 1 AND MCM.DISP_NO = LPA.CAM_NO 
         LEFT OUTER JOIN com.COMM_CODE cc1 ON cc1.CODE_NAME = lst.TXN_STATUS AND cc1.FLAG = 1 AND cc1.GROUP_CODE = 'PNT_TXN_STAT_CD' AND cc1.Lang = #{lang} 
         LEFT OUTER JOIN com.COMM_CODE cc2 on cc2.CODE_NAME = lst.TXN_PNT_TYPE AND cc2.FLAG = 1 AND cc2.GROUP_CODE='PNT_TXN_TYPE' AND cc2.Lang = #{lang}
    	 LEFT OUTER JOIN com.COMM_CODE cc3 on cc3.CODE_NAME = lc.GEN_GBN_CD AND cc3.FLAG = 1 AND cc3.GROUP_CODE='LOY_GEN_CD' AND cc3.Lang = #{lang}
    	 LEFT OUTER JOIN com.COMM_CODE cc4 on cc4.CODE_NAME = ls.STORE_TYPE AND cc4.FLAG = 1 AND cc4.GROUP_CODE='EVT_STORE_TYPE' AND cc4.Lang = 'ko' AND cc4.Lang = #{lang}
    WHERE lst.flag = 1
      AND lst.TXN_STATUS != 'C'
    <if test="@com.icignal.common.util.StringUtil@isNotEmpty(storeNm)">
		  AND ls.store_evt_nm = #{storeNm}
	</if>
	<if test="@com.icignal.common.util.StringUtil@isNotEmpty(chnlNm)">
		  AND lch.chnl_nm = #{chnlNm}
	</if>
	<if test="@com.icignal.common.util.StringUtil@isNotEmpty(shopType)">
		  AND ls.STORE_TYPE = #{shopType}
	</if>
          AND lst.TXN_DT <![CDATA[>=]]> TO_DATE (#{startDt}, 'YYYYMMDD')
          AND lst.TXN_DT <![CDATA[<]]> TO_DATE (#{endDt}, 'YYYYMMDD')+1
          AND ${strWhere}
    ORDER BY ${strOrderby}
             ${strEndPaging}
    </select> -->
    
    	<!-- 이벤트  미리보기 토큰 조회 -->
	<!-- <select id="selectEvtStorePreviewToken" parameterType="infavor.loyalty.event.dto.request.LOYEventPreviewTokenRequestDTO" resultType="infavor.loyalty.event.dto.response.LOYEventPreviewTokenResponseDTO">
		/* LoyEventMapper.selectEvtPreviewToken */
		SELECT RID 			AS rid
		     , RID_MBR 		AS ridMbr
		     , FO_USER_ID 	AS foUserId
		     , TOKEN 		AS token
		     , VALID_DT 	AS validDt
		     , (SELECT ATTRIB02 FROM COM.COMM_CODE WHERE FLAG = 1 AND LANG = #{lang} AND GROUP_CODE = 'SERVER_URL' AND CODE_NAME = 'GLOSHOP') AS url
		  FROM LOY.LOY_EVT_PREVIEW_TOKEN
		 WHERE FLAG = 1
		 <if test="@com.icignal.common.util.StringUtil@isNotEmpty(rid)">
		   AND RID = #{rid}
		 </if>
		 <if test="@com.icignal.common.util.StringUtil@isEmpty(rid)">
		   AND CREATE_BY = #{createBy}
		   AND FO_USER_ID = #{foUserId}
		 </if>
		   AND VALID_DT <![CDATA[>=]]>  getDate()
		   AND ROWNUM = 1
		 ORDER BY CREATE_DATE DESC
	</select> -->
	
	<!-- SHOP 총사용 포인트 -->
	<!-- <select id="selectStoreRdmAmt" parameterType="LOYStoreListRequest" resultType="LOYStoreListResponse">
		SELECT
             CASE 
             	WHEN SUM(lst.PNT_AMT) IS NOT NULL THEN SUM(lst.PNT_AMT) 
             	ELSE 0 
             END AS rdmAmt
      	FROM loy.loy_store_txn lst
		join loy.loy_store ls on lst.RID_STORE = ls.RID
		JOIN loy.LOY_CHANNEL lch ON lst.RID_CHNL = lch.RID AND lch.FLAG = 1
		LEFT OUTER JOIN com.COMM_CODE cc1 ON cc1.CODE_NAME = lst.TXN_STATUS AND cc1.FLAG = 1 AND cc1.GROUP_CODE = 'PNT_TXN_STAT_CD' AND cc1.Lang = #{lang} 
        LEFT OUTER JOIN com.COMM_CODE cc2 on cc2.CODE_NAME = lst.TXN_PNT_TYPE AND cc2.FLAG = 1 AND cc2.GROUP_CODE='PNT_TXN_TYPE' AND cc2.Lang = #{lang}
        where lst.flag = 1
          AND ${strCondWhere}
          <if test="@com.icignal.common.util.StringUtil@isNotEmpty(storeNm)">
		  AND ls.store_evt_nm = #{storeNm}
		  </if>
		  <if test="@com.icignal.common.util.StringUtil@isNotEmpty(chnlNm)">
		  AND lch.chnl_nm = #{chnlNm}
		  </if>
          AND lst.TXN_DT <![CDATA[>=]]> TO_DATE (#{startDt}, 'YYYYMMDD')
          AND lst.TXN_DT <![CDATA[<]]> TO_DATE (#{endDt}, 'YYYYMMDD')+1
          AND lst.TXN_STATUS = 'A'
          AND lst.TXN_PNT_TYPE = '200'
	</select> -->
	
	<!-- SHOP 총적립 포인트 -->
	<!-- <select id="selectStoreAcrlAmt" parameterType="LOYStoreListRequest" resultType="LOYStoreListResponse">
		SELECT
             CASE 
             	WHEN SUM(lst.PNT_AMT) IS NOT NULL THEN SUM(lst.PNT_AMT) 
             	ELSE 0 
             END AS acrlAmt
      	FROM loy.loy_store_txn lst
		join loy.loy_store ls on lst.RID_STORE = ls.RID
		JOIN loy.LOY_CHANNEL lch ON lst.RID_CHNL = lch.RID AND lch.FLAG = 1
		LEFT OUTER JOIN com.COMM_CODE cc1 ON cc1.CODE_NAME = lst.TXN_STATUS AND cc1.FLAG = 1 AND cc1.GROUP_CODE = 'PNT_TXN_STAT_CD' AND cc1.Lang = #{lang} 
        LEFT OUTER JOIN com.COMM_CODE cc2 on cc2.CODE_NAME = lst.TXN_PNT_TYPE AND cc2.FLAG = 1 AND cc2.GROUP_CODE='PNT_TXN_TYPE' AND cc2.Lang = #{lang}
        where lst.flag = 1
          and ${strCondWhere}
          <if test="@com.icignal.common.util.StringUtil@isNotEmpty(storeNm)">
		  AND ls.store_evt_nm = #{storeNm}
		  </if>
		  <if test="@com.icignal.common.util.StringUtil@isNotEmpty(chnlNm)">
		  AND lch.chnl_nm = #{chnlNm}
		  </if>
          AND lst.TXN_DT <![CDATA[>=]]> TO_DATE (#{startDt}, 'YYYYMMDD')
          AND lst.TXN_DT <![CDATA[<]]> TO_DATE (#{endDt}, 'YYYYMMDD')+1
          AND lst.TXN_STATUS = 'A'
          AND lst.TXN_PNT_TYPE = '100'
	</select> -->
	
	<!-- 추가혜택 조회 -->
	<select id="SelectAddPromList" parameterType="com.icignal.loyalty.event.dto.request.LoyAddPromReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyAddPromResDto">
	/* LoyEventMapper.SelectAddPromList */			  
	 SELECT ${strColumn}
		   ,le.rid AS rid
           ,mc.CAM_NM AS camNm
           ,mc.DISP_NO AS dispNo
           ,le.RID_MKT_CAM_MST as camRid
           ,le.COND_TYPE_CD AS conCd
           ,cc1.MARK_NAME AS condType
           ,le.COND_VAL AS condVal
           ,om.self_tot_amt as selfTotAmt
     FROM loy.LOY_EVT_ADD_PROM le WITH (NOLOCK)
     LEFT OUTER JOIN mkt.MKT_CAM_MST mc WITH (NOLOCK) ON le.RID_MKT_CAM_MST = mc.ID AND mc.FLAG = 1
     LEFT OUTER JOIN com.COMM_CODE cc1 WITH (NOLOCK) ON cc1.CODE_NAME = le.COND_TYPE_CD AND cc1.FLAG = 1 AND cc1.GROUP_CODE = 'COND_TYPE_CD' AND cc1.Lang = 'ko'
     JOIN mkt.MKT_CAM_OFFER_REL ore WITH (NOLOCK) ON ore.cam_id = mc.ID AND ore.FLAG = 1
     JOIN mkt.MKT_OFFER_MST om WITH (NOLOCK) ON ore.OFFER_ID = om.ID AND om.FLAG = 1
     WHERE le.flag = 1
     	AND le.RID_EVT_MST = #{rid}
	 	AND ${strCondWhere}
	  	AND ${strWhere}
	 order by ${strOrderby}
			  ${strEndPaging}
	</select>
	
	<!-- 추가혜택 등록 -->
	<insert id="insertAddPromSave" parameterType="com.icignal.loyalty.event.dto.request.LoyAddPromReqDto">
	/* LoyEventMapper.insertAddPromSave */
	INSERT
	INTO LOY.LOY_EVT_ADD_PROM (
		RID,
		CREATE_BY,
		MODIFY_BY,
		CREATE_DATE,
		MODIFY_DATE,
		FLAG,
		<!-- COUNTRY,
		APP_SERVICE_TYPE,
		ACCNT_ID, -->
		RID_EVT_MST,
		COND_TYPE_CD,
		COND_VAL,
		RID_MKT_CAM_MST
		)
	VALUES(
		#{rid},
		#{createBy},
		#{modifyBy},
		 getDate(),
		 getDate(),
		1,
		<!-- #{country},
		#{appServiceId},
		#{accountId}, -->
		#{evtRid},
		#{conCd},
		#{condVal},
		#{camRid}
		)
	</insert>
	
	<!-- 추가혜택 삭제 -->
	<update id="deleteProm" parameterType="com.icignal.loyalty.event.dto.request.LoyAddPromReqDto">
	/* LoyEventMapper.deleteProm */
	UPDATE LOY.LOY_EVT_ADD_PROM
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   flag = flag + 1
	 WHERE RID = #{rid}
	</update>
	
	<!-- 부정회원 등록 -->
	<insert id="InsertLimitMbr" parameterType="com.icignal.loyalty.event.dto.request.LoyLimitMbrReqDto">
	/* LoyEventMapper.InsertLimitMbr */
	INSERT
	INTO LOY.LOY_EVT_LIMIT_MBR (
		RID,
		CREATE_BY,
		MODIFY_BY,
		CREATE_DATE,
		MODIFY_DATE,
		FLAG,
		<!-- COUNTRY,
		APP_SERVICE_TYPE,
		ACCNT_ID, -->
		RID_EVT_MST,
		RID_MBR,
		STATUS,
		START_DT,
		END_DT,
		LIMIT_DESC
		)
	VALUES(
		#{rid},
		#{createBy},
		#{modifyBy},
		 getDate(),
		 getDate(),
		1,
		<!-- #{country},
		#{appServiceId},
		#{accountId}, -->
		#{evtRid},
		#{ridMbr},
		'A',
		CONVERT(varchar(10), #{startDt}, 120),
		CONVERT(varchar(10), #{endDt}, 120),
		#{limitDesc}
		)
	</insert>
	
	<!-- 부정회원 중복체크 -->
	<select id="validLimitMbr" parameterType="com.icignal.loyalty.event.dto.request.LoyLimitMbrReqDto" resultType="java.lang.Integer" >
	/* LoyEventMapper.validLimitMbr */
	SELECT COUNT(1)
	  FROM loy.LOY_EVT_LIMIT_MBR
	 WHERE RID_EVT_MST = #{evtRid} 
	   AND RID_MBR = #{ridMbr}
	   AND STATUS = 'A'
	   AND FLAG = 1
	   AND CONVERT(varchar(10), getDate(), 120) BETWEEN START_DT AND END_DT
	</select>
	
	<!-- 부정회원 조회 -->
	<select id="SelectLimitMbrList" parameterType="com.icignal.loyalty.event.dto.request.LoyLimitMbrReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyLimitMbrResDto">
	/* LoyEventMapper.SelectLimitMbrList */
	SELECT ${strColumn},
	 		limMbr.RID AS rid,
	 		limMbr.RID_MBR AS ridMbr,
     		t3.MBR_NO AS mbrNo,
 	 		t4.CUST_NM as custNm,
      		CONVERT(varchar(10), limMbr.START_DT, 120) AS startDt,
      		CONVERT(varchar(10), limMbr.END_DT, 120) AS endDt,
      		limMbr.STATUS AS statusCd,
      		cc1.MARK_NAME AS status,
      		limMbr.LIMIT_DESC AS limDesc,
      		limMbr.RELEA_DESC AS relDesc
    FROM loy.LOY_EVT_LIMIT_MBR limMbr WITH (NOLOCK)
	JOIN loy.LOY_EVT_MST t2 WITH (NOLOCK) ON limMbr.RID_EVT_MST = t2.RID AND t2.FLAG = 1
	JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON limMbr.RID_MBR = t3.RID AND t3.FLAG = 1
	JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
	LEFT OUTER JOIN com.COMM_CODE cc1 WITH (NOLOCK) ON cc1.CODE_NAME = limMbr.STATUS AND cc1.FLAG = 1 AND cc1.GROUP_CODE = 'LOY_CHNL_STAT_CD' AND cc1.Lang = 'ko'
    WHERE limMbr.FLAG=1
    	AND limMbr.RID_EVT_MST = #{rid}
		AND ${strCondWhere}
	  	AND ${strWhere}
	order by ${strOrderby}
			 ${strEndPaging}
	</select>
	
	<!-- <select id="selectPointMallPreviewToken" parameterType="infavor.loyalty.event.dto.request.LOYEventPreviewTokenRequestDTO" resultType="infavor.loyalty.event.dto.response.LOYEventPreviewTokenResponseDTO">
	/* LoyEventMapper.selectEvtPreviewToken */
	SELECT RID 			AS rid
	     , RID_MBR 		AS ridMbr
	     , FO_USER_ID 	AS foUserId
	     , TOKEN 		AS token
	     , VALID_DT 	AS validDt
	     , (SELECT ATTRIB02 FROM COM.COMM_CODE WHERE FLAG = 1 AND LANG = #{lang} AND GROUP_CODE = 'SERVER_URL' AND CODE_NAME = 'POINTMALL') AS url
	  FROM LOY.LOY_EVT_PREVIEW_TOKEN
	 WHERE FLAG = 1
	 <if test="@com.icignal.common.util.StringUtil@isNotEmpty(rid)">
	   AND RID = #{rid}
	 </if>
	 <if test="@com.icignal.common.util.StringUtil@isEmpty(rid)">
	   AND CREATE_BY = #{createBy}
	   AND FO_USER_ID = #{foUserId}
	 </if>
	   AND VALID_DT <![CDATA[>=]]> SYSDATE
	   AND ROWNUM = 1
	 ORDER BY CREATE_DATE DESC
	</select> -->
	
	<!-- 부정등록회원 마스킹 해제 -->                                                                             
	<select id="LimitMbrClearMask" parameterType="com.icignal.loyalty.event.dto.request.LoyLimitMbrReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyLimitMbrResDto">
    SELECT t4.CUST_NM as custNm                                 
    FROM loy.LOY_EVT_LIMIT_MBR limMbr WITH (NOLOCK)
	JOIN loy.LOY_MBR t3 WITH (NOLOCK) ON limMbr.RID_MBR = t3.RID AND t3.FLAG = 1
	JOIN loy.LOY_CUST t4 WITH (NOLOCK) ON t3.RID_CUST = t4.RID AND t4.FLAG = 1
    WHERE limMbr.FLAG=1
    	AND limMbr.rid = #{rid}
	</select>   
	
	<!-- 부정등록회원 해지 -->
	<update id="CancelLimitMbr" parameterType="com.icignal.loyalty.event.dto.request.LoyLimitMbrReqDto">
	/* LoyEventMapper.CancelLimitMbr */
	UPDATE loy.LOY_EVT_LIMIT_MBR
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   STATUS = 'I',
	 	   RELEA_DESC = #{releaDesc}
	 WHERE RID = #{rid}
	</update>
	
	<!--  예약서비스 미리보기 토큰 조회 -->
	<!-- <select id="selectReservPreviewToken"  parameterType="infavor.loyalty.event.dto.request.LOYEventPreviewTokenRequestDTO" resultType="infavor.loyalty.event.dto.response.LOYEventPreviewTokenResponseDTO">
	/* LoyEventMapper.selectReservPreviewToken */
		SELECT RID 			AS rid
		     , RID_MBR 		AS ridMbr
		     , FO_USER_ID 	AS foUserId
		     , TOKEN 		AS token
		     , VALID_DT 	AS validDt
		     , (SELECT ATTRIB02 FROM COM.COMM_CODE WHERE FLAG = 1 AND LANG = #{lang} AND GROUP_CODE = 'SERVER_URL' AND CODE_NAME = 'RESERVATION') AS url
		  FROM LOY.LOY_EVT_PREVIEW_TOKEN
		 WHERE FLAG = 1
		 <if test="@com.icignal.common.util.StringUtil@isNotEmpty(rid)">
		   AND RID = #{rid}
		 </if>
		 <if test="@com.icignal.common.util.StringUtil@isEmpty(rid)">
		   AND CREATE_BY = #{createBy}
		   AND FO_USER_ID = #{foUserId}
		 </if>
		   AND VALID_DT <![CDATA[>=]]> SYSDATE
		   AND ROWNUM = 1
		 ORDER BY CREATE_DATE DESC
	</select>      -->                                                                                  
	         
	<!-- 부정등록회원 삭제 -->
	<update id="deleteLimitMbr" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.deleteLimitMbr */
	UPDATE loy.LOY_EVT_LIMIT_MBR
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   STATUS = 'I',
	 	   flag = flag + 1
	 WHERE RID_EVT_MST = #{rid}
	</update>
	
	<!-- 추가혜택 삭제 -->
	<update id="deletePromotion" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.deletePromotion */
	UPDATE LOY.LOY_EVT_ADD_PROM
	   SET MODIFY_BY    = #{modifyBy},
	 	   MODIFY_DATE 	=  getDate(),
	 	   flag = flag + 1
	 WHERE RID_EVT_MST = #{rid}
	</update>
	
	<select id="selectWinningCond" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyEventWinningCondResDto">
	/* LoyEventMapper.selectWinningCond  */
	SELECT COUNT(DISTINCT(lea.RID_MBR)) apllicantCnt
		,  SUM(lea.APPLCT_TICKET_CNT) as voteCnt
	  FROM loy.LOY_EVT_APPLCT lea WITH (NOLOCK)
	  JOIN loy.LOY_MBR lm WITH (NOLOCK) ON lea.RID_MBR = lm.RID AND lm.FLAG = 1 AND lm.MBR_STAT_CD = 'A'
	 WHERE lea.RID_EVT = #{rid}
	   AND lea.FLAG = 1
	</select>	                       	                                                     

	<!-- 이미지 삭제 업데이트 -->
	<update id="updateEventEmg" parameterType="com.icignal.loyalty.event.dto.request.LoyEventPlanExcutionReqDto">
	/* LoyEventMapper.updateEventEmg */
	UPDATE loy.LOY_EVT_MST
	    SET MODIFY_BY 	= #{modifyBy},
	    	MODIFY_DATE 	=  getDate(),
	    	${fileNm}   = NULL                                                          
  	WHERE flag = 1 
	AND RID = #{rid}
	</update>

	<!-- 출석이벤트 총적립 및 적립별 총액 조회-->
	<!-- <select id="getAttendAcrlPoint" parameterType="attendanceRequest" resultType="attendanceResponse">
	/* LoyEventMapper.getAttendAcrlPoint */
		SELECT
             CASE 
             	WHEN sum(lpme.pnt_amt) IS NOT NULL THEN SUM(lpme.PNT_AMT) 
             	ELSE 0
             END AS acrlAmt,
             sum(decode(lpme.PNT_AMT,'100',lpme.PNT_AMT,0)) AS tot100p,
             sum(decode(lpme.PNT_AMT,'200',lpme.PNT_AMT,0)) AS tot200p,
             sum(decode(lpme.PNT_AMT,'500',lpme.PNT_AMT,0)) AS tot500p,
             sum(decode(lpme.PNT_AMT,'5000',lpme.PNT_AMT,0)) AS tot5000p
       FROM loy.loy_pst_mbr_evt lpme
       JOIN loy.LOY_MBR lm ON lpme.FLAG = 1 AND lpme.RID_MBR = lm.RID 
	   join loy.LOY_CUST lc ON lc.FLAG = 1 AND lm.RID_CUST = lc.RID
	   LEFT OUTER JOIN com.COMM_CODE cc ON lm.MBR_STAT_CD = cc.CODE_NAME AND cc.GROUP_CODE = 'LOY_MEM_STAT_CD' AND cc.lang = #{lang}
	   where ${strCondWhere}
	   AND   lpme.FLAG = 1
	</select> -->

	<!-- UGC 목록 조회-->
	<select id="getUGCList" parameterType="com.icignal.loyalty.event.dto.request.LoyUGCListReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyUGCListResDto">
    /* LoyEventMapper.getUGCList*/
	SELECT totalCount
		, mbrNO
		, CUST_NM AS custNM
		, MBR_STAT_CD
		, status
		, total
		, ridMbr
		, tot_stamp
		, PKG_LOY_API_EVENT.FN_GET_UGC_STMP(RID_MBR,RID_EVT) AS stamp
		FROM(
			SELECT ${strColumn},
			      A.MBR_NO AS mbrNO,
			      C.CUST_NM AS CUST_NM,
			      A.MBR_STAT_CD AS MBR_STAT_CD ,
			      D.MARK_NAME AS status,
			      B.TOT_CP AS total,
			      A.RID as ridMbr,
			      B.tot_stamp AS tot_stamp,
			      B.RID_MBR AS RID_MBR, 
			      B.RID_EVT AS  RID_EVT 
			FROM LOY.LOY_MBR A JOIN
		      (
		      SELECT T1.RID_MBR, T1.RID_EVT, ISNULL(T2.CP_CNT, 0) AS TOT_CP, t1.tot_stamp AS tot_stamp
		      FROM (
		         	SELECT RID_MBR , RID_EVT, COUNT(*) AS tot_stamp
		        	 FROM loy.LOY_EVT_WINNER A
		         	WHERE RID_EVT =#{rid}
		 			AND FLAG=1  AND WIN_TYPE_CD = '01'
		 			GROUP BY  RID_EVT, RID_MBR
		 			) T1 LEFT JOIN
					(
					SELECT rid_mbr, count(*) AS CP_CNT
			 		 FROM LOY.LOY_EVT_WINNER WHERE RID_EVT = #{rid} AND WIN_TYPE_CD = '02' AND FLAG=1
			        GROUP BY RID_MBR
			        ) T2 ON T1.RID_MBR = T2.RID_MBR
		      ) B ON A.RID = B.RID_MBR
		    JOIN LOY.LOY_CUST C ON A.RID_CUST = C.RID
		    LEFT JOIN COM.COMM_CODE D ON A.MBR_STAT_CD = D.CODE_NAME AND D.FLAG = 1 AND D.LANG='ko' AND D.GROUP_CODE ='LOY_MEM_STAT_CD'
			where ${strCondWhere} and ${strWhere}	
			order by ${strOrderby}
				     ${strEndPaging}
)
        
	</select>
	
	<!-- UGC 달성총인원, 횟수 조회 -->
	<select id="getUGCAch" parameterType="com.icignal.loyalty.event.dto.request.LoyUGCAchReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyUGCAchResDto">
	/* LoyEventMapper.getUGCAch*/
    SELECT totPnt.totalPnt AS tot_p
	     , totPnt.tot_cnt AS tot_cnt
	     , totStmp.tot_stmp AS tot_stmp
	     , totMbr.mbrCnt AS tot_mbr_cnt
 	FROM (
			SELECT count(DISTINCT lm.RID) AS totalPnt 
		  	     , count (lm.rid) AS tot_cnt
		  	FROM loy.LOY_EVT_WINNER lew WITH (NOLOCK)
		  	JOIN Loy.LOY_MBR lm WITH (NOLOCK) ON lew.RID_EVT=#{rid} AND lm.rid=lew.RID_MBR AND lew.WIN_TYPE_CD='02' AND lm.FLAG=1
		  	WHERE lew.FLAG=1
		 ) totPnt,
	 	 (
	  		SELECT nvl(sum(lew.WIN_TYPE_CD),0) tot_stmp
	    	FROM loy.LOY_EVT_WINNER lew WITH (NOLOCK)
	  		JOIN Loy.LOY_MBR lm WITH (NOLOCK) ON lew.RID_EVT=#{rid} AND lm.rid=lew.RID_MBR AND lew.WIN_TYPE_CD='01' AND lm.FLAG=1
	 		WHERE lew.FLAG=1
	  	 )totStmp,
	 	 (
	  		SELECT COUNT(DISTINCT lm.RID) AS mbrCnt
	    	FROM loy.LOY_EVT_WINNER lew WITH (NOLOCK)
	  		JOIN Loy.LOY_MBR lm WITH (NOLOCK) ON lew.RID_EVT=#{rid} AND lm.rid=lew.RID_MBR AND lm.FLAG=1
	  		WHERE lew.FLAG=1
	  	 )totMbr
	</select>
	                    
	<!-- 	UGC이력 마스킹 해제           -->          
    <select id="ugcMbrclearMasking" parameterType="com.icignal.loyalty.event.dto.request.LoyUGCListReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyUGCListResDto">
    /* LoyEventMapper.ugcMbrclearMasking */
 	select lc.CUST_NM as custNM
 		  , lm.rid as ridMbr
	  FROM loy.LOY_CUST lc WITH (NOLOCK)  
	  join loy.LOY_MBR lm WITH (NOLOCK) ON lm.RID_CUST = lc.RID
	 WHERE lm.RID = #{ridMbr}
    </select>
    
    <!-- 	UGC이력 엑셀 다운로드          -->          
    <select id="ugcListExport" parameterType="com.icignal.loyalty.event.dto.request.LoyUGCListReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyUGCListResDto">
  /* ugcListExport */
  SELECT
		${strColumn},
		A.MBR_NO AS mbrNO,
		C.CUST_NM AS custNM,
		A.MBR_STAT_CD ,
		D.MARK_NAME AS status,
		B.STMP_CNT AS stamp,
		B.TOT_CP AS total,
		A.RID as ridMbr,
		B.tot_stamp AS tot_stamp
	FROM LOY.LOY_MBR A JOIN WITH (NOLOCK)
		(
		SELECT T1.RID_MBR, T1.STMP_CNT, ISNULL(T2.CP_CNT, 0) AS TOT_CP, t3.tot_stamp AS tot_stamp
		FROM (
			SELECT RID_MBR , PKG_LOY_API_EVENT.FN_GET_UGC_STMP(RID_MBR, RID_EVT) AS STMP_CNT
			FROM loy.LOY_EVT_WINNER A
			WHERE RID_EVT =#{rid} AND FLAG=1
			GROUP BY RID_MBR , RID_EVT
			) T1 LEFT JOIN
			(
			SELECT rid_mbr, count(*) AS CP_CNT
			FROM LOY.LOY_EVT_WINNER WHERE RID_EVT = #{rid} AND WIN_TYPE_CD = '02' AND FLAG=1
			GROUP BY RID_MBR
			) T2 ON T1.RID_MBR = T2.RID_MBR LEFT JOIN
			(
			SELECT rid_mbr, count(*) AS tot_stamp
			FROM LOY.LOY_EVT_WINNER WHERE RID_EVT = #{rid} AND WIN_TYPE_CD = '01' AND FLAG=1
			GROUP BY RID_MBR
			) T3 ON T1.RID_MBR = T3.RID_MBR
		) B ON A.RID = B.RID_MBR
	JOIN LOY.LOY_CUST C WITH (NOLOCK) ON A.RID_CUST = C.RID
	LEFT JOIN COM.COMM_CODE D WITH (NOLOCK) ON A.MBR_STAT_CD = D.CODE_NAME AND D.FLAG = 1 AND D.LANG='ko' AND D.GROUP_CODE ='LOY_MEM_STAT_CD'
	where ${strCondWhere}	
    </select>
    
    <!-- 추가혜택 중복체크 -->
	<select id="validLimitProm" parameterType="com.icignal.loyalty.event.dto.request.LoyAddPromReqDto" resultType="java.lang.Integer" >
	/* LoyEventMapper.validLimitProm */
	SELECT COUNT(1)
	  FROM LOY.LOY_EVT_ADD_PROM
	 WHERE RID_EVT_MST = #{evtRid} 
	   AND FLAG = 1
	</select>
	
	<!-- 추가혜택 조회 -->
	<select id="selectAddProm" parameterType="com.icignal.loyalty.event.dto.request.LoyAddPromReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyAddPromResDto" >
	/* LoyEventMapper.selectAddProm */
	SELECT mc.CAM_NM 					AS camNm
           ,mc.DISP_NO 						AS dispNo
           ,le.RID_MKT_CAM_MST 		AS camRid
           ,le.COND_TYPE_CD 			AS conCd
           ,cc1.MARK_NAME 				AS condType
           ,le.COND_VAL 					AS condVal
     FROM loy.LOY_EVT_ADD_PROM le WITH (NOLOCK)
     LEFT OUTER JOIN mkt.MKT_CAM_MST mc WITH (NOLOCK) ON le.RID_MKT_CAM_MST = mc.ID AND mc.FLAG = 1
     LEFT OUTER JOIN com.COMM_CODE cc1 WITH (NOLOCK) ON cc1.CODE_NAME = le.COND_TYPE_CD AND cc1.FLAG = 1 AND cc1.GROUP_CODE = 'COND_TYPE_CD' AND cc1.Lang = 'ko'
     WHERE le.flag = 1
     AND le.rid = #{rid}
	</select>
	
	<update id="updatePromSave" parameterType="com.icignal.loyalty.event.dto.request.LoyAddPromReqDto">
	/* LoyEventMapper.updatePromSave */
	UPDATE loy.LOY_EVT_ADD_PROM
	SET MODIFY_BY    	= #{modifyBy}
	 	, MODIFY_DATE 	=  getDate()
	 	, COND_TYPE_CD	= #{conCd}
	 	, COND_VAL	= #{condVal}
	 	, RID_MKT_CAM_MST = #{camRid}
	where RID_EVT_MST = #{evtRid}
	and flag=1
	</update>
	
    <!--  출석이벤트 참여횟수 및 참여인원, 비율 조회 -->
    <!-- <select id="getAttendAcrlJoin" parameterType="attendanceRequest" resultType="attendanceResponse">
    /* LoyEventMapper.getAttendAcrlJoin */
    	select count(lpme.PNT_AMT) AS acrlJoin,
    		 sum(decode(lpme.PNT_AMT,'100',1,0)) AS cnt100p,
             sum(decode(lpme.PNT_AMT,'200',1,0)) AS cnt200p,
             sum(decode(lpme.PNT_AMT,'500',1,0)) AS cnt500p,
             sum(decode(lpme.PNT_AMT,'5000',1,0)) AS cnt5000p,
        	 COUNT(DISTINCT lm.MBR_NO) AS totMbr
      	from loy.loy_pst_mbr_evt lpme
	  	JOIN loy.LOY_MBR lm ON lpme.FLAG = 1 AND lpme.RID_MBR = lm.RID 
	  	join loy.LOY_CUST lc ON lc.FLAG = 1 AND lm.RID_CUST = lc.RID
	   	LEFT OUTER JOIN com.COMM_CODE cc ON lm.MBR_STAT_CD = cc.CODE_NAME AND cc.GROUP_CODE = 'LOY_MEM_STAT_CD' AND cc.lang = 'ko'
	  	where    ${strCondWhere}
	  	AND   lpme.FLAG = 1
	  	
    </select> -->
    <!-- 출석이벤트 연령별 인원 조회 -->
    <!-- <select id="getAttendAgeGroupCnt" parameterType="attendanceRequest" resultType="attendanceResponse">
    /* LoyEventMapper.getAttendAgeGroupCnt */	  
		SELECT  SUM(DECODE(FN_GET_AGE_GROUP(FN_GET_AGE('Y3',hr.birthDt)),'10대',1 , 0  )) AS s10,
				SUM(DECODE(FN_GET_AGE_GROUP(FN_GET_AGE('Y3',hr.birthDt)),'20대',1 , 0  )) AS s20,
			   SUM(DECODE(FN_GET_AGE_GROUP(FN_GET_AGE('Y3',hr.birthDt)),'30대',1 , 0  )) AS s30,
			   SUM(DECODE(FN_GET_AGE_GROUP(FN_GET_AGE('Y3',hr.birthDt)),'40대',1 , 0  )) AS s40,
			   SUM(DECODE(FN_GET_AGE_GROUP(FN_GET_AGE('Y3',hr.birthDt)),'50대',1 , 0  )) AS s50,
			   SUM(DECODE(FN_GET_AGE_GROUP(FN_GET_AGE('Y3',hr.birthDt)),'60대이상',1 , 0  )) AS over60s
		FROM(
		    SELECT 	DISTINCT lpme.RID_MBR
		    	  , lc.BIRTH_DT AS birthDt
		 	  from loy.loy_pst_mbr_evt lpme
			  JOIN loy.LOY_MBR lm ON lpme.FLAG = 1 AND lpme.RID_MBR = lm.RID 
			  join loy.LOY_CUST lc ON lc.FLAG = 1 AND lm.RID_CUST = lc.RID
			  LEFT OUTER JOIN com.COMM_CODE cc ON lm.MBR_STAT_CD = cc.CODE_NAME AND cc.GROUP_CODE = 'LOY_MEM_STAT_CD' AND cc.lang = 'ko'
	  		 where    ${strCondWhere}
			   AND   lpme.FLAG = 1) hr
    </select> -->
    
    <!-- 추가혜택 조건값 조회 -->
	<select id="selectAddPromCondVal" parameterType="com.icignal.loyalty.event.dto.request.LoyAddPromReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyAddPromResDto">
	/* LoyEventMapper.selectAddPromCondVal */			  
	 SELECT le.COND_VAL AS condVal
     FROM loy.LOY_EVT_ADD_PROM le
     WHERE le.flag = 1
     	AND le.RID_EVT_MST = #{rid}
	</select>

    <select id="selectApplicantCnt" parameterType="com.icignal.loyalty.event.dto.request.LoyApplctRdmReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyApplctRdmResDto">
    /* LoyEventMapper.selectApplicantCnt */
    SELECT COUNT(*)	AS voteCnt
		,  COUNT(DISTINCT lea.rid_mbr) AS voteMbrCnt
  	  FROM loy.LOY_EVT_APPLCT lea WITH (NOLOCK) 
  	  JOIN loy.LOY_MBR lm WITH (NOLOCK) ON lm.RID = lea.RID_MBR AND lm.MBR_STAT_CD = 'A' AND lm.FLAG = 1
	 WHERE lea.FLAG = 1 
   	   AND lea.RID_EVT = #{eventRid}
    </select>
    
    <update id="getRdmWinner" parameterType="com.icignal.loyalty.event.dto.request.LoyApplctRdmReqDto" statementType="CALLABLE">
    	/* LoyEventMapper.getRdmWinner */
    	{ call loy.PKG_LOY_BO_EVENT.PROC_EVENT_AUTO_WINNING(
    			 #{eventRid}
    		   , #{winCnt}
    		   , #{modifyBy}
    		   , #{RST		, mode = OUT, jdbcType=VARCHAR, javaType=String}
    		   , #{RST_CD	, mode = OUT, jdbcType=VARCHAR, javaType=String}
    		   , #{RST_MSG	, mode = OUT, jdbcType=VARCHAR, javaType=String}
    	)}
    </update>
    
    <select id="validCheckWinnerTrans" parameterType="com.icignal.loyalty.event.dto.request.LoyApplctRdmReqDto"  resultType="java.lang.Integer" >
   /* LoyEventMapper.validCheckWinnerTrans */
    SELECT COUNT(*)
	  FROM LOY.LOY_EVT_MST lem
	 WHERE lem.FLAG = 1
	   AND lem.RID = #{eventRid}
	   AND (lem.APPLY_END_DT <![CDATA[<]]> getDate() OR EVT_STATUS_CD = 'E')
    </select>
    
    <!-- 부정회원 등록 및 취소, 이벤트 당첨완료 프로시저 호출 -->
    <update id="InsertMbrMsg" parameterType="com.icignal.loyalty.event.dto.request.LoyApplctRdmReqDto" statementType="CALLABLE">
    	/* LoyEventMapper.InsertMbrMsg */
    	{ call loy.PKG_LOY_API_ALERT.PROC_ALERT_MSG_REG(
    			 #{type}
    		   , #{mbrRid}
    		   , #{route}
    		   , #{msg}
    		   , #{actionDt}
    		   , #{createBy}
    		   , #{status}
    		   , #{rid}
    		   , #{flag}
    		   , #{RST		, mode = OUT, jdbcType=VARCHAR, javaType=String}
    		   , #{RST_CD	, mode = OUT, jdbcType=VARCHAR, javaType=String}
    		   , #{RST_MSG	, mode = OUT, jdbcType=VARCHAR, javaType=String}
    	)}
    </update>
    
    <!-- 부정등록 테이블의 RID를 조회 -->
    <select id="getInsertLimitMbr" parameterType="com.icignal.loyalty.event.dto.request.LoyLimitMbrReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyLimitMbrResDto">
    /* LoyEventMapper.getInsertLimitMbr */
    SELECT rid
  	  FROM loy.LOY_EVT_LIMIT_MBR 
	 WHERE FLAG = 1 
	   AND RID_MBR	   = #{mbrRid}
   	   AND RID_EVT_MST = #{evtRid}
   	   AND STATUS      = 'A'
    </select>
    
    <!-- 부정등록 테이블의 RID를 조회 -->
    <select id="selectTierLimitList" parameterType="com.icignal.loyalty.event.dto.request.LoyUGCListReqDto" resultType="com.icignal.loyalty.event.dto.response.LoyTierLimitListResDto">
    /* LoyEventMapper.selectTierLimitList */
   		SELECT ee.NAME AS createByNm
                        , CONVERT(varchar, mt.CREATE_DATE, 120)  AS createDate
                        , mt.RID AS rid
                        , t1.TIER_TYPE_CD as tierCd
                        , t1.TIER_NM as tierNm
                        , ${strColumn}
        FROM loy.LOY_EVT_MBR_TIER mt WITH (NOLOCK)
        JOIN loy.loy_tiers t1 on t1.flag = 1
 		and t1.rid = mt.RID_TIER
 		JOIN LOY.LOY_TIERS_GRP ltg WITH (NOLOCK) ON ltg.RID = t1.RID_TG AND ltg.FLAG = 1
 		and ltg.STAT_CD = 'A'
        JOIN com.CRM_USER cu WITH (NOLOCK) ON cu.RID = mt.CREATE_BY AND cu.FLAG = 1
    	JOIN com.EMPLOYEE ee WITH (NOLOCK) ON ee.ID = cu.ID_EMPLOYEE
    	WHERE mt.FLAG = 1
        AND ${strCondWhere}
	    AND ${strWhere}
	    order by ${strOrderby}
			 ${strEndPaging}
    </select>
    
    
</mapper>