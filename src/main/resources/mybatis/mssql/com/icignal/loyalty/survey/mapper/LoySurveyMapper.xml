<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icignal.loyalty.survey.mapper.LoySurveyMapper">

	<select id="selectSurveyList" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyListResDto">
		/* LoySurveyMapper.selectSurveyList */
		SELECT LSM.RID                                                                                         AS ridSurvey
		, LSM.SURV_NO                                                                                     AS surveyNo
		, LSM.SURV_NM                                                                                     AS surveyName
		, CONVERT(VARCHAR, LSM.VALID_START_DATE,23 ) + '~' + CONVERT(VARCHAR,LSM.VALID_END_DATE,23) AS validDate
		, CONVERT(VARCHAR, LSM.VALID_START_DATE, 23)                                                     AS validStartDate
		, CONVERT(VARCHAR, LSM.VALID_END_DATE, 23)                                                       AS validEndDate
		, LSM.STAT_CD                                                                                     AS statusCode
		, EM.NAME                                                                                         AS createBy
		, EM.ID																							  AS createById
		, CONVERT(CHAR(19) ,LSM.CREATE_DATE,20)                                               AS createDate
		, ISNULL(LTV.CNT, 0)                                                                            AS targetCount
		, ISNULL(LMV.CNT, 0)                                                                            AS surveyCount
		, ${strColumn}
		FROM LOY.LOY_SURV_MST LSM
		LEFT JOIN (
		SELECT LSST.RID_SURV_MST            AS RID_SURV_MST
		, COUNT(DISTINCT LSST.RID_MBR) AS CNT
		FROM LOY.LOY_SURV_SEND_TGT LSST
		WHERE LSST.FLAG = 1
		GROUP BY LSST.RID_SURV_MST
		)                       LTV ON LSM.RID = LTV.RID_SURV_MST
		LEFT JOIN (
		SELECT LSM.RID_SURV_MST            AS RID_SURV_MST
		, COUNT(DISTINCT LSM.RID_MBR) AS CNT
		FROM LOY.LOY_SURV_MBR LSM
		WHERE LSM.FLAG = 1
		GROUP BY LSM.RID_SURV_MST
		)                       LMV ON LSM.RID = LMV.RID_SURV_MST
		LEFT JOIN COM.CRM_USER     CU  ON LSM.CREATE_BY = CU.RID AND CU.FLAG = 1
		LEFT JOIN COM.EMPLOYEE     EM  ON CU.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
		WHERE LSM.FLAG = 1
		<if test="existsCheckType != null and existsCheckType != ''">
			AND LSM.STAT_CD = 'A'
			<choose>
				<when test="'LOY'.equals(existsCheckType)">
					AND NOT EXISTS (
					SELECT LPA.RID_SURV
					FROM LOY.LOY_PRUL_AC2SUR LPA
					WHERE LPA.FLAG = 1
					AND LPA.RID_SURV = LSM.RID
					)
				</when>
				<when test="'MKT'.equals(existsCheckType)">
					AND NOT EXISTS (
					SELECT MCM.RID_SURV_MST
					FROM MKT.MKT_CAM_MST MCM
					WHERE MCM.FLAG = 1
					AND MCM.RID_SURV_MST = LSM.RID
					)
				</when>
			</choose>
		</if>
		AND ${strCondWhere}
		AND ${strWhere}
		ORDER BY ${strOrderby}
		${strEndPaging}
	</select>

	<select id="selectSurveyDetail" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyDetailResDto">
		/* LoySurveyMapper.selectSurveyDetail */
		SELECT LSM.RID              AS ridSurvey
			 , LSM.SURV_NO          AS surveyNo
			 , LSM.SURV_NM          AS surveyName
			 , LSM.STAT_CD          AS statusCode
			 , LSM.VALID_START_DATE AS validStartDate
			 , LSM.VALID_END_DATE   AS validEndDate
			 , LSM.CONTENTS         AS contents
			 , LSM.URL_WEB          AS urlWeb
			 , LSM.START_INFO_MSG   AS startMessage
			 , LSM.END_INFO_MSG     AS endMessage
			 , LSM.USR_TYPE_CD      AS usrTypeCd
			 , I.ID              	AS ridImage
			 , I.IMAGE_FOLDER    	AS imageFolder
			 , I.IMAGE_FILE_NAME 	AS imageFileName
			 , I.IMAGE_FILE_TYPE 	AS imageFileType
			 , EM.NAME              AS createBy
			 , CONVERT(CHAR(19) ,LSM.CREATE_DATE, 20) AS createDate
		FROM LOY.LOY_SURV_MST LSM
				 LEFT JOIN COM.CRM_USER     CU  ON LSM.CREATE_BY = CU.RID AND CU.FLAG = 1
				 LEFT JOIN COM.EMPLOYEE     EM  ON CU.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
				 LEFT JOIN COM.IMAGE         I   ON LSM.RID = I.PARENT_ID AND I.FLAG = 1
		WHERE LSM.FLAG = 1
		  AND LSM.RID  = #{ridSurvey}
	</select>

	<select id="selectSurveyDetailForImages" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyDetailResDto">
		/* LoySurveyMapper.selectSurveyDetailForImages */
		SELECT LSM.RID              AS ridSurvey
			 , LSM.SURV_NO          AS surveyNo
			 , LSM.SURV_NM          AS surveyName
			 , LSM.STAT_CD          AS statusCode
			 , LSM.VALID_START_DATE AS validStartDate
			 , LSM.VALID_END_DATE   AS validEndDate
			 , LSM.CONTENTS         AS contents
			 , LSM.URL_WEB          AS urlWeb
			 , LSM.START_INFO_MSG   AS startMessage
			 , LSM.END_INFO_MSG     AS endMessage
			 , I1.ID              	AS ridStartImage
			 , I1.IMAGE_FOLDER    	AS startImageFolder
			 , I1.IMAGE_FILE_NAME 	AS startImageFileName
			 , I1.IMAGE_FILE_TYPE 	AS startImageFileType
			 , I2.ID              	AS ridEndImage
			 , I2.IMAGE_FOLDER    	AS endImageFolder
			 , I2.IMAGE_FILE_NAME 	AS endImageFileName
			 , I2.IMAGE_FILE_TYPE 	AS endImageFileType
			 , EM.NAME              AS createBy
			 , CONVERT(CHAR(19) ,LSM.CREATE_DATE, 20) AS createDate
			 , LSM.USR_TYPE_CD AS usrTypeCd
		FROM LOY.LOY_SURV_MST LSM
				 LEFT JOIN COM.CRM_USER     CU  ON LSM.CREATE_BY = CU.RID AND CU.FLAG = 1
				 LEFT JOIN COM.EMPLOYEE     EM  ON CU.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
				 LEFT JOIN COM.IMAGE         I1   ON LSM.RID = I1.PARENT_ID AND I1.FLAG = 1 AND I1.TYPE = 'START'
				 LEFT JOIN COM.IMAGE         I2   ON LSM.RID = I2.PARENT_ID AND I2.FLAG = 1 AND I2.TYPE = 'END'
		WHERE LSM.FLAG = 1
		  AND LSM.RID  = #{ridSurvey}
	</select>

	<insert id="insertSurveyDetail">
		<selectKey keyProperty="surveyNo" resultType="com.icignal.loyalty.survey.dto.request.LoySurveyDetailReqDto" order="BEFORE">
			/* LoySurveyMapper.insertSurveyDetail#selectKey */
			SELECT LOY.FN_GET_SURV_NO() AS surveyNo
		</selectKey>

		/* LoySurveyMapper.insertSurveyDetail */
		INSERT INTO LOY.LOY_SURV_MST (
		RID
		, CREATE_BY
		, MODIFY_BY
		, CREATE_DATE
		, MODIFY_DATE
		, FLAG
		, SURV_NO
		, SURV_NM
		, STAT_CD
		, VALID_START_DATE
		, VALID_END_DATE
		, RID_PGM
		, CONTENTS
		, URL_WEB
		, START_INFO_MSG
		, END_INFO_MSG
		, USR_TYPE_CD
		) VALUES (
		#{ridSurvey}
		, #{empId}
		, #{empId}
		, GETDATE()
		, GETDATE()
		, '1'
		, #{surveyNo}
		, #{surveyName}
		, #{statusCode}
		, com.TO_DATE(#{validStartDate}, 'YYYY-MM-DD HH24:MI:SS')
		, com.TO_DATE(#{validEndDate}, 'YYYY-MM-DD HH24:MI:SS')
		, (SELECT TOP 1 P.RID FROM LOY.LOY_PGM P WHERE P.FLAG = 1 AND P.REP_YN = 'Y')
		, #{contents}
		, #{urlWeb}
		, #{startMessage}
		, #{endMessage}
		, #{usrTypeCd}
		)
	</insert>

	<update id="updateSurveyDetail">
		/* LoySurveyMapper.updateSurveyDetail */
		UPDATE LOY.LOY_SURV_MST
		SET MODIFY_BY        = #{empId}
		  , MODIFY_DATE      = GETDATE()
		  , SURV_NM          = #{surveyName}
		  , STAT_CD          = #{statusCode}
		  , VALID_START_DATE = com.TO_DATE(#{validStartDate}, 'yyyy-mm-dd hh24:mi:ss')
		  , VALID_END_DATE   = com.TO_DATE(#{validEndDate}, 'yyyy-mm-dd hh24:mi:ss')
		  , CONTENTS         = #{contents}
		  , URL_WEB          = #{urlWeb}
		  , START_INFO_MSG   = #{startMessage}
		  , END_INFO_MSG     = #{endMessage}
		  , USR_TYPE_CD      = #{usrTypeCd}
		WHERE RID = #{ridSurvey}
	</update>

	<update id="deleteSurveyDetail">
		/* LoySurveyMapper.deleteSurveyDetail */
		UPDATE LOY.LOY_SURV_MST
		SET MODIFY_BY   = #{modifyBy}
		  , MODIFY_DATE = GETDATE()
		  , FLAG        = '0'
		WHERE RID = #{ridSurvey}
	</update>

	<select id="selectSurveySectionList" resultType="com.icignal.loyalty.survey.dto.response.LoySurveySectionListResDto">
		/* LoySurveyMapper.selectSurveySectionList */
		SELECT LSS.RID                                           AS ridSurveySection
			 , LSS.SECT_NO                                       AS sectionNo
			 , LSS.SECT_CONTENTS                                 AS sectionContents
			 , LSS.LAST_YN                                       AS lastFlag
			 , E.NAME                                            AS modifyBy
			 , CONVERT(CHAR(19) ,LSS.MODIFY_DATE, 20) AS modifyDate
			 , ${strColumn}
		FROM LOY.LOY_SURV_MST  LSM
				 JOIN LOY.LOY_SURV_SECT LSS ON LSM.RID = LSS.RID_SURV_MST AND LSS.FLAG = 1
				 LEFT JOIN COM.CRM_USER      CU  ON LSS.MODIFY_BY = CU.RID AND CU.FLAG = 1
				 LEFT JOIN COM.EMPLOYEE      E   ON CU.ID_EMPLOYEE = E.ID AND E.FLAG = 1
		WHERE LSS.FLAG = 1
		  AND LSS.RID_SURV_MST = #{ridSurvey}
		  AND ${strCondWhere}
		  AND ${strWhere}
		ORDER BY ${strOrderby}
			${strEndPaging}
	</select>

	<select id="selectSurveySectionDetail" resultType="com.icignal.loyalty.survey.dto.response.LoySurveySectionListResDto">
		/* LoySurveyMapper.selectSurveySectionDetail */
		SELECT LSS.RID           AS ridSurveySection
			 , LSS.SECT_NO       AS sectionNo
			 , LSS.SECT_CONTENTS AS sectionContents
			 , LSS.LAST_YN       AS lastFlag
		FROM LOY.LOY_SURV_SECT LSS
		WHERE LSS.FLAG = 1
		  AND LSS.RID  = #{ridSurveySection}
	</select>

	<insert id="insertSurveySectionDetail">
		<selectKey keyProperty="ridSurveySection" resultType="java.lang.String" order="BEFORE">
			/* LoySurveyMapper.insertSurveySectionDetail#selectKey */
			SELECT COM.GETNEWID('A')    AS ridSurveySection

		</selectKey>

		/* LoySurveyMapper.insertSurveySectionDetail */
		INSERT INTO LOY.LOY_SURV_SECT (
		RID
		, CREATE_BY
		, MODIFY_BY
		, CREATE_DATE
		, MODIFY_DATE
		, FLAG
		, RID_SURV_MST
		, SECT_NO
		, SECT_CONTENTS
		, LAST_YN
		) VALUES (
		#{ridSurveySection}
		, #{empId}
		, #{empId}
		, GETDATE()
		, GETDATE()
		, 1
		, #{ridSurvey}
		, #{sectionNo}
		, #{sectionContents}
		, #{lastFlag}
		)
	</insert>

	<update id="updateSurveySectionDetail">
		/* LoySurveyMapper.updateSurveySectionDetail */
		UPDATE LOY.LOY_SURV_SECT
		SET MODIFY_BY     = #{empId}
		  , MODIFY_DATE   = GETDATE()
		  , SECT_NO       = #{sectionNo}
		  , SECT_CONTENTS = #{sectionContents}
		  , LAST_YN       = ISNULL(#{lastFlag}, 'N')
		WHERE RID = #{ridSurveySection}
	</update>

	<update id="deleteSurveySectionDetail">
		/* LoySurveyMapper.deleteSurveySectionDetail */
		UPDATE LOY.LOY_SURV_SECT
		SET MODIFY_BY     = #{empId}
		, MODIFY_DATE   = GETDATE()
		, FLAG          = 0
		WHERE 1 = 1
		<if test="ridSurvey != null">
			AND RID_SURV_MST = #{ridSurvey}
		</if>

		<if test="ridSurveySection != null">
			AND RID = #{ridSurveySection}
		</if>
	</update>

	<select id="selectSurveyItemList" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyItemListResDto">
		/* LoySurveyMapper.selectSurveyItemList */
		SELECT LSI.RID                                           AS ridSurveyItem
			 , LSI.ITEM_NO                                       AS itemNo
			 , LSI.ITEM_TITLE                                    AS itemTitle
			 , LSI.FIELD_TYPE_CD                                 AS fieldTypeCode
			 , LSI.GIVE_OFR_YN                                   AS giveOfferFlag
			 , LSI.OPT_YN                                        AS optionalFlag
			 , E.NAME                                            AS modifyBy
			 , CONVERT(CHAR(19) ,LSI.MODIFY_DATE, 20) AS modifyDate
			 , ${strColumn}
		FROM LOY.LOY_SURV_ITEM LSI
				 LEFT JOIN COM.CRM_USER      CU  ON LSI.MODIFY_BY = CU.RID AND CU.FLAG = 1
				 LEFT JOIN COM.EMPLOYEE      E   ON CU.ID_EMPLOYEE = E.ID AND E.FLAG = 1
		WHERE LSI.FLAG          = 1
		  AND LSI.RID_SURV_SECT = #{ridSurveySection}
		  AND ${strCondWhere}
		  AND ${strWhere}
		ORDER BY ${strOrderby}
			${strEndPaging}
	</select>

	<select id="selectSurveyItemDetail" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyItemListResDto">
		/* LoySurveyMapper.selectSurveyItemDetail */
		SELECT LSI.RID           AS ridSurveyItem
			 , LSI.ITEM_NO       AS itemNo
			 , LSI.ITEM_TITLE    AS itemTitle
			 , LSI.FIELD_TYPE_CD AS fieldTypeCode
			 , LSI.USE_NA        AS naFlag
			 , LSI.START_NUM     AS startNum
			 , LSI.END_NUM       AS endNum
			 , LSI.IMAGE_DESC    AS imageContents
			 , LSI.GIVE_OFR_YN   AS giveOfferFlag
			 , LSI.OPT_YN        AS optionalFlag
			 , I.ID              AS ridImage
			 , I.IMAGE_FOLDER    AS imageFolder
			 , I.IMAGE_FILE_NAME AS imageFileName
			 , I.IMAGE_FILE_TYPE AS imageFileType
		FROM LOY.LOY_SURV_ITEM LSI
				 LEFT JOIN COM.IMAGE         I   ON LSI.RID = I.PARENT_ID AND I.FLAG = 1
		WHERE LSI.FLAG = 1
		  AND LSI.RID = #{ridSurveyItem}
	</select>

	<select id="selectExistsGiveOfferFlagItem" resultType="java.lang.Integer">
		/* LoySurveyMapper.selectExistsGiveOfferFlagItem */
		SELECT COUNT(LSI.RID) AS cnt
		FROM LOY.LOY_SURV_ITEM LSI
		WHERE LSI.FLAG        = 1
		  AND LSI.RID         = #{ridSurveyItem}
		  AND LSI.GIVE_OFR_YN = 'Y'
	</select>

	<insert id="insertSurveyItemDetail">
		<selectKey keyProperty="ridSurveyItem" resultType="java.lang.String" order="BEFORE">
			/* LoySurveyMapper.insertSurveyItemDetail#selectKey */
			SELECT COM.GETNEWID('A')    AS ridSurveyItem

		</selectKey>

		/* LoySurveyMapper.insertSurveyItemDetail */
		INSERT INTO LOY.LOY_SURV_ITEM (
		RID
		, CREATE_BY
		, MODIFY_BY
		, CREATE_DATE
		, MODIFY_DATE
		, FLAG
		, RID_SURV_SECT
		, ITEM_NO
		, ITEM_TITLE
		, FIELD_TYPE_CD
		, USE_NA
		, START_NUM
		, END_NUM
		, IMAGE_DESC
		, GIVE_OFR_YN
		, OPT_YN
		) VALUES (
		#{ridSurveyItem}
		, #{empId}
		, #{empId}
		, GETDATE()
		, GETDATE()
		, 1
		, #{ridSurveySection}
		, #{itemNo}
		, #{itemTitle}
		, #{fieldTypeCode}
		, #{naFlag}
		, #{startNum}
		, #{endNum}
		, #{imageContents}
		, #{giveOfferFlag}
		, #{optionalFlag}
		)
	</insert>

	<update id="updateSurveyItemDetail">
		/* LoySurveyMapper.updateSurveyItemDetail */
		UPDATE LOY.LOY_SURV_ITEM
		SET MODIFY_BY     = #{empId}
		  , MODIFY_DATE   = GETDATE()
		  , ITEM_NO       = #{itemNo}
		  , ITEM_TITLE    = #{itemTitle}
		  , FIELD_TYPE_CD = #{fieldTypeCode}
		  , USE_NA        = #{naFlag}
		  , START_NUM     = #{startNum}
		  , END_NUM       = #{endNum}
		  , IMAGE_DESC    = #{imageContents}
		  , GIVE_OFR_YN   = #{giveOfferFlag}
		  , OPT_YN        = #{optionalFlag}
		  , RID_SURV_SECT = #{ridSurveySection}
		WHERE RID = #{ridSurveyItem}
	</update>

	<update id="deleteSurveyItemDetail">
		/* LoySurveyMapper.deleteSurveyItemDetail */
		UPDATE LOY.LOY_SURV_ITEM
		SET MODIFY_BY   = #{empId}
		  , MODIFY_DATE = GETDATE()
		  , FLAG        = '0'
		WHERE RID = #{ridSurveyItem}
	</update>

	<update id="deleteSurveyItemAll">
		/* LoySurveyMapper.deleteSurveyItemDetail */
		UPDATE LOY.LOY_SURV_ITEM
		SET MODIFY_BY   = #{empId}
		, MODIFY_DATE = GETDATE()
		, FLAG        = '0'
		WHERE 1 = 1
		<if test="ridSurvey != null">
			AND RID_SURV_SECT IN (
			SELECT RID
			FROM LOY.LOY_SURV_SECT
			WHERE FLAG = 1
			AND RID_SURV_MST = #{ridSurvey}
			)
		</if>

		<if test="ridSurveySection != null">
			AND RID_SURV_SECT IN (
			SELECT RID
			FROM LOY.LOY_SURV_SECT
			WHERE RID = #{ridSurveySection}
			)
		</if>
	</update>

	<select id="selectSurveyItemAttrList" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyItemAttrListResDto">
		/* LoySurveyMapper.selectSurveyItemAttrList */
		SELECT LSA.RID                                           AS ridSurveyItemAttr
			 , LSA.ATTR_NO                                       AS itemAttrNo
			 , LSA.ATTR_VAL                                      AS itemAttrValue
			 , LSA.TGT_SECT_NO                                   AS targetSectionNo
			 , E.NAME                                            AS modifyBy
			 , CONVERT(CHAR(19) ,LSA.MODIFY_DATE, 20) AS modifyDate
			 , ${strColumn}
		FROM LOY.LOY_SURV_ATTR LSA
				 LEFT JOIN COM.CRM_USER      CU ON LSA.MODIFY_BY = CU.RID AND CU.FLAG = 1
				 LEFT JOIN COM.EMPLOYEE      E  ON CU.ID_EMPLOYEE = E.ID AND E.FLAG = 1
		WHERE LSA.FLAG = 1
		  AND LSA.RID_SURV_ITEM = #{ridSurveyItem}
		  AND ${strWhere}
		ORDER BY ${strOrderby}
			${strEndPaging}
	</select>

	<select id="selectSurveyItemAttrDetail" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyItemAttrListResDto">
	/* LoySurveyMapper.selectSurveyItemAttrDetail */
	SELECT LSA.RID         AS ridSurveyItemAttr
			 , LSA.ATTR_NO     AS itemAttrNo
			 , LSA.ATTR_VAL    AS itemAttrValue
			 , LSA.TGT_SECT_NO AS targetSectionNo
			 , CASE LSI.FIELD_TYPE_CD
				   WHEN 'DROP_SCORE' THEN 'Y'
				   ELSE 'N'
				END             AS readonlyFlag
			, LSA.RID_TEXT_CTR_ITEM AS ridTextItem
			, A.ITEM_TITLE AS textItemNm
	FROM LOY.LOY_SURV_ITEM LSI WITH(NOLOCK)
	JOIN LOY.LOY_SURV_ATTR LSA WITH(NOLOCK) ON LSI.RID = LSA.RID_SURV_ITEM AND LSA.FLAG = 1
	LEFT JOIN LOY.LOY_SURV_ITEM A WITH(NOLOCK) ON A.RID = LSA.RID_TEXT_CTR_ITEM
	LEFT JOIN COM.CRM_USER CU WITH(NOLOCK) ON LSA.MODIFY_BY = CU.RID AND CU.FLAG = 1
	LEFT JOIN COM.EMPLOYEE E WITH(NOLOCK) ON CU.ID_EMPLOYEE = E.ID AND E.FLAG = 1
	WHERE LSI.FLAG = 1
	AND LSA.RID  = #{ridSurveyItemAttr}
	</select>

	<select id="selectExistsNaItemAttr" resultType="java.lang.Integer">
		/* LoySurveyMapper.selectExistsNaItemAttr */
		SELECT COUNT(LSA.RID) AS cnt
		FROM LOY.LOY_SURV_ITEM LSI WITH(NOLOCK)
		JOIN LOY.LOY_SURV_ATTR LSA WITH(NOLOCK) ON LSI.RID = LSA.RID_SURV_ITEM AND LSA.FLAG = 1
		WHERE LSI.FLAG    = 1
		  AND LSI.RID     = #{ridSurveyItem}
		  AND LSA.ATTR_NO = '99'
	</select>

	<select id="selectExistsGiveOfferFlagItemAttr" resultType="java.lang.Integer">
		/* LoySurveyMapper.selectExistsGiveOfferFlagItemAttr */
		SELECT COUNT(LSA.RID) AS cnt
		FROM LOY.LOY_SURV_ITEM LSI WITH(NOLOCK)
				 JOIN LOY.LOY_SURV_ATTR LSA WITH(NOLOCK) ON LSI.RID = LSA.RID_SURV_ITEM AND LSA.FLAG = 1
		WHERE LSI.FLAG        = 1
		  AND LSI.RID         = #{ridSurveyItem}
		  AND LSA.GIVE_OFR_YN = 'Y'
	</select>

	<insert id="insertSurveyItemAttrDetail">
		<selectKey keyProperty="ridSurveyItemAttr" resultType="java.lang.String" order="BEFORE">
			/* LoySurveyMapper.insertSurveyItemAttrDetail#selectKey */
			SELECT COM.GETNEWID('A') AS ridSurveyItemAttr

		</selectKey>

		/* LoySurveyMapper.insertSurveyItemAttrDetail */
		INSERT INTO LOY.LOY_SURV_ATTR (
		RID
		, CREATE_BY
		, MODIFY_BY
		, CREATE_DATE
		, MODIFY_DATE
		, FLAG
		, RID_SURV_ITEM
		, ATTR_NO
		, ATTR_VAL
		, TGT_SECT_NO
		, GIVE_OFR_YN
		, RID_TEXT_CTR_ITEM
		) VALUES (
		#{ridSurveyItemAttr}
		, #{empId}
		, #{empId}
		, GETDATE()
		, GETDATE()
		, 1
		, #{ridSurveyItem}
		, #{itemAttrNo}
		, #{itemAttrValue}
		, #{targetSectionNo}
		, #{giveOfferFlag}
		, #{ridTextItem}
		)
	</insert>

	<update id="insertSurveyItemAttrAll">
		/* LoySurveyMapper.insertSurveyItemAttrAll */
		<foreach collection="list" item="item" separator=" ">
		INSERT	INTO LOY.LOY_SURV_ATTR (
			RID
			, CREATE_BY
			, MODIFY_BY
			, CREATE_DATE
			, MODIFY_DATE
			, FLAG
			, RID_SURV_ITEM
			, ATTR_NO
			, ATTR_VAL
			, TGT_SECT_NO
			, GIVE_OFR_YN
			) VALUES (
			COM.GETNEWID('A')
			, #{item.empId}
			, #{item.empId}
			, GETDATE()
			, GETDATE()
			, 1
			, #{item.ridSurveyItem}
			, #{item.itemAttrNo}
			, #{item.itemAttrValue}
			, #{item.targetSectionNo}
			, #{item.giveOfferFlag}
			)
		</foreach>
	</update>

	<update id="updateSurveyItemAttrDetail">
		/* LoySurveyMapper.updateSurveyItemAttrDetail */
		UPDATE LOY.LOY_SURV_ATTR
		SET MODIFY_BY   = #{empId}
		  , MODIFY_DATE = GETDATE()
		  , ATTR_NO     = #{itemAttrNo}
		  , ATTR_VAL    = #{itemAttrValue}
		  , TGT_SECT_NO = #{targetSectionNo}
		  , GIVE_OFR_YN = #{giveOfferFlag}
		  , RID_TEXT_CTR_ITEM = #{ridTextItem}
		  , RID_SURV_ITEM = #{ridSurveyItem}
		WHERE RID = #{ridSurveyItemAttr}
	</update>

	<update id="deleteSurveyItemAttrDetail">
		/* LoySurveyMapper.deleteSurveyItemAttrDetail */
		UPDATE LOY.LOY_SURV_ATTR
		SET MODIFY_BY   = #{empId}
		  , MODIFY_DATE = GETDATE()
		  , FLAG        = '0'
		WHERE RID = #{ridSurveyItemAttr}
	</update>

	<update id="deleteSurveyItemAttrAll">
		/* LoySurveyMapper.deleteSurveyItemAttrAll */
		UPDATE LOY.LOY_SURV_ATTR
		SET MODIFY_BY   = #{empId}
		, MODIFY_DATE = GETDATE()
		, FLAG        = '0'
		WHERE 1 = 1
		<if test="ridSurvey != null">
			AND RID_SURV_ITEM IN (
			SELECT LSI.RID
			FROM LOY.LOY_SURV_SECT LSS WITH(NOLOCK)
			JOIN LOY.LOY_SURV_ITEM LSI WITH(NOLOCK) ON LSS.RID = LSI.RID_SURV_SECT AND LSI.FLAG = 1
			WHERE LSS.FLAG = 1
			AND LSS.RID_SURV_MST = #{ridSurvey}
			)
		</if>

		<if test="ridSurveySection != null">
			AND RID_SURV_ITEM IN (
			SELECT RID
			FROM LOY.LOY_SURV_ITEM WITH(NOLOCK)
			WHERE RID_SURV_SECT = #{ridSurveySection}
			)
		</if>

		<if test="ridSurveyItem != null">
			AND RID_SURV_ITEM = #{ridSurveyItem}
		</if>
	</update>

	<select id="selectSurveyMemberList" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyMemberListResDto">
		/* LoySurveyMapper.selectSurveyMemberList */
		WITH VW_SURV_MBR AS (
			SELECT LSM.RID              AS RID_SURV_MST
				 , LSB.RID_MBR          AS RID_MBR
				 , MAX(LSB.CREATE_DATE) AS CREATE_DATE
			FROM LOY.LOY_SURV_MST LSM WITH(NOLOCK)
					 JOIN LOY.LOY_SURV_MBR LSB WITH(NOLOCK) ON LSM.RID = LSB.RID_SURV_MST AND LSB.FLAG = 1
			WHERE LSM.FLAG = 1
			  AND LSM.RID = #{ridSurvey}
			GROUP BY LSM.RID, LSB.RID_MBR
		)
		SELECT Z.RID_MBR AS ridSurveyMember
			 , Z.MBR_NO  AS memberNo
			 , Z.CUST_NM AS customerName
			 , Z.HHP     AS mobilePhoneNumber
			 , Z.SLTD_DT AS selectedDate
			 , Z.JOIN_YN AS joinedFlag
			 , Z.JOIN_DT AS joinedDate
			 , ${strColumn}
		FROM (
				 SELECT LSST.RID_MBR                                            AS RID_MBR
					  , LM.MBR_NO                                               AS MBR_NO
					  , LC.CUST_NM                                              AS CUST_NM
					  , LC.HHP                                                  AS HHP
					  , CONVERT(CHAR(19) ,LSST.CREATE_DATE, 20)      AS SLTD_DT
					  , CASE WHEN VSM.CREATE_DATE IS NULL THEN 'N' ELSE 'Y' END AS JOIN_YN
					  , CONVERT(CHAR(19) ,VSM.CREATE_DATE, 20)       AS JOIN_DT
				 FROM LOY.LOY_SURV_MST  LSM WITH(NOLOCK)
						  JOIN LOY.LOY_SURV_SEND_TGT LSST WITH(NOLOCK) ON LSM.RID = LSST.RID_SURV_MST AND LSST.FLAG = 1
						  JOIN LOY.LOY_MBR        LM  WITH(NOLOCK) ON LSST.RID_MBR = LM.RID AND LM.FLAG = 1
						  JOIN LOY.LOY_CUST       LC  WITH(NOLOCK) ON LM.RID_CUST = LC.RID AND LC.FLAG = 1
						  LEFT JOIN VW_SURV_MBR   VSM WITH(NOLOCK) ON LSM.RID = VSM.RID_SURV_MST AND LSST.RID_MBR = VSM.RID_MBR
				 WHERE LSM.RID = #{ridSurvey}
			 ) Z
		WHERE ${strWhere}
		ORDER BY ${strOrderby}
			${strEndPaging}
	</select>

	<select id="clearSurveyMemberMaskingDetail" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyMemberListResDto">
		/* LoySurveyMapper.clearSurveyMemberMaskingDetail */
		SELECT LC.CUST_NM AS unmaskingCustomerName
			 , LC.HHP     AS unmaskingMobilePhoneNumber
		FROM LOY.LOY_MBR  LM WITH(NOLOCK)
		JOIN LOY.LOY_CUST LC WITH(NOLOCK) ON LM.RID_CUST = LC.RID AND LC.FLAG = 1
		WHERE LM.FLAG = 1
		  AND LM.RID = #{ridMember}
	</select>

	<select id="selectSurveyOfferList" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyOfferListResDto">
	/* LoySurveyMapper.selectSurveyOfferList */
	SELECT LSB.RID         AS ridSurveyOffer
			 , LO.RID          AS ridOffer
			 , LSB.TITLE       AS offerTitle
			 , LO.OFR_NO       AS offerNo
			 , LO.OFR_NM       AS offerName
			 , LSB.OFR_CNT     AS offerCount
			 , LSB.VALID_ST_DD AS offerValidStartDate
			 , E.NAME          AS createBy
			 , CONVERT(CHAR(19) ,LSB.CREATE_DATE, 20) AS createDate
			 , ${strColumn}
		FROM LOY.LOY_SURV_BENF LSB WITH(NOLOCK)
		JOIN LOY.LOY_OFR LO WITH(NOLOCK) ON LSB.RID_OFR = LO.RID AND LO.FLAG = 1
		LEFT JOIN COM.CRM_USER  CU WITH(NOLOCK) ON CU.RID = LSB.CREATE_BY AND CU.FLAG = 1
		LEFT JOIN COM.EMPLOYEE  E WITH(NOLOCK) ON E.ID = CU.ID_EMPLOYEE AND E.FLAG = 1
		WHERE LSB.FLAG = 1
		AND LSB.RID_SURV_MST = #{ridSurvey}
		AND ${strWhere}
		ORDER BY ${strOrderby}
			${strEndPaging}
	</select>

	<select id="selectSurveyOfferDetail" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyOfferListResDto">
		/* LoySurveyMapper.selectSurveyOfferDetail */
		SELECT LSB.RID         AS ridSurveyOffer
			 , LO.RID          AS ridOffer
			 , LSB.TITLE       AS offerTitle
			 , LO.OFR_NO       AS offerNo
			 , LO.OFR_NM       AS offerName
			 , LSB.OFR_CNT     AS offerCount
			 , LSB.VALID_ST_DD AS offerValidStartDate
		FROM LOY.LOY_SURV_BENF LSB WITH(NOLOCK)
		JOIN LOY.LOY_OFR LO WITH(NOLOCK) ON LSB.RID_OFR = LO.RID AND LO.FLAG = 1
		WHERE LSB.FLAG = 1
		  AND LSB.RID  = #{ridSurveyOffer}
	</select>

	<insert id="insertSurveyOfferDetail">
		<selectKey keyProperty="ridSurveyOffer" resultType="java.lang.String" order="BEFORE">
			/* LoySurveyMapper.insertSurveyOfferDetail#selectKey */
			SELECT COM.GETNEWID('A') AS ridSurveyItemAttr

		</selectKey>

		/* LoySurveyMapper.insertSurveyOfferDetail */
		INSERT INTO LOY.LOY_SURV_BENF (
		RID
		, CREATE_BY
		, MODIFY_BY
		, CREATE_DATE
		, MODIFY_DATE
		, RID_SURV_MST
		, TITLE
		, RID_OFR
		, OFR_CNT
		, VALID_ST_DD
		) VALUES (
		#{ridSurveyOffer}
		, #{empId}
		, #{empId}
		, GETDATE()
		, GETDATE()
		, #{ridSurvey}
		, #{offerTitle}
		, #{ridOffer}
		, #{offerCount}
		, #{offerValidStartDate}
		)
	</insert>

	<update id="updateSurveyOfferDetail">
		/* LoySurveyMapper.updateSurveyOfferDetail */
		UPDATE LOY.LOY_SURV_BENF
		SET MODIFY_BY   = #{empId}
		  , MODIFY_DATE = GETDATE()
		  , TITLE       = #{offerTitle}
		  , RID_OFR     = #{ridOffer}
		  , OFR_CNT     = #{offerCount}
		  , VALID_ST_DD = #{offerValidStartDate}
		WHERE RID = #{ridSurveyOffer}
	</update>

	<update id="deleteSurveyOfferDetail">
		/* LoySurveyMapper.deleteSurveyOfferDetail */
		UPDATE LOY.LOY_SURV_BENF
		SET MODIFY_BY   = #{empId}
		  , MODIFY_DATE = GETDATE()
		  , FLAG        = '0'
		WHERE RID = #{ridSurveyOffer}
	</update>

	<update id="deleteSurveyOfferAll">
		/* LoySurveyMapper.deleteSurveyOfferDetail */
		UPDATE LOY.LOY_SURV_BENF
		SET MODIFY_BY   = #{empId}
		  , MODIFY_DATE = GETDATE()
		  , FLAG        = '0'
		WHERE RID_SURV_MST = #{ridSurvey}
	</update>

	<update id="deleteSurveyMemberAll">
		/* LoySurveyMapper.deleteSurveyMemberAll */
		UPDATE LOY.LOY_SURV_MBR
		SET MODIFY_BY   = #{empId}
		  , MODIFY_DATE = GETDATE()
		  , FLAG        = '1'
		WHERE RID_SURV_MST = #{ridSurvey}
	</update>

	<select id="selectSurveyResultSummary" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyResultSummaryResDto">
		/* LoySurveyMapper.selectSurveyResultSummary */
		SELECT Z.TOT_CNT                   AS totalCount
			 , Z.ENT_CNT                   AS enterCount
			 , CASE WHEN Z.TOT_CNT = 0 THEN 0
					ELSE CONVERT(FLOAT,Z.ENT_CNT) / Z.TOT_CNT
			END                         AS enterRate
		FROM (
				 SELECT (SELECT COUNT(RID_MBR) FROM LOY.LOY_SURV_SEND_TGT WHERE RID_SURV_MST = SM.RID)     AS TOT_CNT
					  , (SELECT COUNT(DISTINCT RID_MBR) FROM LOY.LOY_SURV_MBR WHERE RID_SURV_MST = SM.RID) AS ENT_CNT
				 FROM LOY.LOY_SURV_MST SM WITH(NOLOCK)
				 WHERE SM.FLAG = 1
				   AND SM.RID  = #{rid}
			 ) Z
	</select>

	<select id="selectSurveyResultList" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyResultListResDto">
		/* LoySurveyMapper.selectSurveyResultList */
		SELECT S.SECT_NO         AS sectionNo
			 , I.ITEM_NO         AS itemNo
			 , IA.ATTR_NO        AS itemAttrNo
			 , I.ITEM_TITLE      AS itemTitle
			 , I.FIELD_TYPE_CD   AS fieldTypeCode
			 , IA.ATTR_VAL       AS answerValue
			 , COUNT(MR.RID_MBR) AS answerCount
			 , ${strColumn}
		FROM LOY.LOY_SURV_MST  MT WITH(NOLOCK)
				 JOIN LOY.LOY_SURV_SECT S  ON MT.RID = S.RID_SURV_MST AND S.FLAG = 1
				 JOIN LOY.LOY_SURV_ITEM I  ON S.RID = I.RID_SURV_SECT AND I.FLAG = 1
				 LEFT JOIN LOY.LOY_SURV_ATTR IA ON I.RID = IA.RID_SURV_ITEM AND IA.FLAG = 1
				 LEFT JOIN LOY.LOY_SURV_MBR  MR ON MT.RID = MR.RID_SURV_MST AND MR.FLAG = 1 AND S.RID = MR.RID_SURV_SECT AND I.RID = MR.RID_SURV_ITEM AND ISNULL(IA.RID, 'X') = ISNULL(MR.RID_SURV_ATTR, 'X')
		WHERE MT.FLAG = 1
		  AND MT.RID  = #{rid}
		GROUP BY S.SECT_NO, I.ITEM_NO, IA.ATTR_NO, I.ITEM_TITLE, I.FIELD_TYPE_CD, IA.ATTR_VAL
		ORDER BY S.SECT_NO, I.ITEM_NO, IA.ATTR_NO
			${strEndPaging}
	</select>

	<select id="selectSurveyOfferType" resultType="java.lang.String">
		/* LoySurveyMapper.selectSurveyOfferType */
		SELECT O.OFR_TYPE AS offerType
		FROM LOY.LOY_SURV_MST  M WITH(NOLOCK)
				 JOIN LOY.LOY_PRUL_AC2SUR PAS WITH(NOLOCK) ON M.RID = PAS.RID_SURV AND PAS.FLAG = 1
				 JOIN LOY.LOY_PROM        P  WITH(NOLOCK) ON PAS.RID_PROM = P.RID AND P.FLAG = 1
				 JOIN LOY.LOY_OFR         O  WITH(NOLOCK) ON P.RID_OFR = O.RID AND O.FLAG = 1
		WHERE M.FLAG = 1
		  AND M.RID  = #{rid}
	</select>

	<select id="selectSurveyResultDetailHeaderList" resultType="com.icignal.loyalty.survey.dto.vo.LoySurveyResultDetailHeaderVo">
		/* LoySurveyMapper.selectSurveyResultDetailHeaderList */
		SELECT 'HEADER_' + CONVERT(VARCHAR, S.SECT_NO) + '_' + CONVERT(VARCHAR, I.ITEM_NO) AS headerKey
			 , I.ITEM_TITLE                               AS headerTitle
		FROM LOY.LOY_SURV_MST  M WITH(NOLOCK)
				 JOIN LOY.LOY_SURV_SECT S WITH(NOLOCK) ON M.RID = S.RID_SURV_MST AND S.FLAG = 1
				 JOIN LOY.LOY_SURV_ITEM I WITH(NOLOCK) ON S.RID = I.RID_SURV_SECT AND I.FLAG = 1
		WHERE M.FLAG = 1
		  AND M.RID  = #{rid}
		ORDER BY S.SECT_NO, I.ITEM_NO
	</select>

	<select id="selectSurveyResultDtlList" parameterType="com.icignal.loyalty.survey.dto.request.LoySurveyListReqDto"
			resultType="com.icignal.loyalty.survey.dto.response.LoySurveyResultListResDto">
		/* LoySurveyMapper.selectSurveyResultDtlList */
		SELECT A.CUST_NM			as custNm
		     , A.CUST_NO			as custNo
			 , A.REG_DATE			as regDate
		     , A.SECT_NO			as pageNo
		     , A.ITEM_NO			as itemNo
			 , A.ITEM_TITLE			as itemTitle
			 , A.FIELD_TYPE_CD		as fieldTypeCode
			 , A.ATTR_NO			as attrNo
			 , A.ANS_VALUE			as answerValue
			 , ${strColumn}
		FROM (
				 SELECT DENSE_RANK() OVER ( ORDER BY lm.RID ) AS ORDER_NO
					, lm.RID AS RID_MBR
					  , lc.CUST_NM  AS CUST_NM
				      , lc.CUST_NO	AS CUST_NO
					  , lsm.CREATE_DATE AS REG_DATE
					  , lss.SECT_NO AS SECT_NO
					  , lss.SECT_CONTENTS  AS SECT_CONTENTS
					  , lsi.ITEM_NO AS ITEM_NO
					  , lsi.ITEM_TITLE AS ITEM_TITLE
					  , lsi.FIELD_TYPE_CD AS FIELD_TYPE_CD
					  , lsa.ATTR_NO AS  ATTR_NO
					  , lsm.ANS_VALUE AS ANS_VALUE
				 FROM loy.LOY_SURV_MBR lsm WITH(NOLOCK)
				JOIN loy.LOY_MBR lm WITH(NOLOCK) on lsm.RID_MBR  = lm.RID
				 JOIN LOY.LOY_CUST lc WITH(NOLOCK) ON lm.RID_CUST  = lc.RID
				 JOIN loy.LOY_SURV_SECT lss WITH(NOLOCK) ON lss.RID = lsm.RID_SURV_SECT AND lss.FLAG = 1
				 JOIN loy.LOY_SURV_ITEM lsi WITH(NOLOCK) ON lsi.RID = lsm.RID_SURV_ITEM AND lsi.FLAG = 1
				 LEFT OUTER join loy.LOY_SURV_ATTR lsa WITH(NOLOCK) ON lsm.RID_SURV_ATTR = lsa.RID  AND lsa.FLAG = 1
				 WHERE lsm.FLAG = 1
				   AND lsm.RID_SURV_MST = #{ridSurvey}
				   and lsi.FIELD_TYPE_CD = 'TEXT'
			 ) A
		GROUP BY A.ORDER_NO, A.CUST_NM, A.SECT_NO, A.ITEM_NO, A.REG_DATE , A.ITEM_TITLE, A.FIELD_TYPE_CD , A.ATTR_NO, A.ANS_VALUE, A.CUST_NO
		ORDER BY ${strOrderby}
			${strEndPaging}
	</select>

	<select id="selectSurveyResultDetailList" parameterType="com.icignal.loyalty.survey.dto.request.LoySurveyListReqDto"
			 								resultType="com.icignal.loyalty.survey.dto.response.LoySurvRsltExcelDnResDto">
		/* LoySurveyMapper.selectSurveyResultDetailList */
		SELECT A.ORDER_NO
			 , A.MBR_NO
			 , A.REG_DATE
			 , CONCAT(A.SECT_NO, '-', A.ITEM_NO) AS SECT_NO
			 , A.ITEM_TITLE
			 , A.FIELD_TYPE_CD
			 , A.ATTR_NO
			 , A.ANS_VALUE
		FROM (
				SELECT DENSE_RANK() OVER ( ORDER BY lm.RID ) AS ORDER_NO
					, lm.RID AS RID_MBR
					, lm.MBR_NO  AS MBR_NO
					, lsm.CREATE_DATE AS REG_DATE
					, lss.SECT_NO AS SECT_NO
					, lss.SECT_CONTENTS  AS SECT_CONTENTS
					, lsi.ITEM_NO AS ITEM_NO
					, lsi.ITEM_TITLE AS ITEM_TITLE
					, lsi.FIELD_TYPE_CD AS FIELD_TYPE_CD
					, lsa.ATTR_NO AS  ATTR_NO
					, lsm.ANS_VALUE AS ANS_VALUE
				FROM loy.LOY_SURV_MBR lsm WITH(NOLOCK)
				JOIN loy.LOY_MBR lm WITH(NOLOCK) on lsm.RID_MBR  = lm.RID
				JOIN LOY.LOY_CUST lc WITH(NOLOCK) ON lm.RID_CUST  = lc.RID
				JOIN loy.LOY_SURV_SECT lss WITH(NOLOCK) ON lss.RID = lsm.RID_SURV_SECT AND lss.FLAG = 1
				JOIN loy.LOY_SURV_ITEM lsi WITH(NOLOCK) ON lsi.RID = lsm.RID_SURV_ITEM AND lsi.FLAG = 1
				LEFT OUTER JOIN loy.LOY_SURV_ATTR lsa WITH(NOLOCK) ON lsm.RID_SURV_ATTR = lsa.RID AND lsa.FLAG = 1
				WHERE lsm.FLAG = 1
				AND lsm.RID_SURV_MST = #{ridSurvey}
			 ) A
		GROUP BY A.ORDER_NO, A.MBR_NO, A.SECT_NO, A.ITEM_NO, A.REG_DATE , A.ITEM_TITLE, A.FIELD_TYPE_CD , A.ATTR_NO, A.ANS_VALUE
		ORDER BY A.ORDER_NO, A.SECT_NO, A.ITEM_NO
	</select>
	<!--
	 /* LoySurveyMapper.selectSurveyResultDetailList */
		WITH VW_SURV_RST AS (
		SELECT ROW_NUMBER() OVER (ORDER BY Z.REG_DATE) AS ORDER_NO
		, Z.RID_SURV_MST                          AS RID_SURV_MST
		, Z.RID_MBR                               AS RID_MBR
		, Z.REG_DATE                              AS REG_DATE
		<foreach collection="headerList" item="headerDetail">
			, ${headerDetail.headerKey} AS ${headerDetail.headerKey}
		</foreach>
		FROM (
		SELECT Z.RID_SURV_MST  AS RID_SURV_MST
		, Z.RID_MBR       AS RID_MBR
		, MIN(Z.REG_DATE) AS REG_DATE
		<foreach collection="headerList" item="headerDetail">
			, MAX(CASE WHEN HDR_KEY = #{headerDetail.headerKey} THEN ANS_VALUE END) AS ${headerDetail.headerKey}
		</foreach>
		FROM (
		SELECT M.RID                                                                              AS RID_SURV_MST
		, MR.RID_MBR                                                                         AS RID_MBR
		, 'HEADER_' + S.SECT_NO + '_' + I.ITEM_NO                                         AS HDR_KEY
		, MIN(MR.CREATE_DATE)                                                                AS REG_DATE
		, STRING_AGG(MR.ANS_VALUE, ',') WITHIN GROUP (ORDER BY S.SECT_NO, I.ITEM_NO, A.ATTR_NO) AS ANS_VALUE
		FROM LOY.LOY_SURV_MST  M
		JOIN LOY.LOY_SURV_MBR  MR ON M.RID = MR.RID_SURV_MST AND MR.FLAG = 1
		JOIN LOY.LOY_SURV_SECT S  ON M.RID = S.RID_SURV_MST AND MR.RID_SURV_SECT = S.RID AND S.FLAG = 1
		JOIN LOY.LOY_SURV_ITEM I  ON S.RID = I.RID_SURV_SECT AND MR.RID_SURV_ITEM = I.RID AND I.FLAG = 1
		LEFT JOIN LOY.LOY_SURV_ATTR A  ON I.RID = A.RID_SURV_ITEM AND MR.RID_SURV_ATTR = A.RID AND A.FLAG = 1
		WHERE M.FLAG = 1
		AND M.RID = #{rid}
		GROUP BY M.RID, MR.RID_MBR, S.SECT_NO, I.ITEM_NO
		) Z
		GROUP BY Z.RID_SURV_MST, Z.RID_MBR, Z.REG_DATE
		) Z
		)
		, VW_PROD AS (
		SELECT M.RID                                 AS RID_SURV_MST
		, SST.RID_MBR                           AS RID_MBR
		, ISNULL(Z.PROD_NM, '&#45;&#45;')             AS PROD_NM
		, ''                      AS TOT_SALE_AMT
		, ''                      AS SALE_ACT_AMT
		, ''                        AS FG_STO_NM
		, ''                          AS AREA1_NM
		, ''                          AS AREA2_NM
		, ''                        AS COMMRCL_NM
		, ''                           AS CHNL_NM
		, com.TO_CHAR(PH.SALE_END_DT, 'YYYY-MM-DD') AS SALES_DT
		, CASE WHEN com.TO_CHAR(PH.SALE_END_DT, 'D') IN ('1', '7') THEN '주말'
		ELSE '평일'
		END                                   AS SALES_WEEKEND_TYPE
		, com.TO_CHAR(PH.SALE_END_DT, 'DY')         AS SALES_WEEKEND
		, com.TO_CHAR(PH.SALE_END_DT, 'HH24')
		+ '시 ~ '
		+ com.TO_CHAR(DATEADD(HOUR, +1, PH.SALE_END_DT), 'HH24:MI:SS')
		+ '시'                               AS SALES_DATETIME_TYPE
		, com.TO_CHAR(PH.SALE_END_DT, 'HH24:MI:SS') AS SALES_DATETIME
		, ''                         AS SALES_TYPE
		FROM LOY.LOY_SURV_MST      M
		JOIN LOY.LOY_SURV_SEND_TGT SST ON M.RID = SST.RID_SURV_MST AND SST.FLAG = 1
		JOIN LOY.LOY_PUR_HEAD      PH ON SST.RID_MBR = PH.RID_MBR AND SST.RCPT_NO = PH.RCPT_NO AND PH.FLAG = 1
		JOIN LOY.LOY_CHNL_ADD_INF  CAI ON PH.RID_CHNL = CAI.RID_CHNL AND CAI.FLAG = 1
		JOIN (
			SELECT PI.RID_PUR_HEAD AS RID_PUR_HEAD
				, P.PROD_NM AS PROD_NM
			FROM LOY.LOY_PUR_ITEM PI
			LEFT JOIN LOY.LOY_PROD     P ON PI.RID_PROD = P.RID AND P.FLAG = 1
			GROUP BY PI.RID_PUR_HEAD, P.PROD_NM AS PROD_NM
		) Z ON PH.RID = Z.RID_PUR_HEAD
		WHERE M.FLAG = 1
		AND M.RID = #{rid}
		)
		<choose>
			<when test='"P".equals(offerType)'>
				, VW_HRT AS (
							SELECT M.RID                                               AS RID_SURV_MST
							, SST.RID_MBR                                         AS RID_MBR
							, CONVERT(NUMERIC,ISNULL(OPT.PNT_AMT,0)) - CONVERT(NUMERIC,ISNULL(BPT.PNT_AMT,0)) AS PNT_AMT
							FROM LOY.LOY_SURV_MST      M
							JOIN LOY.LOY_SURV_SEND_TGT SST ON M.RID = SST.RID_SURV_MST AND SST.FLAG = 1
							JOIN LOY.LOY_PNT_TXN       OPT ON SST.RID_MBR = OPT.RID_MBR AND SST.RCPT_NO = OPT.RCPT_NO AND OPT.FLAG = 1
							LEFT JOIN LOY.LOY_PNT_TXN       BPT ON OPT.ORGN_APPR_NO = BPT.APPR_NO AND BPT.FLAG = 1
							WHERE M.FLAG = 1
							AND M.RID  = #{rid}
							)
			</when>
			<when test='"D".equals(offerType)'>
				, VW_CPN AS (
							SELECT M.RID       AS RID_SURV_MST
							, SST.RID_MBR AS RID_MBR
							, CM.CPN_NO   AS CPN_NO
							, C.CPN_NM    AS CPN_NM
							FROM LOY.LOY_SURV_MST      M
							JOIN LOY.LOY_SURV_SEND_TGT SST ON M.RID = SST.RID_SURV_MST AND SST.FLAG = 1
							JOIN LOY.LOY_PRUL_AC2SUR   PAS ON M.RID = PAS.RID_SURV AND PAS.FLAG = 1
							JOIN LOY.LOY_PROM          P   ON PAS.RID_PROM = P.RID AND P.FLAG = 1
							JOIN LOY.LOY_OFR           O   ON P.RID_OFR = O.RID AND O.FLAG = 1
							JOIN LOY.LOY_CPN_MBR       CM  ON SST.RID_MBR = CM.RID_MBR AND O.RID = CM.RID_OFR AND CM.FLAG = 1
							JOIN LOY.LOY_CPN           C   ON CM.RID_CPN_M = C.RID AND C.FLAG = 1
							WHERE M.FLAG = 1
							AND M.RID  = #{rid}
							)
			</when>
		</choose>
		SELECT R.ORDER_NO                                                                     AS "no"
			, M.MBR_NO                                                                       AS "memberNo"
			, com.TO_CHAR(R.REG_DATE, 'YYYY-MM-DD HH24:MI:SS')                                   AS "joinDate"
			, GCD.MARK_NAME                                                                  AS "genderCodeName"
			, CONVERT(NUMERIC, com.TO_CHAR(GETDATE(), 'YYYY') ) - CONVERT(NUMERIC, com.TO_CHAR(com.TO_DATE(C.BIRTH_DATE, 'YYYYMMDD'), 'YYYY'))  + 1 AS "age"
			, T.TIER_NM                                                                      AS "tierName"
			, P.PROD_NM                                                                      AS "productNames"
			, P.TOT_SALE_AMT                                                                 AS "salesTotalAmount"
			, P.SALE_ACT_AMT                                                                 AS "salesActualAmount"
			, P.FG_STO_NM                                                                    AS "storeType"
			, P.AREA1_NM                                                                     AS "area1Name"
			, P.AREA2_NM                                                                     AS "area2Name"
			, P.COMMRCL_NM                                                                   AS "commercialName"
			, P.CHNL_NM                                                                      AS "storeName"
			, P.SALES_DT                                                                     AS "salesDate"
			, P.SALES_WEEKEND_TYPE                                                           AS "salesWeekendType"
			, P.SALES_WEEKEND                                                                AS "salesWeekend"
			, P.SALES_DATETIME_TYPE                                                          AS "salesDateTimeType"
			, P.SALES_DATETIME                                                               AS "salesDateTime"
			, P.SALES_TYPE                                                                   AS "salesType"
		<choose>
			<when test='"P".equals(offerType)'>
			, HRT.PNT_AMT                                                                    AS "heartAmount"
			, ''                                                                           AS "couponName"
			, ''                                                                           AS "couponNo"
			</when>
			<when test='"D".equals(offerType)'>
			, ''                                                                           AS "heartAmount"
			, CPN.CPN_NM                                                                     AS "couponName"
			, CPN.CPN_NO                                                                     AS "couponNo"
			</when>
		</choose>
		<foreach collection="headerList" item="headerDetail">
			, R.${headerDetail.headerKey}                                                    AS ${headerDetail.headerKey}
		</foreach>
		FROM VW_SURV_RST   R
		JOIN LOY.LOY_MBR   M ON R.RID_MBR = M.RID AND M.FLAG = 1
		JOIN LOY.LOY_CUST  C ON M.RID_CUST = C.RID AND C.FLAG = 1
		JOIN LOY.LOY_TIERS T ON M.RID_TIER = T.RID AND T.FLAG = 1
		LEFT JOIN VW_PROD       P ON R.RID_SURV_MST = P.RID_SURV_MST AND R.RID_MBR = P.RID_MBR
		<choose>
			<when test='"P".equals(offerType)'>
			LEFT JOIN VW_HRT HRT ON R.RID_SURV_MST = HRT.RID_SURV_MST AND R.RID_MBR = HRT.RID_MBR
			</when>
			<when test='"D".equals(offerType)'>
			LEFT JOIN VW_CPN CPN ON R.RID_SURV_MST = CPN.RID_SURV_MST AND R.RID_MBR = CPN.RID_MBR
			</when>
		</choose>
		LEFT JOIN COM.COMM_CODE         GCD ON C.GEN_CD = GCD.CODE_NAME AND GCD.GROUP_CODE = 'LOY_GEN_CD' AND GCD.FLAG = 1 AND GCD.LANG = #{lang}
		ORDER BY R.ORDER_NO
		${strEndPaging}
	 -->

	<update id="insertSurveyDetailCopy">
		<selectKey keyProperty="ridSurveyCopy,surveyNo" resultType="com.icignal.loyalty.survey.dto.request.LoySurveyDetailReqDto" order="BEFORE">
			/* LoySurveyMapper.insertSurveyDetail#selectKey */
			SELECT COM.GETNEWID('A')    AS ridSurveyCopy
			, LOY.FN_GET_SURV_NO() AS surveyNo

		</selectKey>

		/* LoySurveyMapper.insertSurveyDetailCopy */
		INSERT INTO LOY.LOY_SURV_MST (
		RID
		, CREATE_BY
		, CREATE_DATE
		, MODIFY_BY
		, MODIFY_DATE
		, FLAG
		, SURV_NO
		, SURV_NM
		, STAT_CD
		, VALID_START_DATE
		, VALID_END_DATE
		, RID_PGM
		, CONTENTS
		, URL_WEB
		, START_INFO_MSG
		, END_INFO_MSG
		, USR_TYPE_CD
		)
		SELECT #{ridSurveyCopy}     AS RID
		, #{createBy}          AS CREATE_BY
		, GETDATE()              AS CREATE_DATE
		, #{modifyBy}          AS MODIFY_BY
		, GETDATE()              AS MODIFY_DATE
		, FLAG                 AS FLAG
		, #{surveyNo}          AS SURV_NO
		, (SURV_NM + ' Copy') AS SURV_NM
		, 'W'
		, VALID_START_DATE
		, VALID_END_DATE
		, RID_PGM
		, CONTENTS
		, ''
		, START_INFO_MSG
		, END_INFO_MSG
		, USR_TYPE_CD
		FROM LOY.LOY_SURV_MST
		WHERE FLAG = 1
		AND RID = #{ridSurvey}
	</update>

	<select id="selectSurveySectionCopyRidList" resultType="com.icignal.loyalty.survey.dto.vo.LoySurveyCopyVo">
		/* LoySurveyMapper.selectSurveySectionCopyRidList */
		SELECT RID               AS originRid
			 , COM.GETNEWID('A') AS copyRid
		FROM LOY.LOY_SURV_SECT WITH(NOLOCK)
		WHERE FLAG         = 1
		  AND RID_SURV_MST = #{ridSurvey}
	</select>

	<update id="insertSurveySectionCopy">
		/* LoySurveyMapper.insertSurveySectionCopy */
		INSERT INTO LOY.LOY_SURV_SECT (
		CREATE_BY
		, CREATE_DATE
		, MODIFY_BY
		, MODIFY_DATE
		, FLAG
		, RID
		, RID_SURV_MST
		, SECT_NO
		, SECT_CONTENTS
		, LAST_YN
		)
		SELECT #{createBy}      AS CREATE_BY
		, GETDATE()          AS CREATE_DATE
		, #{modifyBy}      AS MODIFY_BY
		, GETDATE()          AS MDDIFY_DATE
		, FLAG             AS FLAG
		<foreach collection="ridSurveySectionCopyList" item="sectionCopyVo" open=", CASE" separator=" " close="END AS RID">
			WHEN RID = #{sectionCopyVo.originRid} THEN #{sectionCopyVo.copyRid}
		</foreach>
		, #{ridSurveyCopy} AS RID_SURV_MST
		, SECT_NO          AS SECT_NO
		, SECT_CONTENTS    AS SECT_CONTENTS
		, LAST_YN          AS LAST_YN
		FROM LOY.LOY_SURV_SECT
		WHERE FLAG         = 1
		AND RID_SURV_MST = #{ridSurvey}
	</update>

	<select id="selectSurveyItemCopyRidList" resultType="com.icignal.loyalty.survey.dto.vo.LoySurveyCopyVo">
		/* LoySurveyMapper.selectSurveyItemCopyRidList */
		SELECT RID               AS originRid
		, COM.GETNEWID('A') AS copyRid
		FROM LOY.LOY_SURV_ITEM WITH(NOLOCK)
		WHERE FLAG = 1
		<foreach collection="ridSurveySectionCopyList" item="sectionCopyVo" open="AND RID_SURV_SECT IN (" separator="," close=")">
			#{sectionCopyVo.originRid}
		</foreach>
	</select>

	<update id="insertSurveyItemCopy">
		/* LoySurveyMapper.insertSurveyItemCopy */
		INSERT INTO LOY.LOY_SURV_ITEM (
		CREATE_BY
		, CREATE_DATE
		, MODIFY_BY
		, MODIFY_DATE
		, FLAG
		, RID
		, RID_SURV_SECT
		, ITEM_NO
		, ITEM_TITLE
		, FIELD_TYPE_CD
		, USE_NA
		, START_NUM
		, END_NUM
		, IMAGE_DESC
		, GIVE_OFR_YN
		, OPT_YN
		)
		SELECT #{createBy} AS CREATE_BY
		, GETDATE()     AS CREATE_DATE
		, #{modifyBy} AS MODIFY_BY
		, GETDATE()     AS MODIFY_DATE
		, FLAG
		<foreach collection="ridSurveyItemCopyList" item="itemCopyVo" open=", CASE" separator=" " close="END AS RID">
			WHEN RID = #{itemCopyVo.originRid} THEN #{itemCopyVo.copyRid}
		</foreach>
		<foreach collection="ridSurveySectionCopyList" item="sectionCopyVo" open=", CASE" separator=" " close="END AS RID_SURV_SECT">
			WHEN RID_SURV_SECT = #{sectionCopyVo.originRid} THEN #{sectionCopyVo.copyRid}
		</foreach>
		, ITEM_NO
		, ITEM_TITLE
		, FIELD_TYPE_CD
		, USE_NA
		, START_NUM
		, END_NUM
		, IMAGE_DESC
		, GIVE_OFR_YN
		, OPT_YN
		FROM LOY.LOY_SURV_ITEM
		WHERE FLAG = 1
		<foreach collection="ridSurveySectionCopyList" item="sectionCopyVo" open="AND RID_SURV_SECT IN (" separator="," close=")">
			#{sectionCopyVo.originRid}
		</foreach>
	</update>

	<update id="insertSurveyItemAttrCopy">
		/* LoySurveyMapper.insertSurveyItemAttrCopy */
		INSERT INTO LOY.LOY_SURV_ATTR (
		RID
		, CREATE_BY
		, CREATE_DATE
		, MODIFY_BY
		, MODIFY_DATE
		, FLAG
		, RID_SURV_ITEM
		, ATTR_NO
		, ATTR_VAL
		, TGT_SECT_NO
		, GIVE_OFR_YN
		, RID_TEXT_CTR_ITEM
		)
		SELECT COM.GETNEWID('A') AS RID
		, #{createBy}       AS CREATE_BY
		, GETDATE()           AS CREATE_DATE
		, #{modifyBy}       AS MODIFY_BY
		, GETDATE()           AS MODIFY_DATE
		, FLAG
		<foreach collection="ridSurveyItemCopyList" item="itemCopyVo" open=", CASE" separator=" " close="END AS RID_SURV_ITEM">
			WHEN RID_SURV_ITEM = #{itemCopyVo.originRid} THEN #{itemCopyVo.copyRid}
		</foreach>
		, ATTR_NO
		, ATTR_VAL
		, TGT_SECT_NO
		, GIVE_OFR_YN
		<foreach collection="ridSurveyItemCopyList" item="itemCopyVo" open=", CASE" separator=" " close="END AS RID_TEXT_CTR_ITEM">
			WHEN RID_TEXT_CTR_ITEM = #{itemCopyVo.originRid} THEN #{itemCopyVo.copyRid}
		</foreach>
		FROM LOY.LOY_SURV_ATTR WITH(NOLOCK)
		WHERE FLAG = 1
		<foreach collection="ridSurveyItemCopyList" item="itemCopyVo" open="AND RID_SURV_ITEM IN (" separator="," close=")">
			#{itemCopyVo.originRid}
		</foreach>
	</update>

	<select id="selectContentSurveyList" resultType="com.icignal.loyalty.survey.dto.response.LoySurveyListResDto">
		/* LoySurveyMapper.selectContentSurveyList */
		SELECT LSM.RID                                                                                         AS ridSurvey
		, LSM.SURV_NO                                                                                     AS surveyNo
		, LSM.SURV_NM                                                                                     AS surveyName
		, com.TO_CHAR(LSM.VALID_START_DATE, 'YYYY-MM-DD') + '~' + com.TO_CHAR(LSM.VALID_END_DATE, 'YYYY-MM-DD') AS validDate
		, com.TO_CHAR(LSM.VALID_START_DATE, 'YYYY-MM-DD')                                                     AS validStartDate
		, com.TO_CHAR(LSM.VALID_END_DATE, 'YYYY-MM-DD')                                                       AS validEndDate
		, LSM.STAT_CD                                                                                     AS statusCode
		, EM.NAME                                                                                         AS createBy
		, CONVERT(CHAR(19) ,LSM.CREATE_DATE, 20)                                               AS createDate
		, ISNULL(LTV.CNT, 0)                                                                            AS targetCount
		, ISNULL(LMV.CNT, 0)                                                                            AS surveyCount
		, ${strColumn}
		FROM LOY.LOY_SURV_MST LSM
		LEFT JOIN (
		SELECT LSST.RID_SURV_MST            AS RID_SURV_MST
		, COUNT(DISTINCT LSST.RID_MBR) AS CNT
		FROM LOY.LOY_SURV_SEND_TGT LSST
		WHERE LSST.FLAG = 1
		GROUP BY LSST.RID_SURV_MST
		)                       LTV ON LSM.RID = LTV.RID_SURV_MST
		LEFT JOIN (
		SELECT LSM.RID_SURV_MST            AS RID_SURV_MST
		, COUNT(DISTINCT LSM.RID_MBR) AS CNT
		FROM LOY.LOY_SURV_MBR LSM
		WHERE LSM.FLAG = 1
		GROUP BY LSM.RID_SURV_MST
		)                       LMV ON LSM.RID = LMV.RID_SURV_MST
		LEFT JOIN COM.CRM_USER     CU  ON LSM.CREATE_BY = CU.RID AND CU.FLAG = 1
		LEFT JOIN COM.EMPLOYEE     EM  ON CU.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
		WHERE LSM.FLAG = 1
		AND LSM.STAT_CD = 'A'
		AND ${strCondWhere}
		AND ${strWhere}
		AND LSM.VALID_END_DATE > GETDATE()
		ORDER BY ${strOrderby}
		${strEndPaging}
	</select>

    <!-- /**************************************
    -   관련 파일       fgetLoyStmpDetail      : LOYStampService.java
    ============================================
    -   제목                  : 스탬프 상세 조회
    -   설명                  : 스탬프 상세 조회
    -   결과형태              : 
    ============================================
    -   입력			   : 
    ============================================
    -   작성자                : hy.jun
    -   작성일                : 2019.03.05
    ***************************************/ -->
    <resultMap id="surveyAnalysisMap" type="com.icignal.loyalty.survey.dto.response.LoySurveyAnalysisResDto">
		<result property="sectionNo" column="sectionNo" />
		<result property="sectionContents" column="sectionContents" />
		<result property="itemNo" column="itemNo" />
		<result property="itemTitle" column="itemTitle" />
		<result property="fieldTypeCode" column="fieldTypeCode" />
		<result property="rNum" column="rNum" />
		<result property="totalCount" column="totalCount" />
		<collection property="survSubList" javaType="java.util.ArrayList" column="{rid=rid, sectionNo=sectionNo, itemNo=itemNo}" select="getAnalysisSurvSubList" />
	</resultMap>

	<select id="selectSurveyAnalysis" parameterType="com.icignal.loyalty.survey.dto.response.LoySurveyAnalysisResDto" resultMap="surveyAnalysisMap">
		/* LoySurveyMapper.selectSurveyAnalysis */
		SELECT MT.RID			 AS rid
			 , S.SECT_NO         AS sectionNo
			 , S.SECT_CONTENTS	 AS sectionContents
			 , I.ITEM_NO         AS itemNo
			 , I.ITEM_TITLE      AS itemTitle
			 , I.FIELD_TYPE_CD   AS fieldTypeCode
			 , ROW_NUMBER() OVER( ORDER BY S.SECT_NO, S.SECT_CONTENTS, I.ITEM_NO ) AS rNum
			 , ${strColumn}
		FROM LOY.LOY_SURV_MST MT
				 JOIN LOY.LOY_SURV_SECT S  ON MT.RID = S.RID_SURV_MST AND S.FLAG = 1
				 JOIN LOY.LOY_SURV_ITEM I  ON S.RID = I.RID_SURV_SECT AND I.FLAG = 1
				 LEFT JOIN LOY.LOY_SURV_ATTR IA ON I.RID = IA.RID_SURV_ITEM AND IA.FLAG = 1
				 LEFT JOIN LOY.LOY_SURV_MBR  MR ON MT.RID = MR.RID_SURV_MST AND MR.FLAG = 1 AND S.RID = MR.RID_SURV_SECT AND I.RID = MR.RID_SURV_ITEM AND ISNULL(IA.RID, 'X') = ISNULL(MR.RID_SURV_ATTR, 'X')
		WHERE MT.FLAG = 1
		  AND MT.RID  = #{rid}
		  AND I.FIELD_TYPE_CD IN ('RADIO', 'CHECK_BOX')
		GROUP BY MT.RID, S.SECT_NO, S.SECT_CONTENTS, I.ITEM_NO, I.ITEM_TITLE, I.FIELD_TYPE_CD
		ORDER BY MT.RID, S.SECT_NO, S.SECT_CONTENTS, I.ITEM_NO
	</select>
	
    <select id="getAnalysisSurvSubList" parameterType="com.icignal.loyalty.survey.dto.response.LoySurveyAnalysisResDto" 
    										resultType="com.icignal.loyalty.survey.dto.response.LoySurveyAnalysisSubResDto">
    	/* LoySurveyMapper.getAnalysisSurvSubList */
		SELECT IA.ATTR_VAL       AS name
			 , COUNT(MR.RID_MBR) AS data
		FROM LOY.LOY_SURV_MST MT WITH(NOLOCK)
				 JOIN LOY.LOY_SURV_SECT S WITH(NOLOCK) ON MT.RID = S.RID_SURV_MST AND S.FLAG = 1
				 JOIN LOY.LOY_SURV_ITEM I WITH(NOLOCK) ON S.RID = I.RID_SURV_SECT AND I.FLAG = 1
				 LEFT JOIN LOY.LOY_SURV_ATTR IA WITH(NOLOCK) ON I.RID = IA.RID_SURV_ITEM AND IA.FLAG = 1
				 LEFT JOIN LOY.LOY_SURV_MBR  MR WITH(NOLOCK) ON MT.RID = MR.RID_SURV_MST AND MR.FLAG = 1 AND S.RID = MR.RID_SURV_SECT AND I.RID = MR.RID_SURV_ITEM AND ISNULL(IA.RID, 'X') = ISNULL(MR.RID_SURV_ATTR, 'X')
		WHERE MT.FLAG = 1
		  AND MT.RID  = #{rid}
		  AND S.SECT_NO = #{sectionNo}
		  AND I.ITEM_NO = #{itemNo}
		GROUP BY IA.ATTR_NO, IA.ATTR_VAL
		HAVING COUNT(MR.RID_MBR) > 0
		ORDER BY IA.ATTR_NO, IA.ATTR_VAL
    </select>

	<select id="selectTextItemList" parameterType="com.icignal.loyalty.survey.dto.request.LoySurveyListReqDto"
									resultType="com.icignal.loyalty.survey.dto.response.LoySurveyTextItemListResDto">
		/* LoySurveyMapper.selectTextItemList */
		SELECT lsi.RID AS rid
			 , lss.SECT_NO AS sectNo
			 , lsi.ITEM_NO AS itemNo
			 , lsi.ITEM_TITLE AS itemTitle
			 , lsi.FIELD_TYPE_CD AS fieldTypeCd
			 , ${strColumn}
		FROM loy.LOY_SURV_SECT lss WITH(NOLOCK)
		INNER JOIN loy.LOY_SURV_ITEM lsi WITH(NOLOCK) ON lss.RID = lsi.RID_SURV_SECT
		WHERE 1=1
		  AND lss.RID = #{ridSurveySection}
		  AND lss.FLAG = 1
		  AND lsi.FLAG = 1
		  <!-- AND lsi.RID != #{ridSurveyItem} -->
		  AND lsi.RID NOT IN ( SELECT DISTINCT A.RID_TEXT_CTR_ITEM
								FROM LOY.LOY_SURV_ATTR A
								WHERE A.RID_TEXT_CTR_ITEM IS NOT NULL
							  	AND A.RID_TEXT_CTR_ITEM != '' AND A.FLAG =1)
		  AND lsi.FIELD_TYPE_CD = 'TEXT'
		  AND ${strWhere}
		ORDER BY ${strOrderby}
		${strEndPaging}
	</select>


	<select id="selectSurveySectionRidForAttr" parameterType="com.icignal.loyalty.survey.dto.request.LoySurveyListReqDto"
			resultType="java.lang.String">
		/* LoySurveyMapper.selectSurveySectionRidForAttr */
		SELECT lsi.RID_SURV_SECT  FROM loy.LOY_SURV_ATTR lsa WITH(NOLOCK)
		INNER JOIN loy.LOY_SURV_ITEM lsi WITH(NOLOCK) ON lsa.RID_SURV_ITEM = lsi.RID
		WHERE 1=1
		AND lsa.RID = #{ridSurveyItemAttr}
		AND lsa.FLAG = 1
		AND lsi.FLAG = 1
	</select>

	<select id="selectSurveyItemRidControlled" parameterType="com.icignal.loyalty.survey.dto.request.LoySurveyListReqDto"
			resultType="java.lang.String">
		/* LoySurveyMapper.selectSurveyItemRidControlled */
		SELECT ISNULL(RID_TEXT_CTR_ITEM, '')  FROM loy.LOY_SURV_ATTR lsa WITH(NOLOCK)
		WHERE 1=1
		AND lsa.RID = #{ridSurveyItemAttr}
		AND lsa.FLAG = 1
	</select>

	<update id="initSurveyItemControlled" parameterType="com.icignal.loyalty.survey.dto.request.LoySurveyListReqDto">
		/* LoySurveyMapper.initSurveyItemControlled */
		UPDATE loy.LOY_SURV_ATTR
		SET RID_TEXT_CTR_ITEM = NULL
		WHERE 1=1
		AND RID = #{ridSurveyItemAttr}
		AND FLAG = 1
	</update>

	<select id="selectSurveyItemListPop" parameterType="com.icignal.loyalty.survey.dto.request.LoySurveyListReqDto"
										resultType="com.icignal.loyalty.survey.dto.response.LoySurveyItemListResDto">
		/* LoySurveyMapper.selectSurveyItemListPop */
		SELECT LSI.RID                                           AS ridSurveyItem
			 , LSI.ITEM_NO                                       AS itemNo
			 , LSI.ITEM_TITLE                                    AS itemTitle
			 , LSI.FIELD_TYPE_CD                                 AS fieldTypeCode
			 , LSI.GIVE_OFR_YN                                   AS giveOfferFlag
			 , LSI.OPT_YN                                        AS optionalFlag
			 , E.NAME                                            AS modifyBy
			 , CONVERT(CHAR(19) ,LSI.MODIFY_DATE, 20) AS modifyDate
			 , ${strColumn}
		FROM LOY.LOY_SURV_ITEM LSI
		LEFT JOIN COM.CRM_USER      CU  ON LSI.MODIFY_BY = CU.RID AND CU.FLAG = 1
		LEFT JOIN COM.EMPLOYEE      E   ON CU.ID_EMPLOYEE = E.ID AND E.FLAG = 1
		WHERE LSI.FLAG = 1
		  AND LSI.RID_SURV_SECT = #{ridSurveySection}
		  AND LSI.FIELD_TYPE_CD NOT IN ('DROP_SCORE','TEXT')
		  AND ${strCondWhere}
		  AND ${strWhere}
		ORDER BY ${strOrderby}
			${strEndPaging}
	</select>

	<select id="selectSurveyItemAttrCopyRidList" resultType="com.icignal.loyalty.survey.dto.vo.LoySurveyCopyVo">
		/* LoySurveyMapper.selectSurveyItemAttrCopyRidList */
		SELECT RID               AS originRid
		, COM.GETNEWID('A') AS copyRid
		FROM LOY.LOY_SURV_ATTR WITH(NOLOCK)
		WHERE FLAG = 1
		<foreach collection="ridSurveyItemCopyList" item="itemCopyVo" open="AND RID_SURV_ITEM IN (" separator="," close=")">
			#{itemCopyVo.originRid}
		</foreach>
	</select>
    	
</mapper>