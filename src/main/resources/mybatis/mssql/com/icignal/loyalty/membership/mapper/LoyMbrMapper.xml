<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Wed May 02 14:06:40 KST 2018-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icignal.loyalty.membership.mapper.LoyMbrMapper">

<select id="selectMbrDetail" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrItemReqDto"
							 resultType="com.icignal.loyalty.membership.dto.response.LoyMbrItemResDto" >
/* LOYMbrMapper.selectMbrDetail */
      SELECT
        lm.rid 		AS rid,
        lc.CUST_NM 	AS custNm,
        lm.MBR_NO 	AS mbrNo,
        lc.GEN_GBN_CD                AS  genGbnCd,
        lm.RID_TIER_CUR AS ridTierCur,
        lt.TIER_CD as tierCd,
        lt.TIER_NM AS tierNm,
        lm.HHP_NO AS hhpNo,
        lm.HHP_NO AS hhpNoIn,
        lm.HHP_NO AS hhpNoDec,
        lm.EMAIL_ADDR AS emailAddr,
        lm.EMAIL_ADDR AS emailAddrIn,
        lm.EMAIL_ADDR AS emailAddrDec,
        lc.LUNAR_GBN_CD AS lunarGbnCd,
        lc.BIRTH_DT AS birthDt,
        lm.WEB_ID AS wbMemId,
        lm.RID_CHNL_JOIN as ridChnlJoin
        ,lm.MBR_STAT_CD AS mbrStatCd
        <!-- ,cc.mark_name   as mbrStatNm -->
        ,lm.CHNL_AGRE_SMS             AS  chnlAgreSms
        ,lm.CHNL_AGRE_EMAIL           AS  chnlAgreEmail
        ,lm.APP_NEWS_YN               AS  appNewsYn
        ,lc.rid AS ridCust
        ,lm.CHNL_AGRE_EMAIL_DT as chnlAgreEmailDt
        ,lc.MARRY_YN AS marryYn
        ,lc.MARRY_ANIV AS marryAniv
        ,lm.ADDR1_ZIP AS addr1Zip
        ,lm.ADDR1_DFLT AS addr1Dflt
        ,lm.ADDR1_ZIP AS addr1Zip
        ,lm.ADDR1_DFLT as addr1Dflt
        ,lc2.chnl_nm as chnlJoinNm <!-- 가입채널명 -->
		, CASE WHEN lct2.cust_nm IS NULL THEN
				CASE WHEN lm2.RCMMD_CD IS NULL THEN ''
				  ELSE lm2.RCMMD_CD + '(탈회)' END
		    ELSE lm2.RCMMD_CD END AS joinRcmmdNm
        ,lm.new_user_yn as newUserYn
           , lc.cust_type_cd   as    custTypeCd		/*고객 유형 코드*/
      		, lc.identi_type_cd as identiTypeCd		/*식별 유형*/
      		, lc.identi_val as identiVal
   		,lm.rcmmd_cd	as rcmmdCd
   		,lm.ADDR1_DTL as addr1Dtl
   		,com.TO_CHAR(lc.REALNM_CERTI_DATE,'YYYY-MM-DD HH24:MI') as realNmCertiDate
   		,lm.ecomm_mbr_no as ecomMbrNo
    FROM loy.loy_mbr lm
    LEFT JOIN loy.loy_cust 			lc  ON lm.rid_cust = lc.rid
    LEFT JOIN loy.loy_tiers 		lt  ON lm.RID_TIER_CUR = lt.RID
    LEFT OUTER JOIN LOY.LOY_CHNL lc2 on lc2.flag = 1 and lm.rid_chnl_join = lc2.rid
    left outer join loy.loy_mbr lm2     on lm2.rid = lm.rid_join_rcmmd
    left outer join loy.loy_cust lct2    on lct2.rid = lm2.rid_cust
    WHERE 1=1
    <if test="rid != null and rid != ''"> and lm.rid = #{rid} </if>
    <if test="rid == null or rid == ''">
      <if test="ridCust != null and ridCust != ''">
        and lc.rid = #{ridCust} and lm.mbr_stat_cd &lt;&gt;'20'
      </if>
      <if test="ridCust == null or ridCust == ''">
        <if test="mbrNo != null and mbrNo != ''">
          and lm.mbr_no = #{mbrNo}
        </if>
      </if>
    </if>
    and rownum=1
</select>

<select id="selectMbrDetailInfo" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrDetailInfoReqDto"
 								 resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDetailInfoResDto">
  	/* LOYMbrMapper.selectMbrDetailInfo */
   	SELECT TOP 1
		lm.rid                       AS  rid
      , lm.mbr_no                    AS  mbrNo
      , lc.MARRY_YN                  AS  marryYn
      , lc.MARRY_ANIV                AS  marryAniv
      , lc.GEN_GBN_CD                AS  genGbnCd
      , lm.EMAIL_ADDR                AS  emailAddrIn
      , lm.EMAIL_ADDR                AS  emailAddr
      , lm.EMAIL_ADDR AS emailAddrDec <!-- 'EML' -->
      , lm.CHNL_AGRE_SMS             AS  chnlAgreSms
      , lm.CHNL_AGRE_EMAIL           AS  chnlAgreEmail
      , lm.APP_NEWS_YN               AS  appNewsYn
      , lc.IDENTI_TYPE_CD            AS  identiTypeCd
      , lc.IPIN_NO                   AS  ipinNo
      , lc.AUTH_AGEGRD               AS  authAgegrd
      , lc.AUTH_RESLT                AS  authReslt
      , lm.MBR_TYPE_CD               AS  mbrTypeCd
      , lm.MBR_STAT_CD               AS  mbrStatCd
      , lc.SPOUS_LUNAR_GBN_CD        AS  spousLunarGbnCdCode
      , lc.CHILD_FLG                 AS  childFlg
      , lc.SPOUS_BTHDAY              AS  spousBthday
      
      , lm.CHNL_AGRE_DM              AS  chnlAgreDm
      , lm.CHNL_AGRE_TEL             AS  chnlAgreTel
      <!-- 추가정보 -->
      , lm.RID_CHNL_PRIMARY			 AS  ridChnlPrimary		<!-- 단골매장 -->
      , lcn2.CHNL_NM				 as  chnlPrimaryNm
      , lcn2.CHNL_NO				 as  chnlPrimaryNo
      <!-- 연락처 및 동의정보 -->
      , lm.mbr_terms_agre            as  mbrTermsAgre		<!-- 멤버십 이용동의 -->
      , lm.MKT_AGRE_PRV_INFO         as  mktAgrePrvInfo		<!-- 개인정보 수집 및 활용동의 -->
      , lm.MKT_AGRE_USE         	 as  mktAgreUse			<!-- 마케팅정보 수신동의 -->
      , lm.mkt_agre_third_snd        as  mktAgreThirdSnd	<!-- 개인정보 제3자 제공동의 -->
      , lm.mkt_agre_lbs_biz          as  mktAgreLbsBiz		<!-- 위치정보 수집동의 -->
      , lm.CHNL_AGRE_PUSH            AS  chnlAgrePush		<!-- push 기본 수신동의        -->
      , lm.CHNL_AGRE_KAKAO           AS  chnlAgreKakao		<!-- 카카오톡 수신동의         -->
      , case when ISNULL(lm.E_RECEIPT_USE_YN,'') is not null
      	then case when lm.E_RECEIPT_USE_YN = 'Y' then 'Y' else 'N' end
      	else 'N' end                 AS  eReceiptUseYn		<!-- 영수증 용지 발행 전환여부 2019.01.22 jk.kim 영수증값 그대로 뿌려주게끔 수정요청와서 수정   -->
      <!-- 기타정보 -->
      , lm.FRAUD_MEM_DIV             AS  fraudMemDiv		<!-- 부정회원 구분 -->
      , lc.FOREIGN_CD          		 AS  foreignCd			<!-- 내외국인 구분 -->
      <!-- 가입정보 -->
      , lm.RID_CHNL_JOIN		     as  ridChnlJoin		<!-- 가입채널 -->
      , lcn.CHNL_NM                  as  chnlJoinNm
      , lcn.CHNL_NO                  as  chnlJoinNo
      , CONVERT(CHAR(19), lm.JOIN_DATE, 120)     		     as  joinDate     		<!-- 가입일시     -->
      , CONVERT(CHAR(19), lc.REALNM_CERTI_DATE, 120) 	     as  realnmCertiDate	<!-- 가입인증일시 -->

      <!-- 이메일 변경일시 -->
      , (select create_date from LOY.loy_mbr_chg_hist where rid_mbr = #{rid} and chg_col = 'EMAIL_ADDR' <!-- and app_service_type = #{appServiceId} and country = #{country} --> order by create_date desc offset 0 ROWS FETCH NEXT 1 ROWS ONLY) as emailChgDt
      <!-- 핸드폰 변경일시 -->
      , (select create_date from LOY.loy_mbr_chg_hist where rid_mbr = #{rid} and chg_col = 'HHP_NO' <!-- and app_service_type = #{appServiceId} and country = #{country} --> order by create_date desc offset 0 ROWS FETCH NEXT 1 ROWS ONLY) as hpChgDt
      <!-- 주소 변경일시 -->
      , (select create_date from LOY.loy_mbr_chg_hist where rid_mbr = #{rid} and (chg_col = 'ADDR1_ZIP' or chg_col = 'ADDR1_DFLT' or chg_col = 'ADDR1_DTL') <!-- and app_service_type = #{appServiceId} and country = #{country} --> order by create_date desc offset 0 ROWS FETCH NEXT 1 ROWS ONLY) as ownhomeAdrChgDt
      <!-- 기념일 변경일시 -->
      , case when ISNULL(aniv_upd_dt, '') IS NOT NULL then com.TO_CHAR(aniv_upd_dt, 'YYYY-MM-DD HH24:MI:SS') else '' end AS anivUpdDt

      , case when ISNULL(lm.aniv_dt, '') IS NOT NULL then CONVERT(CHAR(10),com.TO_DATE(lm.aniv_dt, 'MMDD'), 23) else '' end as anivDt
      , lm.PNT_ACRL_YN as pntAcrlYn
      , lm.PNT_USE_YN as pntUseYn
      , lm.PNT_ACRL_N_MSG as pntAcrlNMsg
      , lm.PNT_USE_N_MSG as pntUserNMsg
      , case when ISNULL(lm.MKT_AGRE_PARENT_DT, '') IS NOT NULL then 'Y' else 'N' end AS underForteenYn
      , lm.mkt_agre_third_snd as mktAgreThirdSnd
      , case when ISNULL(lmai.last_login_date,'') is not null then com.TO_CHAR(lmai.last_login_date,'YYYY-MM-DD HH24:MI:SS') else '' end as lastLoginDate
      , case when ISNULL(lmai.svr_last_dt,'') is not null then com.TO_CHAR(lmai.svr_last_dt,'YYYY-MM-DD HH24:MI:SS') else '' end as svrLastDt
      , lcn3.chnl_nm as svrLastChnlNm
      , lcn4.chnl_nm as chnlLastStoreNm
      , lm.WEBID_REG_DT   as webIdRegDt
      , lm.smoking_yn as smokingYn
      , lc.REALNM_CERTI_YN as realNmCertiYn
      , lc.REALNM_CERTI_DATE as realNmCertiDate
   	FROM loy.loy_mbr lm
   	left join loy.loy_mbr_access_info lmai on lmai.rid_mbr = lm.rid
    LEFT JOIN loy.loy_cust    lc   ON lm.RID_CUST = lc.RID
    LEFT JOIN LOY.LOY_CHNL lcn  ON lcn.RID = lm.RID_CHNL_JOIN
    LEFT JOIN LOY.LOY_CHNL lcn2 ON lcn2.RID = lm.RID_CHNL_PRIMARY
    LEFT JOIN LOY.LOY_CHNL lcn3 ON lcn3.RID = lmai.rid_svr_last_chnl
    LEFT JOIN LOY.LOY_CHNL lcn4 ON lcn4.RID = lmai.rid_chnl_last_store
    WHERE lm.rid=#{rid}
  </select>

	<!-- 탈퇴회원 마스킹 해제 -->
    <select id="clearMaskDrop" parameterType="com.icignal.loyalty.membership.dto.request.LoyDropMbrReqDto"
    						   					resultType="com.icignal.loyalty.membership.dto.response.LoyDropMbrResDto">
    /* LoyMbrMapperMapper.clearMaskDrop */
    SELECT lcli.USER_ID AS unMaskUserId
    	,  lc.CUST_NM	AS unMaskCustNm
    	,  lc.HHP		AS unMaskHhp
    FROM LOY.LOY_MBR lm
    JOIN loy.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
    LEFT OUTER JOIN  LOY.LOY_TIERS lt ON lm.RID_TIER = lt.RID AND lt.FLAG = 1
    LEFT OUTER JOIN LOY.LOY_CUST_LOGIN_INF lcli ON lcli.RID_CUST  = lc.RID AND lcli.FLAG = 1
    LEFT OUTER JOIN  LOY.LOY_MBR_SECSN lms ON lms.RID_MBR = lm.RID AND lms.FLAG = 1
    WHERE lm.RID = #{rid}
    </select>

    <select id="selectDropMbrListCnt" parameterType="com.icignal.loyalty.membership.dto.request.LoyDropMbrReqDto"
    								  					resultType="java.lang.Integer">
    /* LoyMbrMapper.selectDropMbrListCnt */
    SELECT COUNT(*)
    FROM LOY.LOY_MBR a
	LEFT OUTER JOIN  loy.LOY_MBR_DROP c ON c.RID_MBR = a.RID
	LEFT OUTER JOIN  loy.LOY_MBR_DROP_REASON d ON d.RID_REG_USER =c.RID_MBR
    WHERE ${strCondWhere}
    AND ${strSVCType}
    AND a.MBR_STAT_CD='C'
    </select>

    <delete id="deleteMbrDrop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto">
	/* LoyMbrMapper.deleteMbrDrop*/
	DELETE FROM LOY.LOY_MBR_DROP
	WHERE RID_MBR = #{rid}
	</delete>

	<select id="selectMbrPointDrop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrPointDropReqDto"
									resultType="com.icignal.loyalty.membership.dto.response.LoyMbrPointDropResDto">
	/* LOYMbrMapper.selectMbrPointDrop*/
	SELECT  t1.MBRNO      			 AS mbrNo
					,t1.CUSTNM               AS custNm
					,t1.MBRSTTYPECD              AS mbrStCd
					,t1.EXPPOINT             AS expPoint
					,t1.EXPDATE              AS expDate
					,t1.BASEDATE             AS baseDate
					,t1.EXPYYMM              AS expyymm
					,t1.RID                  AS rid
				<if test="searchWord == null or searchWord==''">
					,t1.totalCount           AS totalCount
				</if>
				<if test="searchWord !=null and searchWord!=''">
					,${strColumn}
				</if>
			 FROM (
						WITH PAGE_INF AS (
											   			SELECT MAX(t1.SEQ_NO) AS TOT_CNT,
											   				   ${strRownumDecod} -- DECODE( 2 ,0,1, 2  +1) AS START_SEQ_NO ,2+10 AS END_SEQ_NO
														FROM   BATCH.EXPIRING_PNT_MBR t1
														)
						SELECT LM.MBR_NO                                     AS mbrNo        -- 회원번호
							      ,LC.CUST_NM          			 AS custNm       -- 회원명
							      ,EXPM.EXPIRING_POINT           AS expPoint     -- 소멸예정 포인트
							      ,EXPM.EXPIRING_DATE            AS expDate      -- 소멸예정 일시
							      ,EXPM.BASE_DATE                AS baseDate     -- 기준일
							      ,EXPM.EXPIRING_YYYYMM          AS expyymm
							      ,PAGE.TOT_CNT                  AS totalCount
							      ,EXPM.RID_MBR					 AS rid
							      ,LM.MBR_STAT_CD				 AS mbrStTypeCd
						FROM   PAGE_INF PAGE
						INNER JOIN BATCH.EXPIRING_PNT_MBR EXPM ON  1=1
						LEFT OUTER JOIN LOY.LOY_MBR LM ON  EXPM.RID_MBR = LM.RID
						LEFT OUTER JOIN LOY.LOY_CUST LC ON  LC.RID = LM.RID_CUST
						WHERE  EXPM.SEQ_NO BETWEEN PAGE.START_SEQ_NO AND PAGE.END_SEQ_NO
						AND    ${strWhere}
						AND    EXPM.EXPIRING_YYYYMM = #{years}
						ORDER BY ${strOrderby} 
						)t1 --EXPM.SEQ_NO DESC
	</select>

    <select id="clearMaskMbr" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
											resultType="com.icignal.loyalty.membership.dto.response.LoyMbrResDto">
	/* LoyMbrMapper.clearMaskMbr */
	SELECT 
				  lc.CUST_NO 				AS custNo
				, lc.CUST_TYPE_CD 		AS custTypeCd
				, lc.cust_nm				AS unMaskCustNm
				, lc.HHP					AS unMaskHhp
				, lc.EMAIL					AS unMaskEmail
	FROM LOY.LOY_MBR lm
	JOIN LOY.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
	WHERE lm.FLAG = 1
	AND lm.RID = #{rid}
	</select>

    <select id="selectDormancyList" parameterType="com.icignal.loyalty.membership.dto.request.LoyDormancyReqDto"
    													resultType="com.icignal.loyalty.membership.dto.response.LoyDormancyResDto">
    /* LOYMbrMapper.selectDormancyList */
	WITH DOR_MEM AS (
										SELECT DOR.MBR_NO			  					        --회원번호
											     , LOY.FN_GET_MBRNM_MASKING(DOR.CUST_NM) AS CUST_NM	--회원명
											     , DOR.RID_MBR
											     , DOR.HHP_NO 		 					AS HHP_NO     --회원 핸드폰번호
											     , DOR.EMAIL_ADDR    					AS EMAIL_ADDR --회원 이메일주소
											     , DOR.ADDR1_ZIP 							--회원 주소(우편번호)
											     , DOR.ADDR1_DFLT 							--회원 주소1
											     , DOR.ADDR1_DTL 							--회원 주소2
											     , DOR.BIRTH_DT 							--회원 생년월일
											     , DOR.GEN_GBN_CD
											     , ${strColumn}
										FROM   DOR.DOR_MBR_INFO DOR
										WHERE  ${strCondWhere}
										AND    ${strWhere}
									)
	SELECT DOR.MBR_NO  			AS mbrNo        --회원번호
				      ,DOR.CUST_NM   		AS custNm       --회원명
				      ,CONVERT(VARCHAR,LM.MBR_LOCK_DT,23)	AS mbrLockDt  --최종 접속 일자
				      ,com.TO_CHAR(,MA.SVR_LAST_DT,'YYYY-MM-DD HH:mm:ss')		AS svrLastMbr   --최종 접속 일자
				      ,LCH.CHNL_NM			AS chnlNm       --최종 접속 채널
				      ,LM.RID				AS rid          --회원 RID
				      ,DOR.HHP_NO			AS hhpNo        --회원 핸드폰번호
				      ,DOR.EMAIL_ADDR		AS emailAddr    --회원 이메일주소
				      ,DOR.ADDR1_ZIP		AS appr1Zip     --회원 주소(우편번호)
				      ,DOR.ADDR1_DFLT		AS appr1Dflt    --회원 주소1
				      ,DOR.ADDR1_DTL		AS appr1Dtl     --회원 주소2
				      ,DOR.BIRTH_DATE			AS birthDt      --회원 생년월일
				      ,DOR.GEN_GBN_CD	    AS gengbnTypeCd
				      ,DOR.totalCount		AS totalCount   --조회결과수
	FROM DOR_MEM DOR
	INNER JOIN LOY.LOY_MBR LM ON  DOR.RID_MBR = LM.RID
	LEFT OUTER JOIN LOY.LOY_MBR_ACCESS_INFO MA ON 	DOR.RID_MBR = MA.RID_MBR
	LEFT OUTER JOIN LOY.LOY_CHNL LCH ON  LCH.RID = MA.RID_CHNL_LAST_STORE
	WHERE 1=1
		${strEndPaging}
	</select>

    <select id="selectCustNm" parameterType="com.icignal.loyalty.membership.dto.request.LoyDormancyReqDto"
    											resultType="com.icignal.loyalty.membership.dto.response.LoyDormancyResDto">
    /* LOYMbrMapper.selectCustNm */
	SELECT  lm.MBR_NO			AS mbrNo 					--회원번호
		    , dmi.CUST_NM		  	AS custNm					--회원명
		    , lm.RID				  		AS rid					--고객 RID
		    , dmi.HHP_NO		    AS hhpNo
		    , dmi.EMAIL_ADDR     AS emailAddr
	FROM  LOY.LOY_MBR lm
	JOIN DOR.DOR_MBR_INFO dmi 	ON	lm.RID = dmi.RID_MBR
	WHERE  dmi.RID_MBR = #{rid}
	</select>

	<select id="activeDorMbr" parameterType="com.icignal.loyalty.membership.dto.request.LoyDormancyActiveReqDto" statementType="CALLABLE">
        /* LoyMbrMaper.activeDorMbr */
        { CALL LOY.PROC_MBR_ACTIVE_BY_RID_ADMIN( #{rid} ) }
    </select>

	<select id="selectPreDormancyList" parameterType="com.icignal.loyalty.membership.dto.request.LoyDormancyPredUserReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyDormancyPredResDto">
	/* LoyMbrMaper.selectPreDormancyList */
	WITH DOR_MEM AS (
							        SELECT MA.RID_MBR AS RID_MBR
									             , LM.MBR_NO
									             , LM.RID_CUST
									             , LM.MBR_STAT_CD
									             , MA.SVR_LAST_DT AS SVR_LAST_DT
									             , MA.RID_CHNL_LAST_STORE
									             , ${strColumn}
							        FROM   LOY.LOY_MBR_ACCESS_INFO MA
							        INNER JOIN loy.LOY_MBR LM ON  LM.RID = MA.RID_MBR
							        WHERE  MA.SVR_LAST_DT IS NOT NULL
							        <!-- AND    com.TO_CHAR(ADD_MONTHS(MA.SVR_LAST_DT+1,24),'YYYYMM') = com.TO_CHAR(ADD_MONTHS(GETDATE(),${dorTerm}),'YYYYMM') -->
							        AND    MA.SVR_LAST_DT BETWEEN com.TO_DATE(com.TO_CHAR(ADD_MONTHS(GETDATE()+1,-24 + ${dorTerm}),'YYYYMM')+'01','YYYYMMDD')
							        AND    com.TO_DATE(com.TO_CHAR(EOMONTH(ADD_MONTHS(GETDATE()+1,-24 + ${dorTerm})),'YYYYMMDD')+'235959','YYYYMMDDHH24MISS')
							        AND    LM.MBR_LOCK_YN = 'N'
							        AND    LM.MBR_STAT_CD = 'A'
							        AND    ${strWhere}
	     							)
	SELECT DOR.RID_MBR AS rid
	          , DOR.MBR_NO AS mbrNo
	          , LC.CUST_NM AS custNM
	          , CONVERT(VARCHAR,ADD_MONTHS(DOR.SVR_LAST_DT+1,24),23) AS dormancyDt
	          , LCH.CHNL_NM AS chnlNm
	          , CONVERT(VARCHAR,DOR.SVR_LAST_DT,'YYYY-MM-DD HH:mm:ss') AS svrLastDt
	          , DOR.MBR_STAT_CD AS mbrStTypeCd
	          , DOR.totalCount   AS totalCount
	FROM   DOR_MEM DOR
	INNER JOIN loy.LOY_CUST LC ON  LC.RID = DOR.RID_CUST
	LEFT OUTER JOIN LOY.LOY_CHNL LCH ON DOR.RID_CHNL_LAST_STORE =LC.RID
	        ${strEndPaging}
	</select>

	<!-- B2C 포인트 정보 조회 -->
	<!-- 소멸 예정월은 조회하는 달 -1월료 화면에 표시 바랍니다. 예시) 2018년 11월 -->
    <select id="selectPontBalanceB2c" parameterType="com.icignal.loyalty.membership.dto.request.LoyPontBalanceB2cReqDto" statementType="CALLABLE">
        EXEC loy.PROC_POINT_BALANCE_B2C
                #{rid},
                #{p_Rst,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{p_RstCd,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{p_RstMsg,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{p_UsePnt,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{p_AccrualPnt,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{p_Expr1MonthPnt,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{p_PreAcrlPnt,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
    </select>

     <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 SearchHelp조회
    -   설명                  : 회원 SearchHelp조회
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    ***************************************/ -->
    <select id="selectMbrSearchHelp" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrSearchHelpReqDto"
    								 resultType="com.icignal.loyalty.membership.dto.response.LoyMbrSearchHelpResDto">
        /* LOYMbrMapper.selectMbrSearchHelp */
        select
                a.rid                	 as rid       /** rid mbrcard */
              , a.mbr_no                 as mbrNo
              , b.cust_nm  				 as custNm    /* 회원명 */
              , a.WEB_ID                 as webMemId
              , a.MBR_STAT_CD 			 AS mbrStatCd
              , a.hhp_no        as hhpNo
              , a.email_addr    as emailAddr
              , b.birth_dt          as realBirthDt
              , d.tier_nm           as tierNm
              , d.TIER_CD as tierCd
              , b.rid as ridCust
              , a.mbr_lock_yn as mbrLockYn
              , ${strColumn}
        from  loy.loy_mbr a
    	inner join loy.loy_cust b on a.rid_cust = b.rid
        left outer join loy.loy_tiers d  on a.rid_tier_cur = d.rid
        where ${strCondWhere}
          and ${strSVCType}
          and ${strWhere}
          and a.flag = 1
          AND a.mbr_stat_cd = 'A' /* 활성회원만*/
          <if test="first == &quot;X&quot;">
          and 1 = 2
          </if>
          <if test="hhpSearhFlag == &quot;Y&quot;">
            <if test="hhpSearhOpType == &quot; = &quot;">
                and a.hhp_no = #{hhpSearhValue}
            </if>
            <if test="hhpSearhOpType == &quot; LIKE &quot;">
                and a.HHP_NO_TAIL = #{hhpSearhValue}
            </if>
          </if>
        order by ${strOrderby}
        ${strEndPaging}
    </select>

    <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 탈회 회원 회원  리스트 조회
    -   설명                  : 탈회 회원 회원  리스트 조회
    -   결과형태              : 목록
    ============================================
    -   입력
    ==============s==============================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    -   수정자                : 노형래
    -   수정일                : 2020.07.15
    ***************************************/ -->
    <select id="selectDropMbrList" parameterType="com.icignal.loyalty.membership.dto.request.LoyDropMbrReqDto"
    							   					resultType="com.icignal.loyalty.membership.dto.response.LoyDropMbrResDto">
    /* LOYMbrMapper.selectDropMbrList */
   SELECT		  lm.RID AS rid /* 회원 RID */
	            , lm.MBR_NO AS mbrNo
	            , lc.CUST_TYPE_CD AS custTypeCd
	            , lc.CUST_NM AS custNm
	            , lc.HHP AS hhp
	 			, lcc.BIZR_NO	AS bizrNo
	 			, CASE WHEN lc.CERT_VAL IS NOT NULL THEN 'Y' ELSE 'N' END AS ciYn
	 			, lci.EMP_NO	AS empNo
	            , lc.CUST_NO AS custNo
	      		, lt.TIER_NM AS tierNm
			    , lms.rid AS ridMbrSecsn
			    , lms.SECSN_RESN_CD  AS secsnResnCd
			    , lms.SECSN_RESN_ETC  AS secsnResnEtc
			    , CONVERT(VARCHAR,lms.SECSN_DATE, 120) AS secsnDate
			    , lcli.USER_ID AS userId
			    , lcli.rid			AS loginInfoRid
			    , lc.RID		AS ridCust
			    , lc.CUST_TYPE_CD	AS custTypeCd
			    , lms.RE_SBSC_RESN	AS reSbscResn
			    , ${strColumn}
    FROM LOY.LOY_MBR lm
    JOIN loy.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
    LEFT OUTER JOIN LOY.LOY_CUST_C lcc ON lm.RID_CUST = lcc.RID_CUST
    LEFT OUTER JOIN LOY.LOY_CUST_I lci ON lci.RID_CUST = lm.RID_CUST
    LEFT OUTER JOIN  loy.loy_tiers lt ON lm.RID_TIER = lt.RID AND lt.FLAG = 1
    LEFT OUTER JOIN loy.LOY_CUST_LOGIN_INF lcli ON lcli.RID_CUST  = lc.RID AND lcli.FLAG = 1 AND lcli.REP_YN ='Y'
    LEFT OUTER JOIN  loy.LOY_MBR_SECSN lms ON lms.RID_MBR = lm.RID and lms.FLAG = 1
    WHERE ${strCondWhere}
    AND	${strWhere}
    AND lm.FLAG = 1
    AND lm.MBR_STAT_CD = 'C'
    ORDER BY ${strOrderby}
        ${strEndPaging}
    </select>

    <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 정보 변경 이력
    -   설명                  : 회원 정보 변경 이력
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 임소원
    -   작성일                : 2017.10.25
    ***************************************/ -->
    <select id="selectMbrChangeHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrChangeHistListReqDto"
    								     resultType="com.icignal.loyalty.membership.dto.response.LoyMbrChangeHistListResDto">
    /* LoyMbrMapper.selectMbrChangeHistList */
      select
         a.rid
        , (SELECT IIF(ISNULL(b.MARK_NAME, '') = '', a.chg_col, b.MARK_NAME) ) as chgCol
        , a.CREATE_BY             as createBy
        , a.BCHNG_DATA			AS bchngData
        , a.ACHNG_DATA			AS achngData
        , CONVERT(VARCHAR,a.CREATE_DATE,120)			AS createDate
        , a.RMARK					AS rMark
        , e.name 					AS modifyBy
        , CONVERT(VARCHAR,a.MODIFY_DATE,120)	  AS modifyDate
        , ${strColumn}
    FROM LOY.loy_mbr_chg_hist 	a
    LEFT JOIN com.crm_user 		cu ON cu.rid = a.CREATE_BY
    LEFT JOIN com.employee 		e  ON cu.ID_EMPLOYEE = e.id
    LEFT JOIN com.comm_code 	b  ON a.chg_col = b.CODE_NAME AND b.GROUP_CODE = 'HISTORY_MEMBER_COLUMN' AND b.lang = #{lang} <!-- AND b.country = #{country} -->
    <!-- LEFT JOIN com.comm_code 	cc  ON a.chg_pstn = cc.CODE_NAME AND cc.GROUP_CODE = 'HISTORY_CHG_PSTN' AND cc.lang = #{lang} --> <!-- AND cc.country = #{country} -->
      where a.flag = 1
      and ${strWhere}
      and ${strCondWhere}
      AND a.rid_mbr = #{rid}
	ORDER BY ${strOrderby}
    ${strEndPaging}
  </select>

  <!-- 로얄티 프로그램 회원의 비밀번호 조회 -->
    <select id="selectMbrPwdDetail" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrPasswordReqDto"
    								resultType="com.icignal.loyalty.membership.dto.response.LoyMbrPasswordResDto">
        /* LoyMbrMaper.selectMbrPwdDetail */
        SELECT
            pnt_use_pw as pntUsePw,
            case when (pnt_use_pw is null or pnt_use_pw = '') then 0
                 else 1 end as isEmptyPntUsePw
        FROM loy.loy_mbr
        WHERE flag = 1
          AND rid = #{rid}
    </select>

    <update id="mbrPwdUnLock" parameterType="java.lang.String">
    	/* LoyMbrMaper.mbrPwdUnLock */
		UPDATE loy.LOY_MBR_ACCESS_INFO
		SET PW_LOCK_CNT	= 0
		, PW_LOCK_DT = NULL
		WHERE RID_MBR = #{rid}
	</update>

	<select id="mbrPwdLockCheck" parameterType="java.lang.String" resultType="java.lang.Integer">
		/* LoyMbrMaper.mbrPwdLockCheck */
		SELECT count(*) as cnt
		FROM loy.LOY_MBR_ACCESS_INFO
		WHERE rid_mbr =#{rid}
		AND PW_LOCK_DT IS NOT null
	</select>

    <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 단체  리스트 조회
    -   설명                  : 회원 단체  리스트 조회
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    ***************************************/ -->
    <select id="selectMbrGroupList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrGroupReqDto"
    								resultType="com.icignal.loyalty.membership.dto.response.LoyMbrGroupResDto">
        /* LoyMbrMaper.selectMbrGroupList */
        select
            a.rid
            ,a.mbr_no         as mbrNo         /* 회원 번호 */
            ,b.chnl_nm    as chnlNm
            ,c.tier_nm    as tierNm
            <!-- ,d.mark_name    as mbrStat -->
            ,a.mbr_stat_cd as mbrStatCd
        from loy.loy_mbr a
        left outer join LOY.LOY_CHNL b on a.rid_org = b.rid
        left outer join loy.loy_tiers c on a.rid_tier_cur = c.rid
        <!-- left outer join com.comm_code d on a.mbr_stat_cd = d.code_name and d.flag = 1 and d.group_code = 'LOY_MEM_STAT_CD' and d.lang=#{lang} and d.country = #{country} -->
        where  ${strCondWhere}
          and ${strSVCType}
          and ${strWhere}
          and a.mbr_type_cd ='20'
          and a.mbr_stat_cd ='10'
          <if test="chnlRid != null and chnlRid != ''">
      and a.rid_chnl_primary = #{chnlRid}
      </if>
        order by ${strOrderby}
        ${strEndPaging}

    </select>

     <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 단체   조회
    -   설명                  : 회원 단체   조회
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    ***************************************/ -->
    <select id="selectMbrGroup" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrGroupReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrGroupResDto">
        /* LoyMbrMaper.selectMbrGroup */
        select a.rid
              ,a.mbr_no          as    mbrNo         /* 회원 번호 */
            ,b.chnl_nm    as chnlNm
            <!-- 2018.10.23.jhkim.다이소에서 사용하지 않음
            ,a.MEM_DIV	 AS memDiv
          	,e.mark_name AS memDivMarkName
            ,e.mark_name    as memDiv
             -->
            ,c.tier_nm    as tierNm
            ,c.tier_cd    as tierCd
            ,d.mark_name    as mbrStat
            ,a.avl_point    as avlPoint
            ,f.mark_name    as mbrType
            ,a.mbr_type_cd  as mbrTypeCd
            ,a.mbr_stat_cd  as mbrStatCd
            ,b.rid            as chnlRid
        from loy.loy_mbr a
        left outer join LOY.LOY_CHNL b on a.rid_org = b.rid
        left outer join loy.loy_tiers c on a.rid_tier_cur = c.rid
        left outer join com.comm_code d on a.mbr_stat_cd = d.code_name and d.flag = 1 and d.group_code = 'LOY_MEM_STAT_CD' and d.lang=#{lang} and d.country = #{country}
        <!-- 2018.10.23.jhkim.다이소에서 사용하지 않음
        left outer join com.comm_code e on a.mem_div = e.code_name and e.flag = 1 and e.group_code = 'MEMBER_TYPE' and e.lang=#{lang} and e.country = #{country}
         -->
        left outer join com.comm_code f on a.mbr_type_cd = f.code_name and f.flag = 1 and f.group_code = 'LOY_MEM_TYPE_CD' and f.lang=#{lang} and f.country = #{country}
        where 1=1
        and a.rid = #{rid}
    </select>

    <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 직원조회서치핼프
    -   설명                  : 직원조회서치핼프
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    ***************************************/ -->
    <select id="selectEmpSearchHelp" parameterType="com.icignal.loyalty.membership.dto.request.LoyEmpSearchHelpReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyEmpSearchHelpResDto">
        /* LoyMbrMaper.selectEmpSearchHelp */
    select
        distinct e.id  as rid
        ,e.name        as name
        ,f.user_id     as userId
        ,g.div_nm      as divNm
        <!-- ,${strColumn} -->
    from  com.auth  a
        inner join com.auth_group_rel  b on a.id = b.aut_id
        inner join com.auth_group  c on b.aut_group_id = c.id
        inner join com.auth_user_rel  d on c.id = d.aut_group_id
    left join com.crm_user  f on d.rid_user = f.rid
        inner join com.employee  e on f.id_employee = e.id
        left outer join com.crm_division  g on e.rid_division = g.rid
        where ${strCondWhere}
          and ${strSVCType}
          and ${strWhere}
          <!-- and a.flag = 1 -->
          and a.aut_nm = #{authNm}
        order by ${strOrderby}
        ${strEndPaging}
    </select>

	<!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 개명요청 리스트 조회
    -   설명                  : 개명요청 리스트 조회
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    ***************************************/ -->
    <select id="selectMbrRenameReqList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrRenameReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrRenameResDto">
        /* LoyMbrMaper.selectMbrRenameReqList */
    select
        distinct a.rid
            ,a.create_date             as createDate
        ,b.mbr_no             as mbrNo
        ,a.old_name             as oldName
        ,a.rmark             as remark
        ,a.new_name             as newName
        ,a.renm_yn             as renmYn
        ,a.modify_date             as modifyDate
        ,c.name             as empName
        ,a.rid_mbr      as ridMbr
    from loy.loy_renm_rqt a
    left outer join loy.loy_mbr b on a.rid_mbr = b.rid
    left outer join com.employee c on a.modify_by = c.id
        where ${strCondWhere}
          and ${strSVCType}
          and ${strWhere}
        order by ${strOrderby}
        ${strEndPaging}
    </select>

    <select id="selectMbrRename" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrRenameReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrRenameResDto">
      /* LoyMbrMaper.selectMbrRename */
      SELECT lr.RID_MBR
      FROM loy.loy_renm_rqt lr
      WHERE lr.RID_MBR = #{ridMbr}
      AND lr.RENM_YN ='N'
      </select>

      <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 개명요청 저장
    -   설명                  : 개명요청 저장
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    ***************************************/ -->
    <insert id="insertMbrRenameReqDetail" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrRenameReqDto">
     /* LoyMbrMaper.insertMbrRenameReqDetail */
     INSERT INTO loy.loy_renm_rqt
     (RID
     , CREATE_BY
     , MODIFY_BY
     , CREATE_DATE
     , MODIFY_DATE
     , FLAG
     , COUNTRY
     , CURRENCY
     , APP_SERVICE_TYPE
     , TYPE
     , ACCNT_ID
     , RID_MBR
     , RID_EMP_OF_TRTR
     , RENM_YN
     , RENM_DATE
     , NEW_NAME
     , OLD_NAME
     , RMARK)
     VALUES (#{rid},
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      1,
      #{country},
      'KRW',
      #{appServiceId},
      '',
      #{accountId},
      #{ridMbr},
      null,
      'N',
      null,
      #{newName},
      #{oldName},
      #{remark} );
    </insert>

    <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 개명요청 변경
    -   설명                  : 개명요청 변경
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    ***************************************/ -->
    <update id="updateMbrRenameReqDetail" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrRenameReqDto">
     /* LoyMbrMaper.updateMbrRenameReqDetail */
     UPDATE loy.loy_renm_rqt
     SET MODIFY_DATE= GETDATE(),
     RID_MBR= #{ridMbr},
     NEW_NAME= #{newName},
     OLD_NAME= #{oldName},
     RMARK = #{remark}
     WHERE RID= #{rid};
    </update>

     <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 오랜지카드 조회
    -   설명                  : 회원 오랜지카드 조회
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.16
    ***************************************/ -->
    <select id="selectMbrOrangeCardList" parameterType="com.icignal.loyalty.membershipcard.cardmember.dto.request.LoyMbrCardListReqDto"
    									 resultType="com.icignal.loyalty.membershipcard.cardmember.dto.response.LoyMbrCardListResDto">
     /* LoyMbrMaper.selectMbrOrangeCardList */
     select
             b.rid              as rid
      ,b.card_no as cardNo
      ,c.card_knd_nm             as cardKndNm
      <!-- ,d.mark_name             as cprtCard -->
      <!-- ,cc.mark_name             as cprtCardItemCd -->
      ,cprt_card_item_cd             as cprtCardItemTypeCd
      <!-- ,e.mark_name             as stat -->
      ,b.stat         as statCd
      ,c.card_type        as mbrType
      <!-- ,f.mark_name             as regChnlCd -->
      b.reg_chnl_cd				as regChnlTypeCd
      ,b.create_date             as createDate
      ,i.name            as createBy
      ,b.lose_dt             as loseDt
      ,j.name            as loseTrTr
      ,b.card_leav_date             as cardLeavDate
      ,ISNULL(b.cprt_card_cd,'')     as cprtCardCd
      <!-- , ${strColumn} -->
    from loy.loy_mbr a
    inner join loy.loy_mbr_card  b on a.rid = b.rid_mbr
    left outer join loy.loy_card_kind c on b.rid_card_kind  = c.rid
    <!-- left outer join com.comm_code d  on b.cprt_card_cd = d.code_name  and d.group_code   = 'CARD_CORP_TYPE' and d.flag  = 1  and d.lang=#{lang} and d.country = #{country}
    left outer join com.comm_code e  on b.stat = e.code_name  and e.group_code   = 'MEMBER_CARD_STATUS' and e.flag  = 1  and e.lang=#{lang} and e.country = #{country}
    left outer join com.comm_code f  on b.reg_chnl_cd = f.code_name  and f.group_code   = 'CARD_REGIST_CHANNEL' and f.flag  = 1  and f.lang=#{lang} and f.country = #{country}
    left outer join com.comm_code cc  on b.cprt_card_item_cd =cc.code_name  and cc.group_code   = 'CARD_CORP_ITEM' and cc.flag  = 1  and cc.lang=#{lang} and cc.country = #{country} -->

    left outer join com.crm_user g on  b.create_by = g.rid
    left outer join  com.employee i on g.ID_EMPLOYEE = i.id
    left outer join com.crm_user h on  b.rid_lose_trtr = h.rid
    left outer join com.employee j on h.ID_EMPLOYEE = j.id

    where ${strSVCType}
          and ${strWhere}
          and a.rid = #{rid}
          <!-- and a.flag = 1 -->
        order by ${strOrderby}
        ${strEndPaging}
       </select>

        <!--
    /**************************************
    -   관련 파일            : LOYMbrDAO.java (getMbr)
    ============================================
    -   제목                   : 충전량 조회조건 중 년월 리스트 추출
    -   설명                   : 회원이 충전을 한 년월 추출
    -   결과형태             : 다건
    ============================================
    -   입력            :  mbrNo
    -   출력            :
    ============================================
    -   작성자                : sw.lim
    -   작성일                : 2017.10.19
    ***************************************/
    -->
    <select id="selectChargeYm" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="java.util.HashMap">
      /* LoyMbrMaper.selectChargeYm */
      SELECT DISTINCT LEFT(lpt.APPR_DATE,6) AS codeName
    , CONCAT(LEFT(lpt.APPR_DATE,4) , '-', SUBSTRING(lpt.APPR_DATE,5,2) ) AS markName
    FROM loy.loy_pnt_txn lpt
    INNER JOIN loy.loy_mbr lm on lpt.RID_MBR = lm.RID
    INNER JOIN loy.loy_prod lp on lpt.RID_PROD = lp.RID
    INNER JOIN LOY.LOY_CHNL lc ON lpt.RID_CHNL = lc.RID
    LEFT OUTER JOIN ifl.b2b_StationUnitPrice f ON STATION_CD = lc.CHNL_NO
    WHERE lp.PROD_ID IN ('243' , '230')
    AND lpt.FLAG = 1
    AND lm.MBR_NO = #{mbrNo}
    ORDER BY codeName DESC
    </select>

    <!--
    /**************************************
    -   관련 파일            : LOYMbrDAO.java (getMbr)
    ============================================
    -   제목                   : 충전량 조회 결과 리스트 반환
    -   설명                   : 충전량 조회 결과 리스트 반환
    -   결과형태             : 다건
    ============================================
    -   입력            :  mbrNo
            searchYM
            searchDef
    -   출력            :
    ============================================
    -   작성자                : sw.lim
    -   작성일                : 2017.10.19
    ***************************************/
    -->
    <select id="selectChargeList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrChargeResDto">
      /* LoyMbrMaper.selectChargeList */
      SELECT
      lpt.TXN_NUM AS txUniqNo
      ,cc.MARK_NAME AS pntTxnType1Cd
      ,lpt.APPR_DATE AS apprDate
      ,lpt.TXN_DATE AS txnDate
      ,lpt.TXN_DT AS txnDt
      ,lpt.TXN_AMT AS txnAmt
      ,lc.CHNL_NO  AS txnChannelCd
      ,(CASE WHEN lpt.TXN_CHANNEL_CD IN ('11','21','13','31','33') THEN 1 ELSE -1 END) as saveTypeVal
      ,lm.MBR_NO AS mbrNo
      ,lc.CHNL_NM AS chnlNm
      ,lc.MBRBS_CDADD AS mbrbsCdadd
      ,f.UNIT_PRICE AS unitPrice
      ,com.TRUNC(lpt.TXN_AMT/f.UNIT_PRICE * (CASE WHEN lpt.TXN_CHANNEL_CD IN ('11','21','13','31','33') THEN 1 ELSE -1 END),5) as chargeAmt
      ,lp.PROD_ID AS ProdId
       <!-- , ${strColumn} -->
    FROM loy.loy_pnt_txn lpt
    INNER JOIN loy.loy_mbr lm on lpt.RID_MBR = lm.RID
    INNER JOIN loy.loy_prod lp on lpt.RID_PROD = lp.RID
    INNER JOIN LOY.LOY_CHNL lc ON lpt.RID_CHNL = lc.RID
    INNER JOIN com.comm_code cc ON cc.GROUP_CODE = 'TXN_SUB_TYPE_CD'
    AND cc.CODE_NAME = lpt.PNT_TXN_TYPE_2_CD
    <!-- LEFT OUTER JOIN e1if.TEMP_IF_STATION_UNIT_PRICE f ON STATION_CD = lc.CHNL_NO -->
    LEFT OUTER JOIN ifl.b2b_StationUnitPrice f ON STATION_CD = lc.CHNL_NO

    and f.START_DT &lt;= concat(substring(#{searchYM},1,4), '-',substring(#{searchYM},5,6),'-01')
    and f.END_DT &gt;= concat(substring(#{searchYM},1,4), '-',substring(#{searchYM},5,6),'-01')

    WHERE lp.PROD_ID IN ('243','230')
    AND lpt.FLAG = 1
    AND lm.MBR_NO = #{mbrNo}
    <if test="searchDef == &quot;A&quot;">
      AND LEFT(lpt.APPR_DATE,6) = #{searchYM}
    </if>
     <if test="searchDef == &quot;T&quot;">
      AND LEFT(lpt.TXN_DATE,6) = #{searchYM}
    </if>
    ORDER BY ${strOrderby}
        ${strEndPaging}

    </select>


         <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 상담 조회
    -   설명                  : 회원 상담 조회
    -   결과형태           : 조회
    ============================================
    -   입력
    ============================================
    -   작성자                : lee gyeong young
    -   작성일                : 2021-01-04
    ***************************************/ -->
    <select id="selectMbrVocList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrVocListReqDto" 
    		resultType="com.icignal.loyalty.membership.dto.response.LoyMbrVocListResDto">
     /* LoyMbrMapper.selectMbrVocList */
     SELECT a.sr_no                                    AS srNo 
	     , a.cnslg_type_cd_l                          AS cnslgTypeCdl 
	     , a.cnslg_type_cd_m                          AS cnslgTypeCdm 
	     , a.cnslg_type_cd_s                          AS cnslgTypeCds 
	     /*, vsrx.buy_place                             AS buyPlace*/ 
	     , a.cnslg_title                              AS cnslgTitle 
	     , lp.PROD_ID                             	  AS prodId
	     /*, vsrx.prod_nm                               AS prodNm*/ 
	     , a.cnslg_sbst                               AS conslSbst
	     , a.sr_trt_status                            AS srTrtStatus 
	     , vsrx.re_contents                            AS reContent 
	     /*, vsrx.admin_id                              AS adminId*/ 
	     , vsrx.WRITER									AS writer
	     , a.GOODS_CODE 					AS mmZzitemCd 
	     , lp.PROD_NM					AS goodsName
	     , CONVERT(VARCHAR,a.rcp_dt, 120) AS rcpDt
	     , CONVERT(VARCHAR,a.CMPLT_DT, 120) AS endDt
	     , a.rid                                      AS rid 
	     ,${strColumn}
    FROM voc.voc_svc_req a
    LEFT OUTER JOIN voc.VOC_SVC_REQ_X vsrx ON vsrx.RID_VOC = a.RID
    LEFT OUTER JOIN loy.LOY_PROD lp ON lp.PROD_ID = a.GOODS_CODE
    LEFT OUTER JOIN com.crm_user cu ON a.CREATE_BY = cu.RID
    LEFT OUTER JOIN com.employee e ON cu.ID_EMPLOYEE = e.id AND e.flag = '1'
    LEFT OUTER JOIN com.crm_user cu2 ON a.RID_CRMUSER = cu.RID
    LEFT OUTER JOIN com.employee e2 ON cu2.ID_EMPLOYEE = e2.id AND e2.flag = '1'
    WHERE  ${strWhere}
    AND a.FLAG = 1
    AND a.RID_MBR = #{rid}
    	<!--<choose>
	        <when test="mbrStatCd == '탈퇴'">
		    	AND a.RID_MBR = #{rid}
		   	</when>
		   	<otherwise>
		   		AND a.RID_MBR IN ${strMbrIntWhere}
		   	</otherwise>
		</choose>-->
        order by ${strOrderby}
        ${strEndPaging}
    </select>
    
         <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 상담 조회 상세
    -   설명                  : 회원 상담 조회 상세
    -   결과형태           : 상세
    ============================================
    -   입력
    ============================================
    -   작성자                : lee gyeong young
    -   작성일                : 2021-01-04
    ***************************************/ -->
    <select id="selectMbrVocListDesc" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrVocListReqDto" 
    		resultType="com.icignal.loyalty.membership.dto.response.LoyMbrVocListResDto">
     /* LoyMbrMapper.selectMbrVocListDesc */
	   SELECT  a.GOODS_CODE   								AS prodId
	    	 , a.GOODS_CODE							    AS mmZzitemCd 
	    	 , lp.PROD_NM 							AS goodsName
	         /*, vsrx.PROD_NM                               		AS prodNm*/ 
	         , a.cnslg_sbst                        			AS conslSbst 
	         , vsrx.re_contents                        		AS reContent 
	    FROM VOC.VOC_SVC_REQ a
        LEFT JOIN VOC.VOC_SVC_REQ_X vsrx ON vsrx.RID_VOC = a.RID
        LEFT JOIN LOY.LOY_PROD lp ON lp.PROD_ID  = a.GOODS_CODE AND lp.FLAG = 1
            /*LEFT JOIN LOY.LOY_PROD_MALL lp ON lp.GOODS_SEQ = a.GOODS_SEQ
            LEFT JOIN LOY.LOY_PROD_X lpx ON lpx.RID_PROD = lp.RID*/
	    WHERE a.SR_NO = #{srNo}
    </select>

    <!--
    /**************************************
    -   관련 파일            : LOYMbrDAO.java (getMbr)
    ============================================
    -   제목                   : 미인증거래정보
    -   설명                   : 미인증 거래 정보
    -   결과형태             : 다건
    ============================================
    -   입력            :  chnl_no
            chaegePrice
            searchYM
            searchDef
    -   출력            :
    ============================================
    -   작성자                : sw.lim
    -   작성일                : 2017.10.19
    ***************************************/
    -->
    <select id="selectChargeInfo" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrChargeResDto">
    /* LOYMbrMapper.selectChargeInfo */
    SELECT
     T1.CHNL_NO  AS chnlNo
    ,T1.CHNL_NM AS chnlNm
    , #{searchYM} AS searchYM
    , #{dealAmount} AS chargePrice
    ,T2.UNIT_PRICE AS prodUnitCost
    ,com.TRUNC((#{dealAmount}/T2.UNIT_PRICE),5) AS chargeAmt
    FROM LOY.LOY_CHNL  T1

    INNER JOIN ifl.b2b_StationUnitPrice  T2 ON T1.CHNL_NO = T2.STATION_CD

    AND LEFT(T2.START_DT, 7) &lt;= #{searchYM}
        AND LEFT(T2.END_DT, 7) &gt;= #{searchYM}

    WHERE  1=1
    AND    T1.CHNL_NO = #{chnlNo}
    ORDER BY T2.START_DT DESC;

    </select>

    <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 충전소 거래 이력
    -   설명                  : 회원 충전소 거래 이력
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : 이성원
    -   작성일                : 2017.10.23
    ***************************************/ -->
    <select id="selectMbrStnPntTxnList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrStnPntTxnListReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrStnPntTxnListResDto">
     /* LOYMbrMapper.selectMbrStnPntTxnList */
     select <!-- SQL_CALC_FOUND_ROWS STRAIGHT_JOIN -->
             a.rid              as rid
            ,a.rid_chnl       as ridChnl
            ,b.chnl_no             as chnlNo
      ,b.chnl_nm             as chnlNm
      ,a.usable_points             as usablePoints
      ,a.rmark             as rmark
    from loy.loy_stn_pnt a
    left outer join LOY.LOY_CHNL b on a.rid_chnl = b.rid
    where ${strSVCType}
          and ${strWhere}
          and a.rid_mbr = #{mbrRid}
          <!-- and a.flag = 1 -->
        order by ${strOrderby}
        ${strEndPaging}

    </select>

    <!-- /**************************************
    -   관련 파일             : LOYMbrDAO.java
    ============================================
    -   제목                  : 회원 차량이력 조회
    -   설명                  : 회원 차량이력 조회
    -   결과형태              : 목록
    ============================================
    -   입력
    ============================================
    -   작성자                : swlim
    -   작성일                : 2017.10.23
    ***************************************/ -->
    <select id="selectMbrCarHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCarHistResDto">
     /* LOYMbrMapper.selectMbrCarHistList */
     SELECT
    lci.REG_DT AS regDt /*등록 일자 */
    , lci.makr AS makr /* 제조사 */
    , cc1.MARK_NAME as makrCode
    , lci.CAR_MODEL AS carModel /* 차량모델 */
    , cc2.MARK_NAME as carModelCode
    , lci.CAR_NM AS carNm /* 차량명 */
    , lci.CAR_NO AS carNo /* 차량번호 */
    , lci.DSPMT AS dspmt /* 배기량 */
    , lci.AUTO_YN AS autoYn /* 차량기어 */
    , cc3.MARK_NAME as autoYnCode
    , lci.USE_YN AS useYn /* 주요사용여부 */
    , cc5.MARK_NAME AS useYnCode /* 주요사용여부 */
    , lci.PU_DD AS puDd /* 구입일자 */
    , lci.INSUR_DD AS insurDd /* 보험일자 */
    , lci.icom AS icom /* 보험사 */
    , lci.MKNG_YY AS mkngYy /* 연식 */
    , lci.USE_PRPS AS usePrps /* 사용용도 */
    , cc4.MARK_NAME as usePrpsCode
    , lci.rid as rid
    <!-- , ${strColumn} -->
  FROM loy.loy_car_info lci
  LEFT JOIN com.comm_code cc1 ON cc1.code_name = lci.MAKR AND cc1.group_code='MEMBER_CAR_COMP' AND cc1.lang=#{lang}  AND cc1.country  = #{country}
    LEFT JOIN com.comm_code cc2 ON cc2.code_name = lci.CAR_MODEL AND cc2.group_code='MEMBER_CAR_CD' AND cc2.lang=#{lang}  AND cc2.country  = #{country}
    LEFT JOIN com.comm_code cc3 ON cc3.code_name = lci.AUTO_YN AND cc3.group_code='MEMBER_CAR_GEAR' AND cc3.lang=#{lang}  AND cc3.country  = #{country}
    LEFT JOIN com.comm_code cc4 ON cc4.code_name = lci.USE_PRPS AND cc4.group_code='CAR_USAGE_TYPE' AND cc4.lang=#{lang}  AND cc4.country  = #{country}
    LEFT JOIN com.comm_code cc5 ON cc5.code_name = lci.USE_YN AND cc5.group_code='YES_NO_FLAG' AND cc5.lang=#{lang}  AND cc5.country  = #{country}
  WHERE ${strSVCType}
    AND ${strWhere}
    <!-- AND lci.flag = 1 -->
  AND lci.RID_MBR = #{rid}
    ORDER BY ${strOrderby}
    ${strEndPaging}
    </select>

    <!-- /**************************************
      -   관련 파일             : LOYMbrDAO.java
      ============================================
      -   제목                  : 회원 포인트 한도 수정
      -   설명                  : 회원 포인트 한도 수정
      -   결과형태              : 목록
      ============================================
      -   입력
      ============================================
      -   작성자                : sw.lim
      -   작성일                : 2017.10.16
      ***************************************/ -->
  <update id="updateMbrPointLimit" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrPointLimitReqDto">
    /* LOYMbrMapper.updateMbrPointLimit */
    UPDATE loy.loy_mbr
    SET LIMIT_AMT = #{achngData}
      , LIMIT_YN = 'Y'
      , APV_SRVR_TRM_DT = GETDATE()
      , APV_SRVR_TRM_YN = 'Y'
    WHERE 1=1
    AND rid = #{ridMbr}
  </update>

  <!-- /**************************************
      -   관련 파일             : LOYMbrDAO.java
      ============================================
      -   제목                  : 회원 변경이력 추가
      -   설명                  : 회원 변경이력 추가
      -   결과형태              : 목록
      ============================================
      -   입력
      ============================================
      -   작성자                : sw.lim
      -   작성일                : 2017.10.16
      ***************************************/ -->
  <insert id="insertMbrChgHist" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrChgHistReqDto">
     /* LOYMbrMapper.insertMbrChgHist */
    INSERT into loy.loy_mbr_chg_hist
      (RID,
      CREATE_BY,
      MODIFY_BY,
      CREATE_DATE,
      MODIFY_DATE,
      FLAG,
      COUNTRY,
      CURRENCY,
      APP_SERVICE_TYPE,
      ACCNT_ID,
      RID_MBR,
      CHG_PSTN,
      MEM_NO,
      RMARK,
      CHG_TBL,
      CHG_COL,
      BCHNG_DATA,
      ACHNG_DATA)
    VALUES
    (com.getNewID('A'),
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      1,
      #{country},
      'KRW',
      #{appServiceId},
      #{accountId},
      #{ridMbr},
      #{chgPstn},
      #{mbrNo},
      NULL,
      NULL,
      #{chgCol},
      #{bchngData},
      #{achngData}
    )
  </insert>

  <!-- /**************************************
      -   관련 파일             : LOYMbrDAO.java
      ============================================
      -   제목                  : 회원 가입정보
      -   설명                  : 회원 가입정보
      -   결과형태              : 목록
      ============================================
      -   입력
      ============================================
      -   작성자                : sw.lim
      -   작성일                : 2017.10.16
      ***************************************/ -->
  <select id="selectMbrSignInfo" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrSignInfoResDto">
    /* LOYMbrMapper.selectMbrSignInfo */
    SELECT lc.EMP_NO AS empNo
      , lc.SBSC_TMSCNT AS sbscTmscnt
      , lc.FIRST_SBSC_DT AS firstSbscDt
      , lc.FIRST_CARD_REG_DT AS firstCardRegDt
      , lc.SBSC_POINT_PRVD_YN AS sbscPointPrvdYn
      , lc.SBSC_POINT_PRVD_DT AS sbscPointPrvdDt
      , lc.DNAT_POINT_PRVD_YN AS dnatPointPrvdYn
      , lc.DNAT_POINT_PRVD_DT AS dnatPointPrvdDt
      , lc.FRAUD_CUST_REG_DT AS fraudCustRegDt
    FROM loy.loy_cust lc
    INNER JOIN loy.loy_mbr lm ON lc.rid = lm.RID_CUST
    WHERE lm.rid=#{rid};
  </select>

  <!-- /**************************************
      -   관련 파일             : LOYMbrDAO.java
      ============================================
      -   제목                  : 회원 채널 이력
      -   설명                  : 회원 채널 이력
      -   결과형태              : 목록
      ============================================
      -   입력
      ============================================
      -   작성자                : sw.lim
      -   작성일                : 2017.10.16
      ***************************************/ -->
  <select id="selectMbrChnlHistSubList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrChnlHistListResDto">
    /* LOYMbrMapper.selectMbrChnlHistSubList */
    SELECT
      vah.SMS_RPY_MSG AS smsRpyMsg
      , vah.SEND_DT AS sendDt
      , vah.SMS_STAGE AS smsStage
      , vah.MSG_TYPE AS msgType
      , vah.MSG_TITLE AS msgTitle
      , vah.MSG_CONTENT AS msgContent
      <!-- , ${strColumn} -->
    FROM voc.voc_atvy_hist vah
    WHERE ${strSVCType}
      AND ${strWhere}
      AND vah.RID_CUST=#{rid}
      <!-- AND vah.flag = 1 -->
      ORDER BY ${strOrderby}
      ${strEndPaging}
  </select>

   <!-- /**************************************
      -   관련 파일             : LOYMbrDAO.java
      ============================================
      -   제목                  : 단체회원 추가 정보 조회
      -   설명                  : 단체회원 추가 정보 조회
      -   결과형태              :
      ============================================
      -   입력
      ============================================
      -   작성자                : sw.lim
      -   작성일                : 2017.11.07
      ***************************************/ -->
  <select id="selectMbrGroupAddInfo" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
  								     resultType="com.icignal.loyalty.membership.dto.response.LoyMbrGroupAddInfoResDto">
    /* LoyMbrMapperMapper.selectMbrGroupAddInfo */
    SELECT
      lm.rid                      AS rid
      , lc.rid                    AS chnlId
      , lc.CHNL_NM                AS chnlNm
      , lc.MBRBS_CDADD            AS mbrbsCdadd
      , lc.ZIP_CD                 AS zipCd
      , lc.JIBUN_ADDR_DTL         AS adrDtl
      , lc.EMAIL                  AS email
      , lc.PAR_RID                AS parRid
      , lc1.CHNL_NO               AS parChnlNo
      , lc1.CHNL_NM               AS parChnlNm
      , lc.REPR_NM                AS reprNm
      , lc.BIZR_NO                AS bizrNo
      , lc.FAX_NO                 AS faxNo
      , lc.TEL_NO                 AS telNo
      , lc.HP_NO                  AS hpNo
      , lc.SBSC_DD                AS sbscDd
      , lc.RID_ACRL_RULE          AS ridAcrlRule
      , pb.RULE_CD                AS ruleCd
      , pb.RULE_TYPE_CD           AS ruleTypeCd
      , lc.TRMN_DD                AS trmnDd
      , lc.RMARK                  AS rmark
      , lc.DNAT_START_DAY         AS dnatStartDay
      , lc.DNAT_END_DAY           AS dnatEndDay
      , lc.FND_DD                 AS fndDd
      , lc.OPRT_PRPS              AS oprtPrps
      , lc.FRAUD_DIV              AS fraudDiv
      , lc.FRAUD_MBRBS_ACTN_DIV   AS fraudMbrbsActnDiv
      , lc.FRAUD_MBRBS_ACTN_DESC  AS fraudMbrbsActnDesc
      , lc.sido         AS sido
      , lc.gugun          AS gugun
      , lc.road_nm_adr_zipcd    AS roadNmAdrZipCd
      , lc.road_nm_adr      AS roadNmAdr
    FROM loy.loy_mbr lm
    LEFT JOIN LOY.LOY_CHNL lc  ON lm.RID_ORG = lc.RID
    LEFT JOIN LOY.LOY_CHNL lc1 ON lc.PAR_RID = lc1.RID
    LEFT JOIN loy.loy_pnt_base_adm pb ON lc.RID_ACRL_RULE = pb.RID
    WHERE lm.rid = #{rid};
  </select>


  <!-- /**************************************
      -   관련 파일             : LOYMbrDAO.java
      ============================================
      -   제목                  : 단체 회원 - 변경이력 조회
      -   설명                  : 단체 회원 - 변경이력 조회
      -   결과형태              : 목록
      ============================================
      -   입력
      ============================================
      -   작성자                : sw.lim
      -   작성일                : 2017.11.7
      ***************************************/ -->
  <select id="selectMbrGroupCngList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrGroupCngListResDto">
    /* LOYMbrMapper.selectMbrGroupCngList */
    SELECT
      lch.CREATE_DATE   AS createDate
      , e.name      AS createBy
      , lch.CHG_ITEM    AS chgItemCd
      , cc1.MARK_NAME   AS chgItem
      , lch.BCHNG_VAL   AS bchngVal
      , lch.ACHNG_VAL   AS achngVal
      , lch.CD_NM       AS cdNm
      , lch.DESC1       AS desc1
      , lch.RID_PARENT  AS ridParent
      <!-- , ${strColumn} -->
    FROM loy.loy_chg_hist lch
    INNER JOIN LOY.LOY_CHNL  lcn ON lch.RID_PARENT = lcn.RID
      INNER JOIN loy.loy_mbr lm ON lcn.RID = lm.RID_ORG
      left JOIN com.crm_user cu ON cu.rid = lch.CREATE_BY
        INNER JOIN com.employee e ON cu.ID_EMPLOYEE = e.id
        LEFT JOIN com.comm_code cc1 ON lch.CHG_ITEM = cc1.CODE_NAME AND cc1.GROUP_CODE = 'HISTORY_ACCOUNT_COLUMN' AND cc1.lang=#{lang}  AND cc1.country  = #{country}
    WHERE lm.RID=#{rid}
    AND ${strSVCType}
      AND ${strWhere}
      <!-- AND lch.flag = 1 -->
      ORDER BY ${strOrderby}
      ${strEndPaging}
  </select>

	<!-- 변경이력 저장 프로시저 실행 -->
	<update id="insertMbrCngHist" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrChgHistAddReqDto" statementType="CALLABLE">
		/* LoyMbrMaper.insertMbrCngHist */
		{
			CALL LOY.PROC_MBR_CHG_HIST_INS(
				  #{cipherKey}	/*암복호화키*/
				, #{createBy}	/*최초 실행자 rid*/
				, #{chgTbl}		/*변경 대상 테이블*/
				, #{bchngData}  /*변경전 데이터(Before Change Data)*/
				, #{bchngEnYn}  /*변경전 데이터 암호화 상태*/
				, #{achngData}  /*변경된 데이터(After Change Data)*/
				, #{achngEnYn}	/*변경된 데이터 암호화 상태*/
				, #{chgCol}     /*변경된 컬럼*/
				, #{rmark}     	/*비고*/
				, #{mbrNo}      /*변경이력등록대상 회원번호*/
				, #{chgColLov}  /*변경된 컬럼 LOV값*/
				, #{chgPstn}    /*변경 위치*/
				, #{rsltMsg,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
				, #{resultFlg,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT} /*필수: 실행 결과 S:성공,F:실패*/
			)
		}
	</update>

   <!-- 회원 전체 건수 -->
  <select id="selectMbrAllCount" resultType="java.lang.Integer">
    /* LoyMbrMaper.selectMbrAllCount */
    select count(*)
      from loy.loy_mbr lm
     where lm.MBR_TYPE_CD = '10'
       and lm.MBR_STAT_CD &lt;&gt; '20'
  </select>


  	<!-- 회원 기존 포인트사용비밀번호 조회 -->
	<select id="selectMbrPntUsePw" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto" resultType="java.lang.String">
		/* LoyMbrMaper.selectMbrPntUsePw */
		select 	pnt_pwd 	
		from 	loy.loy_mbr
		where 	rid = #{ridMbr}
	</select>

	<!-- 회원 포인트사용비밀번호 변경 -->
	<update id="updateMbrPntUsePw" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto">
		/* LoyMbrMaper.updateMbrPntUsePw */
		update	loy.loy_mbr
		set 	pnt_pwd = #{pntUsePw}
		where 	rid = #{ridMbr}
	</update>
	
		<!-- 회원 포인트사용비밀번호(락앤락) 변경 -->
	<update id="updateMbrPntUsePwLL" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto">
		/* LoyMbrMaper.updateMbrPntUsePwLL */
		update	loy.loy_mbr
		set 	pnt_pwd = #{pntUsePw}
		where 	rid = #{ridMbr}
	</update>
	

	<select id="clearDupMbr" parameterType="com.icignal.loyalty.membership.dto.request.LoyDupMbrReqDto"
							 resultType="com.icignal.loyalty.membership.dto.response.LoyDupMbrListResDto">
		/* LoyMbrMaper.clearDupMbr */
		SELECT    wmd.CUST_NM			      AS custNm			--고객명
		 		,wmd.HHP_NO		as hpNo
				,wmd.EMAIL_ADDR  as emailaddr
		  FROM  batch.WIPOINT_MBR_DUP    wmd
		  WHERE   wmd.RID_MBR =#{rid}
	</select>

	<!-- 탈회 사유 등록 -->
	<insert id="insertDropReason" parameterType="com.icignal.loyalty.membership.dto.request.LoyDropReasonReqDto" >
		/* LoyMbrMaper.insertDropReason */
		INSERT INTO LOY.LOY_MBR_DROP_REASON
				(RID,
				CREATE_BY,
				MODIFY_BY,
				CREATE_DATE,
				MODIFY_DATE,
				FLAG,
				<!-- COUNTRY,
				CURRENCY,
				APP_SERVICE_TYPE, -->
				ACCNT_ID,
				RID_MBR,
				REG_DT,
				RID_REG_USER,
				DROP_COMMNET)
		VALUES(
				#{rid},
				#{createBy},
				#{modifyBy},
				GETDATE(),
				GETDATE(),
				1 ,
				<!-- #{country},
				'KRW',
				#{appServiceId}, -->
				#{accountId},
				#{ridMbr},
				GETDATE(),
				#{modifyBy},
				#{dropReason})
	</insert>

  <select id="selectMbrPntAcrlUseYn" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrPntYnReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrPntYnResDto">
		/* LoyMbrMapper.selectMbrPntAcrlUseYn */
		select 	pnt_acrl_yn as pntAcrlYn
		<!-- 		, pnt_use_yn as pntUseYn -->
		from 	loy.loy_mbr
		where 	mbr_no = #{mbrNo}
	</select>

	<!-- /**************************************
      -   관련 파일             : LOYMbrDAO.java
      ============================================
      -   제목                  : 포인트 이관 대상자 조회
      -   설명                  : 포인트 이관 대상자 조회
      -   결과형태              :
      ============================================
      -   입력
      ============================================
      - 다이소
      -   작성자                : mj.kim
      -   작성일                : 2019.02.11
      ***************************************/ -->
	<select id="selectTransPoint" parameterType="com.icignal.loyalty.membership.dto.request.LoyTransPointListReqDto"
								  resultType="com.icignal.loyalty.membership.dto.response.LoyTransPointListResDto">
		/* LoyMbrMapper.selectTransPoint */
		SELECT a.*
		      ,${strColumn}
		FROM (
		 SELECT   lm.RID                   AS   ridMbr
		                     ,cc.MARK_NAME            AS   mbrStatCd
		                      ,lc.CUST_NM               AS   custNm
		                      ,lm.HHP_NO  AS   hhpNo
		                     ,lm.email_addr          AS    emailAddr
		                     ,lc.BIRTH_DT               AS   birthDt
		                     ,lm.MBR_NO               AS   mbrNo
		                     ,(SELECT DECODE(COUNT(*),0,0,ISNULL(SUM(usePnt), 0))
		                         FROM (SELECT SUM(CASE WHEN  lpaa.VALID_START_DATE &lt;=  com.TRUNC_DATE(GETDATE()) AND lpaa.VALID_END_DATE &gt;= TRUNC(GETDATE()) THEN lpaa.BALNC  ELSE 0 END ) AS usePnt
		                                 FROM loy.loy_pnt_acrl lpaa
		                                 WHERE 1=1
		                                   AND lpaa.FLAG = 1
		                                   AND lpaa.rid_mbr = lm.RID
		                                   AND lpaa.OFFER_TYPE_CD= 'POINT')) AS pntUse
		                       ,(SELECT DECODE(COUNT(*),0,0,ISNULL(SUM(preAcrlPnt), 0))
		                         FROM (SELECT SUM(CASE WHEN lpaa.VALID_START_DATE &gt;com.TRUNC_DATE(GETDATE()) THEN lpaa.BALNC ELSE 0  END ) AS preAcrlPnt
		                                 FROM loy.loy_pnt_acrl lpaa
		                                 WHERE 1=1
		                                   AND lpaa.FLAG = 1
		                                   AND lpaa.rid_mbr = lm.RID
		                                   AND lpaa.OFFER_TYPE_CD= 'POINT')) AS pntPreUse
		                       ,lm.MBR_STAT_CD             AS   cdFlag
		                 FROM   loy.LOY_MBR       lm
		                 JOIN  loy.LOY_CUST      lc      ON lc.RID=lm.RID_CUST   AND LM.MBR_STAT_CD='A'
		         LEFT OUTER JOIN  com.COMM_CODE cc ON cc.GROUP_CODE='PNT_TRANS_MBR_CD1' AND lm.MBR_STAT_CD=cc.CODE_NAME
		                WHERE  ${strCondWhere}
		               <!--########################	  중복 테이블 조회      ########################-->
		             UNION ALL
		                SELECT    lc.RID_MBR                AS  ridMbr
		                      ,CASE WHEN lc.MBR_STAT_CD ='A' THEN '중복회원'
		                            WHEN lc.MBR_STAT_CD =NULL THEN '중복회원' END AS  mbrStatCd
		                      ,lc.CUST_NM                  AS  custNm
		                      ,lc.HHP_NO AS hhpNo
		                     ,lc.email_addr    AS emailAddr
		                     ,lc.BIRTH_DT               AS   birthDt
		                     ,lc.MBR_NO                  AS   mbrNo
		                     ,(SELECT DECODE(COUNT(*),0,0,ISNULL(SUM(usePnt), 0))
		                         FROM (SELECT SUM(CASE WHEN  lpaa.VALID_START_DATE &lt;=  com.TRUNC_DATE(GETDATE()) AND lpaa.VALID_END_DATE &gt;= TRUNC(GETDATE()) THEN lpaa.BALNC  ELSE 0 END ) AS usePnt
		                                 FROM loy.loy_pnt_acrl lpaa
		                                 WHERE 1=1
		                                   AND lpaa.FLAG = 1
		                                   AND lpaa.rid_mbr = lc.RID_MBR
		                                   AND lpaa.OFFER_TYPE_CD= 'POINT')) AS pntUse
		                       ,(SELECT DECODE(COUNT(*),0,0,ISNULL(SUM(preAcrlPnt), 0))
		                         FROM (SELECT SUM(CASE WHEN lpaa.VALID_START_DATE &gt; com.TRUNC_DATE(GETDATE()) THEN lpaa.BALNC ELSE 0  END ) AS preAcrlPnt
		                                 FROM loy.loy_pnt_acrl lpaa
		                                 WHERE 1=1
		                                   AND lpaa.FLAG = 1
		                                   AND lpaa.rid_mbr = lc.RID_MBR
		                                   AND lpaa.OFFER_TYPE_CD= 'POINT')) AS pntPreUse
		                     ,lc.MBR_STAT_CD+1       AS   cdFlag
		                  FROM   BATCH.WIPOINT_MBR_DUP    lc
		                  WHERE  ${strCondWhere}
		                  ) a
								${strEndPaging}

	</select>

	<!-- /**************************************
      -   관련 파일             : LOYMbrDAO.java
      ============================================
      -   제목                  : 포인트 이관 이력 삽입
      -   설명                  : 포인트 이관 이력  삽입
      -   결과형태              :
      ============================================
      -   입력
      ============================================
      - 다이소
      -   작성자                : mj.kim
      -   작성일                : 2019.02.11
      ***************************************/ -->
	<insert id="insertTransHist" parameterType="com.icignal.loyalty.membership.dto.request.LoyDropReasonReqDto" useGeneratedKeys="false" >
		/* LoyMbrMapper.insertTransHist */
		INSERT INTO LOY.LOY_MBR_PNT_MERGE_HIST
			(RID,
			CREATE_BY,
			CREATE_DATE,
			RID_MBR_SRC,  --차감 대상
			RID_MBR_TGT,  --적립 대상
			PNT,
			REG_USER_ID,
			REG_DT,
			REASON)
		VALUES(
			com.getNewId('A'),
			#{createBy},
			GETDATE(),
			#{srgMbr}, 			--차감대상
			#{tgtMbr}, 			--적립대상
			#{pnt},
			#{accountId},
			GETDATE(),
			#{reasonData})
	</insert>

	<select id="transPointExec" parameterType="com.icignal.loyalty.membership.dto.request.LoyTransPointListReqDto" statementType="CALLABLE">
        /* LoyMbrMapper.transPointExec */
        { call loy.PROC_MBR_PNT_TRANS(
                #{pRidMbrRcv}, --받는 회원
                #{pRidMbrGiv}, --주는 회원
                #{pDropMbrYn}, --YN
                #{pModifyBy},  --담당자
                #{pReason} ,
                #{pRslt,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{pRsltCd,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{pRsltMsg,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT})
        }

    </select>

    <select id="selectTransPntHist" parameterType="com.icignal.loyalty.membership.dto.request.LoyTransPointListReqDto"
    							    resultType="com.icignal.loyalty.membership.dto.response.LoyTransPntHistResDto">
	/* LoyMbrMapperMapper.selectTransPntHist */
		 SELECT 		 a.REG_DT   	 AS regDt ,
   			    		case when c1.rid is not null then c1.cust_nm else e.cust_nm end 		AS srcMbr,
   			    		c2.cust_nm 		AS tgtMbr,
   			    		a.pnt 			AS pnt ,
   			    		cu.user_id       AS regUser,
   			    		a.REASON		AS  reason,
   			    		a.rid			AS rid,
   			    		case when b.rid is not null then cc1.MARK_NAME else cc2.MARK_NAME end	as srcMbrCd,
   			    		${strColumn}
		      FROM LOY.LOY_MBR_PNT_MERGE_HIST a
		LEFT OUTER JOIN loy.loy_mbr b ON a.RID_MBR_SRC = b.rid
		LEFT OUTER JOIN batch.WIPOINT_MBR_DUP  e ON a.RID_MBR_SRC = e.rid_mbr
		LEFT OUTER JOIN loy.loy_cust c1 ON b.rid_cust = c1.rid
		INNER JOIN loy.loy_mbr d ON a.RID_MBR_TGT = d.rid
		INNER JOIN loy.loy_cust c2 ON d.rid_cust = c2.rid
		LEFT OUTER JOIN com.crm_user cu ON cu.rid = a.CREATE_BY
		LEFT OUTER JOIN com.COMM_CODE cc1  ON cc1.GROUP_CODE ='LOY_MEM_STAT_CD' AND b.MBR_STAT_CD = cc1.CODE_NAME
		LEFT OUTER JOIN com.COMM_CODE cc2  ON cc2.GROUP_CODE ='LOY_MEM_STAT_CD' AND e.MBR_STAT_CD = cc2.CODE_NAME
		WHERE a.RID_MBR_SRC =#{ridMbr}
		  OR a.RID_MBR_TGT =#{ridMbr}
		  ORDER BY a.reg_dt desc
		  ${strEndPaging}
	</select>

    <update id="updateMbrName" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrRenameReqDto">
       /* LoyMbrMapper.updateMbrName */
       UPDATE loy.loy_cust
       set cust_nm = #{newName}
          ,modify_date = GETDATE()
       where rid = (select rid_cust from loy.loy_mbr where rid = #{rid})
      </update>

      <select id="selectMbrDivList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrDivListReqDto"
      							    resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDivListResDto">
		/*LoyMbrMaper.selectMbrDivList*/
		select 	DISTINCT lmu.rid as rid
				<!-- , c3.code_name as batchResultCd -->
				, lmu.batch_result_cd as batchResultCd
				<!-- , c3.mark_name as batchResultCdNm -->
				, lmu.file_path as filePath
				, lmu.file_name as fileName
				, CONVERT(VARCHAR,lmu.file_upload_dt, 120) as fileUploadDt
				, lmu.file_upload_user_rid as fileUploadUserRid
				, emp1.name as fileUploadUserRidNm
				, CONVERT(VARCHAR,com.TO_DATE(lmu.pnt_apply_dt, 'YYYYMM'), 'YYYY-MM') as pntApplyDt
				, lmu.confirm_dt as confirmDt
				, CASE WHEN lmu.confirm_dt IS NOT NULL THEN '확정' ELSE '미확정' END as confirmDtNm
				, lmu.confirm_user_rid as confirmUserRid
				, emp2.name as confirmUserRidNm
				, lmu.upload_cnt as uploadCnt
				, lmu.batch_success_cnt as batchSuccessCnt
				, lmu.batch_fail_cnt as batchFailCnt
				, lmu.batch_error_desc as batchErrorDesc
				, lmu.total_acrl_amt as totalAcrlAmt
				,  CEILING(COUNT(distinct lmu.rid) OVER()) totalCount
		from 	LOY.LOY_MBR_UPLOAD lmu
		<!-- left outer join com.comm_code c3 on c3.group_code = 'PNT_UPLOAD_BATCH_STATUS_CD' and c3.code_name = lmu.batch_result_cd and c3.lang = #{lang} and c3.flag = 1 -->
		join 	com.crm_user cu1 on cu1.rid = lmu.file_upload_user_rid
		join 	com.employee emp1 on emp1.id = cu1.id_employee
		left outer join com.crm_user cu2 on cu2.rid = lmu.confirm_user_rid
		left outer join com.employee emp2 on emp2.id = cu2.id_employee
		where 	${strCondWhere}
			and ${strSVCType}
			and ${strWhere}
			and lmu.flag = 1
		ORDER BY ${strOrderby}
		${strEndPaging}
	</select>

	<select id="selectMbrUpldItemList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrUploadItemReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrUploadItemResDto">
		/*LoyMbrMaper.selectMbrUpldItemList*/
		select	/*+ ordered no_merge(lmui) push_pred(lmui) INDEX(lmui rid_mbr_upload_IDX lopd LOY_OFFER_PNT_DTL_IX01) use_nl(lmui mcm r o lopd lm lc) */
				lmui.rid as rid
				, lmui.mbr_no as mbrNo
				, lmui.target_nm as targetNm
				, lmui.target_hhp_no as targetHhpNo
				, CONVERT(VARCHAR,lmui.acrl_amt, '999,999,999,999,999') as acrlAmt
				, CONVERT(VARCHAR,lmui.valid_start_date, 23) as validStartDate
				, CONVERT(VARCHAR,lmui.valid_end_date, 23) as validEndDate
				, lmui.batch_result_cd as batchResultCd
				<!-- , c1.mark_name as batchResultCdNm -->
				, lmui.batch_error_desc as batchErrorDesc
				, lm.mbr_no as mbrNoChk
				, lc.cust_nm as custNmChk
				, lm.mbr_stat_cd as mbrStatCdChk
				<!-- , c2.mark_name as mbrStatCdNmChk -->
				, lmui.rid_mbr as ridMbr
				, mcm.cam_nm as camNm
				<!-- , c13.mark_name as validStartdtBasCdNm --> <!-- 기준일자유형 -->
				, lopd.VALID_STARTDT_BAS_CD as validStartdtBasTypeCd
				, lopd.VALID_START_DTNUM as validStartDtnum <!-- 혜택시작일 -->
				, lopd.VALID_END_DTNUM as validEndDtnum <!-- 소멸예정월 -->
				, lc.chnl_nm as dividorChnlNm <!-- 재원부서명 -->
				, mcm.PNT_ACCNT_CODE_VAL as pntAccntCodeVal <!-- 회계코드 -->
				<!-- , c9.mark_name as pntAccntBigTypeCd --> <!-- 지급계정 대분류 -->
				, mcm.PNT_ACCNT_BIG_TYPE_CD as pntAccntBigCd
				<!-- , c10.mark_name as pntAccntMidTypeCd --> <!-- 지급계정 중분류 -->
				, mcm.PNT_ACCNT_MID_TYPE_CD as pntAccntMidCd
				<!-- , c11.mark_name as pntAccntSmlTypeCd --> <!-- 지급계정 소분류 -->
				, mcm.PNT_ACCNT_SML_TYPE_CD as pntAccntSmlCd
				<!-- , c12.mark_name as pntAccntDetailTypeCd --> <!-- 지급계정 세분류 -->
				, mcm.PNT_ACCNT_DETAIL_TYPE_CD as pntAccntDetailCd
				, lmui.acrl_date as acrlDate <!-- 적립일시 -->
				, lmui.seq as seq <!-- 순서 -->
				, lmui.CI AS ci
				, t1.totalCount
		from 	(	select 	*
					from 	LOY.LOY_MBR_UPLOAD_ITEM lmui
					where 	${strCondWhere}
						and ${strSVCType}
						<!-- and ${strDataAuthWhere} -->
						and lmui.rid_mbr_upload = #{ridMbrUpload}
						and lmui.flag = 1
						<if test="batchResultCd != null and batchResultCd != ''">
						and lmui.batch_result_cd = #{batchResultCd}
						</if>
					<if test="sidx == 'lmui.seq' or sidx == 'lmui.acrl_date' or sidx == 'lmui.mbr_no' or sidx == 'lmui.target_nm'
							or sidx == 'lmui.target_hhp_no' or sidx == 'lmui.acrl_amt' or sidx == 'lmui.batch_error_desc'
							or sidx == 'lmui.rid' or sidx == 'lmui.batch_result_cd'">
						ORDER BY ${strOrderby}
						${strEndPaging}
					</if>
				) lmui
<!-- 		join 	LOY.LOY_PNT_UPLOAD lpu on lpu.rid = lmui.rid_mbr_upload and lpu.flag = 1 -->
		<!-- left join com.comm_code c1 on c1.group_code = 'PNT_UPLOAD_ITEM_BATCH_STATUS_CD' and c1.code_name = lmui.batch_result_cd and c1.lang = #{lang} and c1.flag = 1 -->
		left join loy.loy_mbr lm on lm.rid = lmui.rid_mbr
		left join loy.loy_cust lc on lc.rid = lm.rid_cust
		<!-- left join com.comm_code c2 on c2.group_code = 'LOY_MEM_STAT_CD' and c2.code_name = lm.mbr_stat_cd and c2.lang = #{lang} and c2.flag = 1 -->

		left join mkt.mkt_cam_mst mcm on mcm.id = lmui.rid_cam and mcm.flag = 1
		left join mkt.mkt_cam_offer_rel r on r.flag = 1 and r.cam_id = mcm.id
		left join mkt.mkt_offer_mst     o on r.offer_id = o.id and o.flag = 1
		left join loy.LOY_OFFER_EXP_DIVID loed on o.id = loed.rid_mkt_offer_mst and loed.flag = 1
		left join loy.LOY_OFFER_PNT_DTL lopd on o.id = lopd.rid_mkt_offer_mst and lopd.flag = 1
		left join LOY.LOY_CHNL lc on lc.rid = loed.RID_DIVIDOR_CHNL and lc.flag = 1

		<!-- left join com.comm_code c9
			on c9.flag = 1 and c9.lang = #{lang} and c9.code_name = mcm.PNT_ACCNT_BIG_TYPE_CD and c9.group_code = 'PNT_TXN_TYPE'
		left join com.comm_code c10
			on c10.flag = 1 and c10.lang = #{lang} and c10.code_name = mcm.PNT_ACCNT_MID_TYPE_CD and c10.group_code = 'PNT_TXN_DTL_TYPE'
		left join com.comm_code c11
			on c11.flag = 1 and c11.lang = #{lang} and c11.code_name = mcm.PNT_ACCNT_SML_TYPE_CD and c11.group_code = 'DA_PNT_ACCNT_SML_TYPE'
		left join com.comm_code c12
			on c12.flag = 1 and c12.lang = #{lang} and c12.code_name = mcm.PNT_ACCNT_DETAIL_TYPE_CD and c12.group_code = 'DA_PNT_ACCNT_DETAIL_TYPE'
		left join com.comm_code c13
			on c13.flag = 1 and c13.lang = #{lang} and c13.code_name = lopd.VALID_STARTDT_BAS_CD and c13.group_code = 'LOY_VALID_STARTDT_BAS_CD' -->
		, (
			select 	/*+ INDEX(lmui rid_mbr_upload_IDX) */
					count(1) AS totalCount
			from 	loy.LOY_MBR_UPLOAD_ITEM lmui
			where 	lmui.rid_mbr_upload = #{ridMbrUpload}
				and flag = 1
		) t1
		where 	${strWhere}
		<if test="sidx == 'c1.mark_name' or sidx == 'mcm.cam_nm' or sidx == 'c13.mark_name' or sidx == 'lopd.VALID_START_DTNUM'
				or sidx == 'lopd.VALID_END_DTNUM' or sidx == 'lc.chnl_nm' or sidx == 'mcm.PNT_ACCNT_CODE_VAL'
				or sidx == 'c9.mark_name' or sidx == 'c10.mark_name' or sidx == 'c11.mark_name' or sidx == 'c12.mark_name'
				or sidx == 'lm.mbr_no' or sidx == 'lc.cust_nm' or sidx == 'c2.mark_name' or sidx == 'lm.mbr_stat_cd'">
			ORDER BY ${strOrderby}
			${strEndPaging}
		</if>
		<if test="sidx != null and sidx.startsWith('lmui')">
			ORDER BY ${strOrderby}
		</if>
	</select>


	<select id="selectMaxPointLabel" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrPointAuthReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrPointAuthResDto">
		/* LoyMbrMaper.selectMaxPointLabel */
		 SELECT max(CASE WHEN T6.ATTR_VAL = 'Y' THEN t5.ATTR_VAL ELSE 'N' END) as maxPoint
 	  	   FROM com.CRM_USER t1
     	   JOIN com.AUTH_USER_REL t2 ON t2.FLAG = 1 AND t2.RID_USER = t1.RID
      	   JOIN com.AUTH_GROUP t3 ON t3.FLAG = 1 AND t3.ID = t2.AUT_GROUP_ID
      	   JOIN loy.LOY_OPER_BASE t4 ON t4.FLAG = 1 AND t4.ATTR_VAL = t3.TYPE AND t4.CTG = 'SYSTEM' AND t4.TYPE_CD = 'CS_POINT_ACRL' AND t4.ATTR = 'AUTH_GROUP_TYPE'
LEFT OUTER JOIN loy.LOY_OPER_BASE_DTL t5 ON t5.FLAG = 1 AND t5.RID_OPER_BASE = t4.RID
  		   JOIN (SELECT ATTR_VAL FROM loy.LOY_OPER_BASE WHERE FLAG = 1 AND CTG = 'SYSTEM' AND TYPE_CD = 'CS_POINT_ACRL' AND ATTR = 'AMT_LIMIT_YN') T6 ON 1=1
          WHERE t1.RID = #{rid}
	</select>

	<select id="selectMbrGroupUser" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrGroupClubReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrGroupClubListResDto">
        /* LoyMbrMaper.selectMbrGroupUser */
        select lcm.rid as rid
        FROM LOY.LOY_CHNLbr lcm
        where rid_chnl =  #{ridChnl}
          and   rid_mbr = #{ridMbr}
  	</select>

  <insert id="insertMbrGroupUser" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrGroupClubReqDto">
  /* LoyMbrMapper.insertMbrGroupUser */
  INSERT INTO LOY.LOY_CHNLbr (
		  			  RID,
				      CREATE_BY,
				      MODIFY_BY,
				      CREATE_DATE,
				      MODIFY_DATE,
				      FLAG,
				      RID_MBR,
				      RID_CHNL,
				      REG_DT,
				      ACTIVE_FLG
	)
    VALUES ( 
			    	  #{rid},
			          #{createBy},
			          #{modifyBy},
			          GETDATE(),
			          GETDATE(),
			          1,
				      #{ridMbr},
				      #{ridChnl},
				      GETDATE(),
				      #{activeFlg}
	)
    <selectKey keyProperty="" resultType="java.lang.String">
       SELECT rid FROM LOY.LOY_CHNLbr WHERE RID_CHNL = #{ridChnl} limit 1
    </selectKey>
    </insert>

    <update id="dropMbrGroupUser" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrGroupClubReqDto">
    /* LoyMbrMapper.dropMbrGroupUser */
    UPDATE  LOY.LOY_CHNLbr
    SET  ACTIVE_FLG = 'Y'
           , DEL_DT = GETDATE()
    WHERE RID_CHNL =  #{ridChnl}
    AND RID_MBR = #{ridMbr}
    </update>

  <select id="selectMbrIntactPurList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrIntactPurReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrIntactPurResDto">
        /* LOYMbrMapper.selectMbrIntactPurList */
        select
               a.rid                   as    rid     /* RID */
              ,a.rid_chnl              as    ridChnl     /* RID_채널 */
              ,b.chnl_nm               as    chnlNm     /* 채널명 */
              ,a.rid_mbr               as    ridMbr     /* RID_회원 */
              ,a.rid_card_corp_chnl    as    ridCardCorpChnl     /* 카드 법인 채널 */
              ,a.rid_mbr_card          as    ridMbrCard     /* RID 카드 번호 */
              ,a.rid_intact_type       as    ridIntactType     /* RID_INTACT_TYPE */
              ,CONVERT(VARCHAR,a.occu_date,23)             as    occuDate           /* 발생 일자 */
              ,CONVERT(VARCHAR,a.calc_cmplt_date,23)       as    calcCmpltDate     /* 산출 완료 일자 */
              ,CONVERT(VARCHAR,a.acrl_cmplt_date,23)       as    acrlCmpltDate     /* 적립 완료 일자 */
              ,a.acrl_excpt_reas_cd    as    acrlExcptReasCd     /* 적립 예외 사유 코드 */
              ,com.TRUNC( a.amt  , 0 )    as    amt            /* 금액 */
              ,a.pay_methd_cd          as    payMethdCd     /* 결제 수단 코드 */
              ,a.delv_methd_cd         as    delvMethdCd     /* 배송 수단 코드 */
              ,CONVERT(VARCHAR,a.pay_cmplt_date,23)        as    payCmpltDate     /* 결제 완료 일자 */
              ,CONVERT(VARCHAR,a.delv_cmplt_date,23)       as    delvCmpltDate     /* 배송 완료 일자 */
              ,a.pur_stat_cd           as    purStatCd     /* 구매 상태 코드 */
              ,CONVERT(VARCHAR,a.canc_date,23)             as    cancDate     /* 취소 일자 */
              ,a.pos_no                as    posNo     /* 단말기 번호 */
              ,a.rcpt_no               as    rcptNo     /* 영수증 번호 */
              ,a.orgn_rcpt_no          as    orgnRcptNo     /* 원 영수증 번호 */
              <!-- , ${strColumn} -->
        from loy.loy_intact_pur a
        left outer join LOY.LOY_CHNL b on a.rid_chnl = b.rid
        /* 산출로직 호출후 적립예외 function(ex: 블랙리스트 등) 호출하여 결과 넣어줌. */
        where ${strSVCType}
          <!-- and ${strWhere} -->
          and a.rid_mbr = #{ridMbr}
          <!-- and a.flag = 1 -->
        order by ${strOrderby}
        ${strEndPaging}
    </select>

    <select id="selectMbrCampHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrCampHistReqDto"
    								   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCampHistResDto">
        /* LOYMbrMapper.selectMbrCampHistList */
        select
               applyDate        /** 적용일자 */
              ,camNo            /**캠페인번호 */
              ,camNm            /**캠페인명*/
              ,camTypeCd        /**캠페인유형코드*/
              ,offerNm          /**오퍼명*/
              ,promType         /**프로모션유형코드*/
              ,promSubType      /**프로모션서브유형*/
              ,camStartDd       /**시작일*/
              ,camEndDd         /**종료일*/
              ,camStatusCd      /**캠페인상태코드*/
              ,createDate      /*생성일*/
        from (
              /* 거래내역내에서 캠페인 이력 조회*/
              select
                     CONVERT(VARCHAR,b.acrl_date,23)     as applyDate
                    ,c.disp_no                               as camNo
                    ,c.cam_nm                                as camNm
                    ,c.cam_type_cd                           as camTypeCd
                    ,e.offer_nm                              as offerNm
                    ,c.prom_type                             as promType
                    ,c.prom_sub_type                         as promSubType
                    ,CONVERT(VARCHAR,c.cam_start_dd,23)  as camStartDd
                    ,CONVERT(VARCHAR,c.cam_end_dd,23)    as camEndDd
                    ,c.cam_status_cd                         as camStatusCd
                    ,a.create_date                           as createDate
                     <!-- , ${strColumn} -->
               from loy.loy_pnt_txn a
              inner join loy.loy_pnt_acrl b on  a.rid = b.rid_pnt_txn and b.flag = 1
              inner join mkt.mkt_cam_mst c on b.cam_no = c.disp_no
              inner join mkt.mkt_cam_offer_rel d on c.id = d.cam_id
              inner join mkt.mkt_offer_mst e on d.offer_id = e.id
              where 1=1
                and a.flag = 1
                and a.rid_mbr = #{ridMbr} /* 'recMbr00001' */
                and a.txn_stat_cd  = 'A'

              union all

             /* 캠페인 타겟팅에서 캠페인이력 조회 */
             select CONVERT(VARCHAR,a.create_date,23)    as applyDate
                   ,c.disp_no                                as camNo
                   ,c.cam_nm                                 as camNm
                   ,c.cam_type_cd                            as camTypeCd
                   ,e.offer_nm                               as offerNm
                   ,c.prom_type                              as promType
                   ,c.prom_sub_type                          as promSubType
                   ,CONVERT(VARCHAR,c.cam_start_dd,23)   	 as camStartDd
                   ,CONVERT(VARCHAR,c.cam_end_dd,23)     	 as camEndDd
                   ,c.cam_status_cd                          as camStatusCd
                   ,a.create_date                            as createDate
               from mkt.mkt_tgt_dtl a
             inner join mkt.mkt_cam_mst c on a.cam_id = c.id and c.cam_status_cd = 'E'
             left outer join mkt.mkt_cam_offer_rel d on c.id = d.cam_id
             left outer join mkt.mkt_offer_mst e on d.offer_id = e.id
             where 1=1
               and a.mem_id =  #{ridMbr}   /* 'recMbr00001' */
        ) t
        where ${strWhere}
        ORDER BY ${strOrderby}
        ${strEndPaging}
    </select>


	<parameterMap id="callProcMbrTierUpdMap" type="map">
		<parameter property="ridMbr" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rid" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="desc" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="rst" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstCd" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="rstMsg" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
 	</parameterMap>
	<update id="callProcMbrTierUpd" parameterMap="callProcMbrTierUpdMap" statementType="CALLABLE">
	/* LOYEventPlan.callProcMbrTierUpd */
	{
		CALL  LOY.PKG_LOY_TIER.PROC_MBR_TIER_UPD(?, ?, ?, ?, ?, ?)
	}
	</update>

	<select id="selectMbrListNewPage" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" 
	                                  resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto">
		/* LoyMbrMapper.selectMbrListNewPage */
		SELECT lc.CUST_NO							AS custNo
				, lmm.MBR_NO							AS mbrNo
				, lc.CUST_NM							AS custNm
                , lc.EMAIL							    AS maskEmail
				, lmm.MBR_TYPE_CD                       AS mbrTypeCd
				, lc.CUST_TYPE_CD                       AS custTypeCd
				, lc.HHP								AS hhp
				, lc.GEN_CD								AS genCd
-- 				, CASE WHEN
-- 					lcli.REP_YN = 'Y' THEN lcli.USER_ID
-- 				  	ELSE NULL
-- 				  END									AS userId
		        , lmm.USR_ID                            AS userId
				, lmm.MBR_STAT_CD						AS mbrstatCd
                , convert(varchar,lmm.SBSC_DATE,23)	    AS sbscDate
                , lcc.CHNL_NM							AS sbscChnlNm
                , convert(varchar,lmm.CREATE_DATE,120)	AS createDate
				, lmm.RID_PGM							AS pgmRid
				, lmm.RID								AS rid
				, lmm.SBSC_TYPE_CD             			AS sbscTypeCd
				--, lcli.REP_YN 						AS repYn
                , convert(varchar,lc.BIRTH_DATE, 23) 	AS birthDate
                , a.tierDST AS tierDST
                , a.tierUMB AS tierUMB
                , a.tierLCS AS tierLCS
                , a.tierDSG AS tierDSG
                , a.tierLCG AS tierLCG
                , a.tierMSW AS tierMSW
		FROM LOY.LOY_MBR lmm with(nolock)
	    JOIN LOY.LOY_CUST lc with(nolock) ON lmm.RID_CUST = lc.RID AND lc.FLAG = 1
        LEFT JOIN LOY.LOY_CHNL lcc with(nolock) ON lmm.RID_SBSC_CHNL = lcc.RID AND lc.FLAG = 1
-- 		JOIN LOY.LOY_CUST_I lci with(nolock) ON lci.RID_CUST = lc.RID AND lci.FLAG = 1
-- 	    JOIN LOY.LOY_PGM lp with(nolock) ON lmm.RID_PGM = lp.RID AND lp.FLAG = 1
        LEFT OUTER JOIN (select ltmh.rid_mbr,
                             MAX(CASE  WHEN lbc.BRD_ID = 'S' THEN  lt.TIER_TYPE_CD
                                       ELSE NULL END) AS tierDST
                              , MAX(CASE  WHEN lbc.BRD_ID = 'U' THEN lt.TIER_TYPE_CD
                                          ELSE NULL END) AS tierUMB
                              , MAX(CASE  WHEN lbc.BRD_ID = 'Q' THEN lt.TIER_TYPE_CD
                                          ELSE NULL END) AS tierLCS
                              , MAX(CASE  WHEN lbc.BRD_ID = 'D' THEN lt.TIER_TYPE_CD
                                          ELSE NULL END) AS tierDSG
                              , MAX(CASE  WHEN lbc.BRD_ID = 'G' THEN lt.TIER_TYPE_CD
                                          ELSE NULL END) AS tierLCG
                              , MAX(CASE  WHEN lbc.BRD_ID = 'M' THEN lt.TIER_TYPE_CD
                                          ELSE NULL END) AS tierMSW
                         from  LOY.LOY_TIERS_MBR_HIST ltmh with(nolock)
                         inner JOIN LOY.LOY_TIERS_GRP ltg with(nolock) ON ltg.RID = ltmh.RID_TG AND ltg.FLAG =1
                         inner JOIN LOY.LOY_TIERS lt with(nolock) ON lt.RID_TG = ltg.RID AND lt.FLAG =1 and ltmh.rid_tier = lt.rid
                         inner join loy.loy_brd_category lbc with(nolock) on lbc.rid = ltg.X_BRD_RID and lbc.flag = 1
                         where ltmh.FLAG = 1
                           and ltmh.VALID_HIST_YN = 'Y'
                         GROUP BY ltmh.rid_mbr  ) a ON lmm.rid = a.rid_mbr
	    --LEFT JOIN loy.LOY_CUST_LOGIN_INF lcli with(nolock) ON lcli.RID_CUST = lc.RID AND lcli.FLAG = 1  AND lcli.REP_YN ='Y'
		WHERE lmm.FLAG = 1
        AND lmm.MBR_STAT_CD IN('A','S')
		AND ${strWhere}
        <if test='empType == "S" '>
        AND lcc.RID = (SELECT RID FROM LOY.LOY_CHNL WHERE CHNL_NO  = (SELECT EMP_NO FROM COM.EMPLOYEE WHERE ID = #{empId}))
        </if>
        AND ${strCondWhere}
		ORDER BY ${strOrderby}
		    ${strEndPaging}
	</select>

    <select id="selectMbrListNewPageCnt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto">
        /* LoyMbrMapper.selectMbrListNewPageCnt */
        SELECT COUNT(*) totalCount
        FROM LOY.LOY_MBR lmm with(nolock)
        JOIN LOY.LOY_CUST lc with(nolock) ON lmm.RID_CUST = lc.RID AND lc.FLAG = 1
        LEFT JOIN LOY.LOY_CHNL lcc with(nolock) ON lmm.RID_SBSC_CHNL = lcc.RID AND lc.FLAG = 1
        --                  JOIN LOY.LOY_CUST_I lci with(nolock) ON lci.RID_CUST = lc.RID AND lci.FLAG = 1
        --                  JOIN LOY.LOY_PGM lp with(nolock) ON lmm.RID_PGM = lp.RID AND lp.FLAG = 1
        LEFT OUTER JOIN (SELECT ltmh.rid_mbr
                           ,  MAX(CASE  WHEN lbc.BRD_ID = 'S' THEN  lt.TIER_TYPE_CD
                                       ELSE NULL END) AS tierDST
                           , MAX(CASE  WHEN lbc.BRD_ID = 'U' THEN lt.TIER_TYPE_CD
                                       ELSE NULL END) AS tierUMB
                           , MAX(CASE  WHEN lbc.BRD_ID = 'Q' THEN lt.TIER_TYPE_CD
                                       ELSE NULL END) AS tierLCS
                           , MAX(CASE  WHEN lbc.BRD_ID = 'D' THEN lt.TIER_TYPE_CD
                                       ELSE NULL END) AS tierDSG
                           , MAX(CASE  WHEN lbc.BRD_ID = 'G' THEN lt.TIER_TYPE_CD
                                       ELSE NULL END) AS tierLCG
                           , MAX(CASE  WHEN lbc.BRD_ID = 'M' THEN lt.TIER_TYPE_CD
                                       ELSE NULL END) AS tierMSW
                      FROM  LOY.LOY_TIERS_MBR_HIST ltmh with(nolock)
                      INNER JOIN LOY.LOY_TIERS_GRP ltg with(nolock) ON ltg.RID = ltmh.RID_TG AND ltg.FLAG =1
                      INNER JOIN LOY.LOY_TIERS lt with(nolock) ON lt.RID_TG = ltg.RID AND lt.FLAG =1 and ltmh.rid_tier = lt.rid
                      INNER join loy.loy_brd_category lbc with(nolock) on lbc.rid = ltg.X_BRD_RID and lbc.flag = 1
                      WHERE 1=1
                        AND ltmh.FLAG = 1
                        AND ltmh.VALID_HIST_YN = 'Y'
                      GROUP BY ltmh.rid_mbr  ) a ON lmm.rid = a.rid_mbr
        --LEFT JOIN loy.LOY_CUST_LOGIN_INF lcli with(nolock) ON lcli.RID_CUST = lc.RID AND lcli.FLAG = 1  AND lcli.REP_YN ='Y'
        WHERE 1=1
        <if test='empType == "S" '>
        AND lcc.RID = (SELECT RID FROM LOY.LOY_CHNL WHERE CHNL_NO  = (SELECT EMP_NO FROM COM.EMPLOYEE WHERE ID = #{empId}))
        </if>
        AND   ${strWhere}
        AND   lmm.FLAG = 1
        AND   lmm.MBR_STAT_CD IN('A','S')
        AND   ${strCondWhere}
    </select>

	<select id="clearMaskListMbr" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto">
		/* LoyMbrMapper.clearMaskListMbr */
		SELECT    lcm.CUST_NM					AS unMaskCustNm
				, lcm.HHP						             AS unMaskHhp
				, lcli.USER_ID                            AS unMaskEmail
				, lcm.email							  AS unMaskEmailAddr
		FROM	LOY.LOY_MBR lmm with(nolock)
		JOIN	LOY.LOY_CUST lcm with(nolock) ON lmm.RID_CUST = lcm.RID AND lcm.FLAG = 1
		<!-- JOIN    LOY.LOY_CUST_I lci ON lcm.RID = lci.RID_CUST AND lci.FLAG = 1  -->
	    LEFT OUTER JOIN loy.LOY_CUST_LOGIN_INF lcli with(nolock) ON lcli.RID_CUST = lcm.RID AND lcli.FLAG = 1 AND lcli.REP_YN = 'Y'
		LEFT OUTER JOIN LOY.LOY_PGM lp with(nolock) ON lmm.RID_PGM = lp.RID AND lp.FLAG = 1
		LEFT OUTER JOIN LOY.LOY_CHNL lc with(nolock) ON lmm.RID_SBSC_CHNL = lc.RID AND lc.FLAG = 1
		WHERE lmm.FLAG = 1
		AND   lmm.MBR_STAT_CD = 'A'
		AND   lmm.rid = #{rid}
	</select>

	<select id="selectMbrPointHistList" parameterType="com.icignal.loyalty.benefit.point.dto.request.LoyMbrPtnTxnHistReqDto" resultType="com.icignal.loyalty.benefit.point.dto.response.LoyMbrPtnTxnHistListResDto">
	/* LoyMbrMapper.selectMbrPointHistList" */
	SELECT   <!--  lpt.TXN_NUM			AS txnNum -->
			  lpt.rcpt_no                              							AS rceptNo -- 주문 영수증번호
			, lpt.TXN_STAT_CD		AS txnStatCd
			, LOY.PKG_LOY_FN_FN_GET_PNT_TXN_DESC(lpt.rid, '') 	AS txnDesc --거래명    
			, COM.TO_CHAR(lpt.TXN_DT,'YYYY-MM-DD HH24:MI') AS txnDt  --거래일자
			, lpt.PNT_TXN_TYPE_1_CD	AS pntTxnType1Cd  --유형
			, lpt.PNT_TXN_TYPE_2_CD	AS pntTxnType2Cd  --상세유형
			, lpt.TXN_UNIQ_NO						AS txnUniqNo --거래 고유번호
			, lpt.APPR_NO									AS apprNo  --승인번호
			, CASE WHEN lpt.PNT_TXN_TYPE_1_CD = '200' OR lpt.SALES_AMT = 0 THEN NULL ELSE ISNULL(lpt.SALES_AMT,NULL) END    AS salesAmt  --판매가
			, lc.CHNL_NM			AS chnlNm --채널
	        , CASE WHEN lpt.PNT_TXN_TYPE_1_CD = '200' AND lpt.PNT_TXN_TYPE_2_CD = '210' THEN '-' + ISNULL(CONVERT(VARCHAR,com.TRUNC(lpt.TXN_AMT,0),'FM999,999,999,999'),NULL)
	        	   WHEN lpt.PNT_TXN_TYPE_1_CD = '200' OR lpt.TXN_AMT = 0 THEN NULL 
	        	   WHEN lpt.PNT_TXN_TYPE_1_CD = '100' AND lpt.PNT_TXN_TYPE_2_CD = '130' THEN NULL
	         ELSE ISNULL(CONVERT(VARCHAR,com.TRUNC(lpt.TXN_AMT,0),'FM999,999,999,999'),NULL) END   AS txnAmt
			<!-- , case when lpt.pnt_txn_type_1_cd = '200' then '-' + com.TRUNC(lpt.PNT_AMT,0) else CONVERT(VARCHAR,com.TRUNC(lpt.PNT_AMT,0)) end AS pntAmt -->
			, case when lpt.pnt_txn_type_1_cd = '200' then '-' + CONVERT(NVARCHAR, com.TRUNC(lpt.PNT_AMT,0)) else com.TRUNC(lpt.PNT_AMT,0) end AS pntAmt
			, lpt.USABLE_PNT	AS usablePnt
			, COM.TO_CHAR(lpt.APPR_DT,'YYYY-MM-DD HH24:MI')			AS apprDate
			, lpt.RID				AS rid
            , (SELECT MBR_NO FROM LOY.LOY_MBR  WHERE rid =lpt.RID_MBR_INT AND flag=1)          AS ridMbrInt
            , lpt.TXN_TYPE_DTL_DESC	AS txnDtlDesc
			, ${strColumn}
	FROM LOY.LOY_PNT_TXN lpt
	JOIN LOY.LOY_MBR lm ON lpt.RID_MBR =lm.RID AND lm.FLAg = 1
	LEFT OUTER JOIN LOY.LOY_CHNL lc ON lc.RID = lpt.RID_CHNL AND lc.FLAG = 1
	WHERE ${strCondWhere}
	AND   lpt.FLAG = 1
	AND   lpt.rid_mbr = #{rid}
	AND   ${strWhere}
	<if test="(startDt != null and startDt != '') and (endDt != null and endDt != '')">
		AND lpt.TXN_DT BETWEEN com.TO_DATE(#{startDt},'YYYY-MM-DD') AND com.TO_DATE(#{endDt},'YYYY-MM-DD')+1
	</if>
	<if test="txnUniqNo != null and txnUniqNo != ''">
		AND lpt.TXN_UNIQ_NO = #{txnUniqNo}
	</if>
	<if test="apprNo != null and apprNo != ''">
		AND lpt.APPR_NO = #{apprNo}
	</if>
	<if test="chnlNm != null and chnlNm != ''">
		AND lc.CHNL_NM LIKE N'%' + #{chnlNm} + '%'
	</if>
	<if test="pntTxnType != null and pntTxnType != ''">
		AND  lpt.PNT_TXN_TYPE_1_CD LIKE '%' + #{pntTxnType} + '%'
	</if>
	<if test="rceptNo != null and rceptNo != ''">
		AND lpt.rcpt_no = #{rceptNo}
	</if>	
	ORDER BY ${strOrderby}
	${strEndPaging}

	</select>

    <select id="selectMbrDetailNewPage" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
    						            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDetailNewPageResDto">
	/* LoyMbrMapper.selectMbrDetailNewPage */
	SELECT    TOP 1
				lm.RID							AS rid
				, lm.MBR_NO							AS mbrNo
				, lm.RID_PGM						AS pgmRid
				, lp.PGM_NO							AS pgmNo
				, lp.PGM_NM							AS pgmNm
				, lm.MBR_STAT_CD				AS mbrStatCd
				, lm.MBR_TYPE_CD				AS mbrTypeCd
				, lm.SBSC_TYPE_CD                AS sbscTypeCd
				, lc.CUST_TYPE_CD				AS custTypeCd
				, lc.CUST_STAT_CD               AS custStatCd
				, lm.SBSC_DATE					AS sbscDate
				, CONVERT(VARCHAR,lm.SBSC_DATE, 120) AS sbscDates
				, lc2.CHNL_NM						AS sbscChnlNm  /*가입채널*/
				, lc2.CHNL_NO						AS chnlNo
				, lm.SBSC_PATH_CD				AS sbscPathCd
				, lm.SBSC_DEVICE_CD 			AS sbscDeviceCd
				, lc.CERT_TYPE_CD 				AS custCertTypeCd
				, CONVERT(VARCHAR,lc.CERT_DATE, 23)		AS certDate
				, lc.RID									AS custRid
				, lc.CUST_NM						AS cust_nm
				, lc.HHP									AS hhp
				, lc.EMAIL								AS email
				, CONVERT(VARCHAR,lc.BIRTH_DATE,112)							AS birthdt
				, lc.LUNAR_CD						AS lunar_cd
				, lc.GEN_CD							AS gen_cdNm
				, lc.ZIP									AS zip
				, lc.ADRES								AS adres
				, lc.BUNJI								AS bunji
				, lc.B_CODE 							AS bCode
				, lci.CUST_NM_ADD				AS cust_nm_add
				, lci.ZIP_ADD	 						AS zip_add
	    		, lci.ADRES_ADD 					AS adres_add
	    		, lci.BUNJI_ADD 					AS bunji_add
	    		, lci.B_CODE_ADD					AS bCodeAdd
	    		, lci.NLTY 								AS nltyCd
	    		, lci.NATIVE_YN 						AS native_yn
	    		, lc.DRMNCY_CHNG_UNIT		AS drmmcyChngUnitCd
                , DATEADD(YEAR,CONVERT(INT,lc.DRMNCY_CHNG_UNIT),
                (CASE  WHEN DATEDIFF(DAY, CONVERT(DATE,IsNULL(lcsh1.SVC_DT, '19000101')), CONVERT(DATE,IsNULL(lcsh2.SVC_DT, '19000101'))) <![CDATA[<]]> 0
                THEN CONVERT(DATE,(lcsh1.SVC_DT))
                ELSE CONVERT(DATE,(lcsh2.SVC_DT)) END)) AS drmmcyExpDate                      /* 휴면예정일 */
	    		, lci.ANNVRSRY 						AS annvrsry
	    		, ISNULL(lci.ANNVRSRY_TYPE_CD,'00') 		AS annvrsryTypeCd
	    		, lci.MRRG_YN 						AS mrrgYn
	    		, lci.WRC_NM 						AS wrcNm
	    		, lci.PSTN 								AS pstnCd
				, lm.TIER_DT 						AS validTierStartDt
				, lm.TIER_LIFTTIME_DT AS validTierLiftTimeStartDt
				, lc3.CHNL_NM						AS lastConChnlNm 																/* 최근접속채널 */
				, CONVERT(VARCHAR,com.TO_DATE(lcsh1.SVC_DT,'YY/MM/DD'),23)				AS conSvrDt 		/* 최근접속일 */
				, lc4.CHNL_NM 						AS lastPurChnlNm																	/* 최근구매채널 */
				, CONVERT(VARCHAR,com.TO_DATE(lcsh2.SVC_DT,'YY/MM/DD'),23)				AS purSvrDt 		/* 최근구매일 */
				, lm.PNT_PWD     					as pntPwd
				, lci.TEL_NO						as telNo
				, lci.DEPT_NM						AS deptNm
				, lci.EMP_NO						AS empNo
				, lci.SNS_TYPE_CD               AS snsTypeCd
				, lci.SNS_ADDR                   AS snsAddr
				, lci.CHILD_YN                   AS childYn
				, lm.MCARD_NO                  AS mcardNo
                , lm.PNT_ACRL_YN                 AS pntAcrlYn
                , lm.PNT_RDM_YN 				AS pntRdmYn
                , cast(DATEPART(mm,lms.SECSN_DATE) as nvarchar) + N'월' + cast(DATEPART(dd,lms.SECSN_DATE) as nvarchar)	 + N'일'	 AS reSbscResn
                , lcd.CUST_NM					AS maskCustNm
                , lcd.HHP						AS maskHhp
                , a.tierDST AS tierDST
                , a.tierUMB AS tierUMB
                , a.tierLCS AS tierLCS
                , a.tierDSG AS tierDSG
                , a.tierLCG AS tierLCG
                , a.tierMSW AS tierMSW
	            , ISNULL(lm.X_USE_AVL_PNT, 0) as avlPoint
        FROM LOY.LOY_MBR lm
	JOIN LOY.LOY_CUST lc ON lc.RID = lm.RID_CUST AND lc.FLAG = 1
    LEFT OUTER JOIN loy.LOY_CUST_SVC_HIST lcsh ON lcsh.RID_CUST = lc.RID AND lc.FLAG = 1
    JOIN LOY.VW_CUST_DI lcd ON lc.RID = lcd.RID_CUST
	LEFT OUTER JOIN LOY.LOY_CUST_I lci ON lci.RID_CUST = lc.RID AND lci.FLAG = 1
    LEFT OUTER JOIN (select ltmh.rid_mbr,
                            MAX(CASE  WHEN lbc.BRD_ID = 'S' THEN  lt.TIER_TYPE_CD
                            ELSE NULL END) AS tierDST
                            , MAX(CASE  WHEN lbc.BRD_ID = 'U' THEN lt.TIER_TYPE_CD
                            ELSE NULL END) AS tierUMB
                            , MAX(CASE  WHEN lbc.BRD_ID = 'Q' THEN lt.TIER_TYPE_CD
                            ELSE NULL END) AS tierLCS
                            , MAX(CASE  WHEN lbc.BRD_ID = 'D' THEN lt.TIER_TYPE_CD
                            ELSE NULL END) AS tierDSG
                            , MAX(CASE  WHEN lbc.BRD_ID = 'G' THEN lt.TIER_TYPE_CD
                            ELSE NULL END) AS tierLCG
                            , MAX(CASE  WHEN lbc.BRD_ID = 'M' THEN lt.TIER_TYPE_CD
                            ELSE NULL END) AS tierMSW
        FROM  LOY.LOY_TIERS_MBR_HIST ltmh
        INNER JOIN LOY.LOY_TIERS_GRP ltg ON ltg.RID = ltmh.RID_TG AND ltg.FLAG =1
        INNER JOIN LOY.LOY_TIERS lt ON lt.RID_TG = ltg.RID AND lt.FLAG =1 and ltmh.rid_tier = lt.rid
        INNER join loy.loy_brd_category lbc on lbc.rid = ltg.X_BRD_RID and lbc.flag = 1
        WHERE ltmh.FLAG = 1 AND ltmh.VALID_HIST_YN = 'Y' GROUP BY ltmh.rid_mbr  ) a ON lm.rid = a.rid_mbr
	LEFT OUTER JOIN LOY.LOY_CUST_SVC_HIST lcsh1 ON lc.RID = lcsh1.RID_CUST AND lcsh1.FLAG = 1 AND lcsh1.SVC_USE_CD	='WEB'
	LEFT OUTER JOIN LOY.LOY_CUST_SVC_HIST lcsh2 ON lc.RID = lcsh2.RID_CUST AND lcsh2.FLAG = 1 AND lcsh2.SVC_USE_CD	='PUR'
	JOIN LOY.LOY_PGM lp ON lp.RID = lm.RID_PGM AND lp.FLAg = 1
	LEFT OUTER JOIN LOY.LOY_CHNL lc2 ON lc2.RID = lm.RID_SBSC_CHNL AND lc2.FLAG = 1
	LEFT OUTER JOIN LOY.LOY_CHNL lc3 ON lc3.RID = lcsh1.RID_CHNL AND lc3.FLAG = 1
	LEFT OUTER JOIN LOY.LOY_CHNL lc4 ON lc4.RID = lcsh2.RID_CHNL AND lc4.FLAG = 1
	LEFT OUTER JOIN  loy.LOY_MBR_SECSN lms ON lms.RID_MBR = lm.RID and lms.FLAG = 1
	WHERE lm.FLAG = 1
	<if test="rid != null and rid != ''"> AND
		  lm.rid = #{rid}
	</if>
	<if test="mbrNo != null and mbrNo != ''"> AND
		  lm.MBR_NO = #{mbrNo}
	</if>
	</select>
	
	<select id="selectMbrDetailRepId" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
    						            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDetailNewPageResDto">
	/* LoyMbrMaper.selectMbrDetailRepId */
	SELECT TOP 1
		lcli.USER_ID			 AS user_id
	FROM  LOY.LOY_MBR lm
	JOIN LOY.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
  	LEFT JOIN loy.LOY_CUST_LOGIN_INF lcli ON lcli.RID_CUST = lc.RID AND lcli.FLAG = 1 
  	WHERE lm.FLAG = 1
	<if test="rid != null and rid != ''"> AND
      lm.rid = #{rid}
  	</if>
  	<if test="mbrNo != null and mbrNo != ''"> AND
      lm.MBR_NO = #{mbrNo}
  	</if>
  	 AND lcli.REP_YN ='Y'
	</select>

	<select id="selectChnlRelHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrChnlRelListResDto">
	/* LoyMbrMapper.selectChnlRelHistList */
	SELECT   lc.CHNL_NM				AS chnlNm
		   , lcm.CHNL_REL_TYPE_CD	AS chnlRelTypeCd
		   , lcm.CREATE_DATE		AS createDate
		   , ${strColumn}
	FROM    LOY.LOY_CHNL_MBR lcm
	JOIN    LOY.LOY_CHNL lc ON lcm.RID_CHNL = lc.RID AND lc.FLAG = 1
	WHERE ${strCondWhere}
	AND   lcm.FLAG = 1
	AND   lcm.RID_MBR  = #{rid}
	AND   ${strWhere}
	ORDER BY ${strOrderby}
	${strEndPaging}
	</select>

	<select id="selectCouponList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCouponListResDto">
	/* LoyMbrMapper.selectCouponList */
	SELECT t1.disp_no        AS dispNo
        , t1.CAM_NM       AS camNm
        , t3.COUPN_NM       AS coupnNm
        , t3.COUPN_USE_GDNC1  AS coupnUseGdnc1
        , t3.USE_START_DT     AS useStartDt
        , t3.USE_END_DT     AS useEndDt
        , t4.coupn_no       AS coupnNo
        , t4.USE_YN       AS useYn
        , t4.USE_DT       AS useDt
        , ${strColumn}
    FROM mkt.mkt_cam_mst t1
    JOIN loy.loy_coupn t3 ON t3.flag = 1 AND t3.rid_mkt_cam_mst = t1.id
    JOIN loy.loy_coupn_i t4 ON t4.flag = 1 AND t4.rid_coupn = t3.rid
    JOIN loy.loy_mbr lm ON lm.flag = 1 AND lm.rid = t4.rid_mbr
    WHERE ${strSVCType}
    AND ${strWhere}
    AND lm.MBR_NO  = #{mbrNo}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>

	<select id="selectAlterHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
			resultType="com.icignal.loyalty.membership.dto.response.LoyMbrAlterHistListResDto">
		/* LoyMbrMapper.selectAlterHistList */
		SELECT    lcah.RID 											   AS rid
				, CONVERT(VARCHAR,lcah.SEND_END_DATE, 120) AS sendDate
		        , lcah.ALT_TYPE_CD                                     AS altTypeCd
		        , lcah.ALT_CHNL_TYPE_CD                                AS sendChnlType
		        , mcm.CONTS_TITLE                                      AS title
                , CASE WHEN lcah.RECV_DATE IS NOT NULL
                           THEN 'Y'
                       ELSE   NULL
                  END                                                  AS userRecvCheck
		        , CASE WHEN lcah.RECV_DATE IS NOT NULL
							THEN CONVERT(VARCHAR,lcah.RECV_DATE, 120)
					   ELSE 	NULL
				  END	  											   AS userRecvDate
		        , ${strColumn}
		FROM LOY.LOY_CUST_ALT_HIST lcah
		LEFT OUTER JOIN com.MKT_CONTS_MST mcm ON lcah.RID_CONTS = mcm.ID AND mcm.FLAG = 1
		WHERE   1 = 1
		    AND lcah.FLAG = 1
		    AND lcah.RID_MBR = #{ridMbr}
		    AND ${strCondWhere}
		    AND ${strWhere}
        ORDER BY ${strOrderby}
        ${strEndPaging}
	</select>
	<!-- 
	/* LoyMbrMapper.selectCouponList */
	       SELECT        
            lca.RID AS rid
            , CONVERT(VARCHAR,lca.SEND_END_DATE ,120) AS sendDate
            , lca.ALT_TYPE_CD                                     AS altTypeCd
            , lca.ALT_CHNL_TYPE_CD                                AS sendChnlType
            , mcm.CONTS_TITLE                                     AS title  
            , CASE WHEN lca.RECV_DATE IS NOT NULL 
              THEN 'Y'
              ELSE 'N'
              END userRecvCheck
            , ${strColumn}
        FROM LOY.LOY_CUST_ALT lca
        JOIN com.MKT_CONTS_MST mcm ON lca.RID_CONTS = mcm.ID AND lca.FLAG =1
        WHERE 1=1
	        AND lca.FLAG =1
	        AND lca.SEND_END_DATE IS NOT NULL
	        AND lca.RID_MBR = #{rid}
	        AND ${strWhere}
        ORDER BY ${strOrderby}
            ${strEndPaging}
	 -->
	 
	 <!-- /**************************************
      -   관련 파일             : LoyMbrService.java
      ============================================
      -   제목                  : selectAllAboutAlterHistConts
      -   설명                  : 회원의 알림이력 탭에서 각 알림이력에 대한 '내용(컨텐츠)'에 관련된 것을 모두 조회하는 쿼리
      -   결과형태              : LoyMbrAlterHistContsResDto
      ============================================
      -   입력					: LoyMbrReqDto
      ============================================
      -   작성자                : jb.kim
      -   작성일                : 2021.02.03
      ***************************************/ -->
	 <select id="selectAllAboutAlterHistConts" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
			 resultType="com.icignal.loyalty.membership.dto.response.LoyMbrAlterHistContsResDto">
		/* LoyMbrMapper.selectAllAboutAlterHistConts */	
			select    mc.ID														AS  id
					, mc.TYPE													AS  contsType
					, mc.CONTS_NO          										AS  contsNo
					, mc.CONTS_TYPE_CD											AS  contsTypeCd
					, mc.CONTS_NM       										AS  contsNm
					, mc.EXE_CHNL_TYPE_CD                                       AS  exeChnlTypeCd
					, mc.CONTS_DIV_CD                                           AS  contsDivCd
					, mc.CONTS_PRPS_CD                                          AS  contsPrpsCd
					, mc.CONTS_SBST                                             AS  contsSbst
					, mc.CONTS_BOTTOM                                           AS  contsBottom
					, mc.CONTS_HTML_C                                           AS  contsHtmlC
					, mc.CONTS_DESC                                             AS  contsDesc
					, mc.CONTS_VOL                                              AS  contsVol
					, mc.IMG_SIZE                                               AS  imgSize
					, mc.SUB_IMG_SIZE                                           AS  subImgSize
					, mc.IMG_APLY_CNT                                           AS  imgAplyCnt
					, mc.IMG_ID                                                 AS  imgId
					, mc.SUB_IMG_ID                                             AS  subImgId
					, mc.BCODE_IMG_ID                                           AS  bcodeImgId
					, mc.MERGE_IMG_ID                                           AS  mergeImgId
					, mc.IMG_LINK_URL                                           AS  imgLinkUrl
					, mc.EXTRL_IMG_URL                                          AS  extrlImgUrl
					, mc.CONTS_EMAIL_TYPE_CD                                    AS  contsEmailTypeCd
					, mc.CONTS_PUSH_TYPE_CD                                     AS  contsPushTypeCd
					, mc.CONTS_PUSH_SUB_TYPE_CD                                 AS  contsPushSubTypeCd
					, mc.CONTS_PUSH_SUB_TYPE_VAL                                AS  contsPushSubTypeVal
					, mc.CONTS_PUSH_APP_TYPE_CD                                 AS  contsPushAppTypeCd
					, mc.CONTS_PUSH_SEND_TYPE_CD                                AS  contsPushSendTypeCd
					, mc.CONTS_PUSH_PARAM                                       AS  contsPushParam
					, mc.DEVICE_TYPE_CD                                         AS  deviceTypeCd
					, mc.SNS_INFO                                               AS  snsInfo
					, mc.POST_ID                                                AS  postId
					, mc.RESERVE_POST											AS  reservePost
					, mc.OPEN_RANGE												AS  openRange
					, mc.ATT_TYPE												AS  attType
					, mc.DP_START_DT            								AS  dpStartDt
			        , mc.DP_END_DT              								AS  dpEndDt
					, mc.CONTS_SEQ              								AS  contsSeq
			        , mc.CONTS_LOAD_SEQ        									AS  contsLoadSeq
					, mc.CONTS_ATTEN_MTR       									AS  contsAttenMtr
			        , mc.INQR_NO                								AS  inqrNo
			        , mc.NEW_DP_CLO_DT											AS  newDpCloDt
					, mc.HPAGE             										AS  hpage
			        , mc.EV_NO                									AS  evNo
					, mc.APCT_POSBL_NUM      									AS  apctPosblNum
					, mc.PSTNG_TYPE_CD        									AS  pstngTypeCd
					, mc.CONTS_TITLE      										AS  contsTitle
			        , mc.CONTS_SUB_TITLE  										AS  contsSubTitle
					, mc.modify_date						               		AS  modifyDate
			        , mc.ATTRIB01              									AS  attrib01
			        , mc.ATTRIB02              									AS  attrib02
			        , mc.ATTRIB03               								AS  attrib03
			        , mc.ATTRIB04               								AS  attrib04
			        , mc.ATTRIB05               								AS  attrib05
			        , mc.ATTRIB06               								AS  attrib06
			        , mc.ATTRIB07               								AS  attrib07
			        , mc.ATTRIB08              									AS  attrib08
			        , mc.ATTRIB09             									AS  attrib09
			        , mc.ATTRIB10              									AS  attrib10
	       			, mc.CONTS_HTML            									AS  contsHtml
					, mc.CONTS_HTML_CON        									AS  contsHtmlCon
					, mc.SEND_CONTS_TITLE      									AS  sendContsTitle
					, mc.SEND_CONTS_SBST										AS  sendContsSbst
					, mc.RID_OFR												AS  ridOfr
					, mc.TO_CALLBACK_NO											AS  toCallbackNo
			FROM COM.MKT_CONTS_MST mc 
			WHERE   1 = 1
				AND mc.FLAG = 1
				AND mc.ID = (
								SELECT lcah.RID_CONTS
								FROM loy.loy_cust_alt_hist lcah
								WHERE lcah.rid = #{rid}
							)			
	</select>
	 
	 <!-- /**************************************
      -   관련 파일             : LoyMbrService.java
      ============================================
      -   제목                  : selectTagForAlterHistConts
      -   설명                  : 알림이력의 내용에 대응하는 태그내용들을 가져오는 쿼리
      ============================================
      -   결과형태              : LoyMbrAlterHistContsResDto
      ============================================
      -   입력					: LoyMbrReqDto
      ============================================
      -   작성자                : jb.kim
      -   작성일                : 2021.02.04
      ***************************************/ -->
	 <select id="selectTagForAlterHistConts" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
			 resultType="com.icignal.loyalty.membership.dto.response.LoyMbrAlterHistContsResDto">
		/* LoyMbrMapper.selectTagForAlterHistConts */
			SELECT 	  lcath.TAG_NM		AS tagNm
					, lcath.TAG_VAL 	AS tagVal
					, lcath.ENC_YN  	AS encYn
			FROM LOY.LOY_CUST_ALT_TAG_HIST lcath
			WHERE lcath.RID_ALT = #{rid}
	 </select>
	
	<select id="selectMemberCardList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.request.LoyMbrMemberCardListResDto">
	/* LoyMbrMapper.selectMemberCardList */
	SELECT		  lck.CARD_TYPE			AS cardTypeCd
				, lck.CARD_KIND_NM			AS cardKindNm
				, lmc.CARD_NO				AS cardNo
				, lmc.STAT 					AS cardStatCd
				, lmc.RID					AS rid
				, ${strColumn}
    FROM LOY.LOY_MBR_CARD lmc
    LEFT OUTER JOIN LOY.LOY_CARD_KIND lck ON lck.RID = lmc.RID_CARD_KIND AND lck.FLAG = 1
    WHERE lmc.FLAG = 1
    AND lmc.RID_MBR = #{rid}
    AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>

	<select id="selectBlackHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrBlackHistListResDto">
	/* LoyMbrMapper.selectBlackHistList */
	 SELECT  DISTINCT   lbm.BL_NM				AS blNm
            			,
            			(
            				SELECT count(*)
            				FROM loy.LOY_BLACK_HIST lbh2
            				WHERE lbh2.RID_MBR = lbh.RID_MBR
            				AND lbh2.RID_BLACK_MST = lbh.RID_BLACK_MST
            			) AS blackHistCnt
						, lc.CHNL_NM					AS blackChnlNm
						, ${strColumn}
    FROM LOY.LOY_BLACK_HIST lbh
    JOIN LOY.LOY_BL_LST_MST lbm ON lbm.RID = lbh.RID_BLACK_MST AND lbm.FLAG = 1
    LEFT OUTER JOIN LOY.LOY_CHNL lc ON lc.RID = lbh.RID_CHNL AND lc.FLAg = 1
    WHERE lbh.FLAG = 1
    AND lbh.RID_MBR = #{rid}
    AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>

	<select id="selectRecommendHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrRecommendHistListResDto">
	/* LoyMbrMapper.selectRecommendHistList */
	SELECT  t1.rcmmHist
			      , t1.rcmmdTypeCd
			      , t1.custNm
			      , t1.mbrNo
			      , t1.ridMbr
			      , t1.regDate
			      , t1.custStatCd
			      , t1.custStatCdNm
			      , ${strColumn}
			FROM (SELECT   '추천함' AS rcmmHist
                		,  lmr.RCMMD_TYPE_CD AS rcmmdTypeCd
                		,  lc2.CUST_NM		 AS custNm
                		,  lm2.MBR_NO		 AS mbrNo
                		,  lm2.RID 			 AS ridMbr
                		,  lc2.CUST_STAT_CD  AS custStatCd
                		,  cc.MARK_NAME 	 AS custStatCdNm
                		,  CONVERT(VARCHAR,lmr.REG_DATE,120)	AS regDate
    FROM LOY.LOY_MBR lm
    JOIN LOY.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
    JOIN LOY.LOY_MBR_RCMMD lmr ON lc.RCMMD_NO = lmr.RCMMD_NO AND lmr.FLAG = 1
    JOIN LOY.LOY_MBR lm2 ON lm2.RID = lmr.RID_MBR AND lm2.FLAG = 1
    JOIN LOY.LOY_CUST lc2 ON lc2.RID = lm2.RID_CUST AND lc2.FLAG = 1
    LEFT OUTER JOIN com.COMM_CODE cc ON cc.CODE_NAME = lc2.CUST_STAT_CD AND cc.GROUP_CODE = 'LOY_CUST_STAT_CD' AND cc.FLAG = 1
    WHERE lmr.FLAG = 1
    AND lm.RID = #{rid}
    AND ${strWhere}
    UNION ALL
    SELECT   DISTINCT  '추천 받음' AS rcmmHist
            , lmr.RCMMD_TYPE_CD AS rcmmdTypeCd
            , plcm.CUST_NM		AS custNm
            , lmmc.MBR_NO		AS mbrNo
            , lmmc.RID 			AS ridMbr
            , lcm.CUST_STAT_CD  AS custStatCd
            , cc2.MARK_NAME 	AS custStatCdNm
            , CONVERT(VARCHAR,lmr.REG_DATE,120)	AS regDate
    FROM LOY.LOY_MBR_RCMMD lmr
    JOIN LOY.LOY_MBR lmm ON lmm.RID = lmr.RID_MBR AND lmm.FLAG = 1
    JOIN LOY.LOY_CUST lcm ON lcm.RID = lmm.RID_CUST AND lcm.FLAG = 1
    JOIN LOY.LOY_CUST plcm ON plcm.RCMMD_NO = lmr.RCMMD_NO AND plcm.FLAG = 1
    JOIN LOY.LOY_MBR lmmc ON plcm.RID = lmmc.RID_CUST AND lmmc.FLAG = 1
    LEFT OUTER JOIN com.COMM_CODE cc2 ON cc2.CODE_NAME = lcm.CUST_STAT_CD AND cc2.GROUP_CODE = 'LOY_CUST_STAT_CD' AND cc2.FLAG = 1
    WHERE lmr.FLAG = 1
    AND lmr.RID_MBR = #{rid}
    AND ${strWhere}) t1
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>

	<select id="selectMbrTierListNew" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTiersListResDto">
	/* LoyMbrMapper.selectMbrTierListNew */
	SELECT     t1.tiersGrpNm
			,  t1.tierNm
			,  t1.tierTypeCd
			,  t1.tierCalcDate
			,  t1.vaildStartDt
			,  t1.validEndDt
			,  t1.createBy
			,  t1.createDate
			,  t1.rid
			,  t1.tierGrpRid
			,  t1.tierRid
			,  t1.upKeepMm
			,  t1.mbrTierCol
			,  t1.seqNo
			,  t1.tierChgTypeCd
			, ${strColumn}
	FROM ( SELECT  ltg.TIERS_GRP_NM							        AS tiersGrpNm
		 	 	, lt.TIER_NM										AS tierNm
		 	 	, lt.TIER_TYPE_CD									AS tierTypeCd
		 	 	, CONVERT(VARCHAR,ltmh.TIER_CALC_DATE,23)		    AS tierCalcDate
		 	 	, CONVERT(VARCHAR,ltmh.VALID_START_DT,23)		    AS vaildStartDt
		 	 	, CONVERT(VARCHAR,ltmh.VALID_END_DT,23)			AS validEndDt
		 	 	, em.name											AS createBy
		 	 	, CONVERT(VARCHAR,ltmh.CREATE_DATE,120) AS createDate
		 	 	, ltmh.RID											AS rid
		 	 	, ltmh.RID_TG										AS tierGrpRid
		 	 	, ltmh.RID_TIER									    AS tierRid
		 	 	, ltg.UP_KEEP_MM									AS upKeepMm
		 	 	, ltg.MBR_TIER_COL									AS mbrTierCol
		 		, ROW_NUMBER() OVER(PARTITION BY ltmh.RID_TG ORDER BY ltmh.CREATE_DATE desc,ltmh.VALID_HIST_YN DESC) AS rnum
		 		, lt.SEQ_NO											AS seqNo
		 		, ltmh.TIER_CHG_TYPE_CD 							AS tierChgTypeCd
    FROM LOY.LOY_TIERS_MBR_HIST ltmh
    JOIN LOY.LOY_MBR lm ON ltmh.RID_MBR = lm.RID AND lm.FLAG = 1
    JOIN LOY.LOY_TIERS lt ON ltmh.RID_TIER = lt.RID AND lt.FLAG = 1
    JOIN LOY.LOY_TIERS_GRP ltg ON ltmh.RID_TG = ltg.RID AND ltg.FLAG = 1
    LEFT OUTER JOIN COM.CRM_USER cu ON cu.RID = ltmh.CREATE_BY AND cu.FLAG = 1
    LEFT OUTER JOIN COM.EMPLOYEE em ON cu.ID_EMPLOYEE = em.ID AND em.FLAG = 1
    WHERE ltmh.RID_MBR = #{rid}
    AND ltmh.VALID_HIST_YN = 'Y'
    AND ${strWhere} ) t1
    WHERE rnum=1
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>
	
	<update id="updateTierHistYn" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrTiersDetailReqDto">
		 /* LoyMbrMapper.updateTierHistYn */
		UPDATE LOY.LOY_TIERS_MBR_HIST
		SET VALID_HIST_YN = 'N',
		    MODIFY_DATE	 = GETDATE(),
		    MODIFY_BY = #{modifyBy}
		WHERE RID_MBR = #{mbrRid}
        AND RID_TG = #{tierGrpRid}
	</update>

	<select id="selectMbrEventHistListNew" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrEventHistListResDto">
	/* LoyMbrMapper.selectMbrEventHistListNew */
	SELECT    	
				lem.EVT_NM																		AS evtNm
			  , lem.EVT_TYPE_CD																	AS evtTypeCd
			  , CONVERT(VARCHAR,lea.APPLCT_DT,120)					AS applctDt
			  , (CASE WHEN lew.RID_MBR IS NOT NULL THEN 'Y' ELSE 'N' END) 	AS winYn
			  , lew.BNF_NO																			AS bnfNo
			  , CONVERT(VARCHAR,lem.APPLY_START_DT,120)		AS applyStartDt
			  , CONVERT(VARCHAR,lem.APPLY_END_DT,120)			AS applyEndDt
			  , ${strColumn}
	FROM LOY.LOY_EVT_MST lem
	JOIN LOY.LOY_EVT_APPLCT lea ON lem.RID = lea.RID_EVT AND lea.FLAG = 1
	LEFT OUTER JOIN LOY.LOY_EVT_WINNER lew ON lew.RID_EVT = lem.RID AND lew.RID_MBR = lea.RID_MBR AND lea.RID = lew.RID_EVT_APPLCT AND lew.FLAG = 1
	WHERE   lem.FLAG = 1
	<choose>
	        <when test="mbrStatCd == '탈퇴'">
		    	AND lea.RID_MBR = #{rid}
		   	</when>
		   	<otherwise>
		   		AND lea.RID_MBR IN ${strMbrIntWhere}
		   	</otherwise>
	</choose>
    AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>

	<select id="selectCustItemConfVal" parameterType="com.icignal.loyalty.loyprogram.dto.request.LoyCustItemConfReqDto"
															resultType="com.icignal.loyalty.loyprogram.dto.response.LoyCustItemConfListResDto">
	/* LoyMbrMapper.selectCustItemConfVal */
	SELECT lcic.COLUMN_NM AS fieldNm
			, lcic.FIELD_DESC AS fieldDesc
			, lcic.REQUIRED_YN AS requiredYn
	FROM loy.LOY_CUST_ITEM_CONF lcic
	JOIN loy.LOY_PGM lp ON lcic.RID_PGM = lp.RID AND lp.FLAG = 1
	WHERE lcic.FLAG = 1
	AND lcic.CUST_TYPE_CD = #{custTypeCd}
	<if test="repYn == &quot;Y&quot;">
	<!-- AND lp.REP_YN = #{repYn} -->
	AND lp.PGM_NO = #{pgmNo}
	</if>
	<if test="repYn == &quot;N&quot;">
	AND lp.RID = (SELECT RID_REP_PGM FROM LOY.LOY_PGM WHERE PGM_NO = #{pgmNo} AND FLAG = 1)
	</if>
	<!-- AND lp.PGM_NO = #{pgmNo} -->
	</select>
	
	<select id="checkPgmRepYn" parameterType="com.icignal.loyalty.loyprogram.dto.request.LoyCustItemConfReqDto"
												resultType="java.lang.String">
	/*LoyMbrMapper.checkPgmRepYn */
	SELECT REP_YN
    FROM loy.LOY_PGM
    WHERE PGM_NO = #{pgmNo}
    AND FLAG = 1
	</select>

	<select id="selectMbrTxnHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTxnHistListResDto">
	/* LoyMbrMapper.selectMbrTxnHistList */
    SELECT lo.RID                                          AS rid
        , lo.BSAL_CLS_CD                                   AS bsalClsCd  --srcType
        , lbc.BRD_NM                                       AS brdNm
        , COM.TO_CHAR(lo.SALE_DATE,'YYYY-MM-DD HH24:MI')   AS saleDate   -- 일자
        , lo.ORD_NO                                        AS ordNo      -- 거래(주문)번호
        , lo.SALE_PROD_NM                                  AS saleProdNm -- 거래명
        , lo.SLRT_CLS_CD                                   AS sellTypeCd -- 유형
        , CONVERT(NUMERIC,ISNULL(lo.TOT_AMT,0))           AS sellAmt    -- 정상가총액
        , lo.ACT_AMT                                       AS actAmt     -- 실결제금액
        , lo.DISC_AMT                                      AS discntAmt  -- 총할인금액
        , ISNULL(lo.DLV_AMT,0)                            AS dlvAmt     -- 배송비
        , ISNULL(lo.MIL_USE_AMT,0)                        AS rdmPoint   -- 사용적립금
        , lc.CHNL_NM + '(' + lc.CHNL_NO + ')'              AS chnlNm     -- 매장명
        , ${strColumn}
    FROM LOY.LOY_ORD lo
    JOIN LOY.LOY_MBR lm ON lm.RID = lo.RID_MBR AND lm.FLAG = 1
    JOIN loy.LOY_CHNL lc ON lc.RID = lo.RID_CHNL AND lc.FLAG = 1
    LEFT OUTER JOIN loy.LOY_BRD_CATEGORY lbc on lbc.RID = lo.RID_BRD and lbc.FLAG = 1
    WHERE lo.FLAG = 1
    AND lo.RID_MBR = #{rid}
    <if test="startDt != null and endDt != null">
    AND lo.SALE_DATE BETWEEN com.TO_DATE(#{startDt},'YYYY-MM-DD') AND com.TO_DATE(#{endDt},'YYYY-MM-DD')+1
    </if>
    <if test="chnlNameGrid != null and chnlNameGrid != ''">
    AND lc.CHNL_NM like '%'+#{chnlNameGrid}+'%'
    </if>
    <if test="srcTypeNm != null and srcTypeNm != ''">
    and  lo.SLRT_CLS_CD LIKE N'%' + #{srcTypeNm} + '%'
    </if>
    <if test="billNo != null and billNo != ''">
    AND lo.ORD_NO LIKE '%' + #{billNo} + '%'
    </if>
    <if test="slrtClsCd != null and slrtClsCd != ''">
    AND lo.SLRT_CLS_CD LIKE N'%' + #{slrtClsCd} + '%'
    </if>
    AND ${strCondWhere}
    AND ${strWhere}
    ORDER BY ${strOrderby}
        ${strEndPaging}
	</select>
	<!-- 
		,llo.SRC_TYPE AS srcType
		,cc.MARK_NAME AS srcTypeNm
	 -->
	
	<!-- SELECT 	  CONVERT(VARCHAR,lph.SELL_DATE,120)					AS sellDate
			, lph.INT_DOM_TYPE_CD			AS intDomTypeCd
			, lph.SELL_TYPE_CD				AS sellTypeCd
			, lph.DIR_PAS_TYPE_CD			AS dirPasTypeCd
			, lph.ROUTE_TYPE_Cd				AS routeTypeCd
			, lph.FLIGHT_NO					AS flightNo
			, lph.RID 								AS purHeadRid
			, CONVERT(VARCHAR,lph.ONBRD_DATE,120)				AS onbrdDate
			, SEAT_NO						AS seatNo
			, SELL_AMT						AS sellAmt
			, TICK_NO						AS tickNo
			, ${strColumn}
	FROM   LOY.LOY_PUR_HEAD lph
	JOIN   LOY.LOY_MBR lm ON lph.RID_MBR = lm.RID AND lm.FLAG = 1
	WHERE  lph.FLAG = 1
	AND    lph.RID_MBR = #{rid}
	<if test="startDt != null and endDt != null">
	AND lph.SELL_DATE BETWEEN #{startDt} AND #{endDt}
	</if>
	AND ${strCondWhere}
	AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging} -->

	<select id="selectMbrOnBoardHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrOnBoardTxnHistListResDto">
	/* LoyMbrMapper.selectMbrOnBoardHistList */
	SELECT 	  CONVERT(VARCHAR,lob.B_DATE,23)		AS bDate
			, lob.AIR_TYPE							AS airType
			, lob.ORIGIN							AS origin
			, lob.DESTI								AS desti
			, lob.FLIGHT							AS flight
			, lob.CLASS								AS seatclass
			, lob.MILE								AS mile
			, lob.B_CNT								AS bCnt
			, lob.TICKET							AS ticket
			, lob.RID								AS rid
			, ${strColumn}
	FROM   DEMO.LOY_ON_BOARD lob
	JOIN   LOY.LOY_MBR lm ON lm.RID = lob.RID_MBR AND lm.FLAG = 1
	WHERE  lob.FLAG = 1
	AND    lob.RID_MBR = #{rid}
	AND ${strCondWhere}
	AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>


	<select id="selectCouponHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
			                        resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCouponListResDto">
	/* LoyMbrMapper.selectCouponHistList */
    SELECT USR_CPON_SEQ AS usrCponSeq
        , CPON_NM   AS cponNm
        , CPON_TP_CD AS cponTpCd
        , convert(varchar, FST_REG_DT, 120) AS fstRegDt
        , DISCNT_TP_CD AS discntTpCd
        , CASE DISCNT_TP_CD
            WHEN '0037001' THEN CONCAT(FORMAT(DISCNT_PER, '##0') , '%')
            WHEN '0037002' THEN CAST(DISCNT_PRC AS VARCHAR)
            ELSE NULL
            END AS discnt
        , LMT_PRC AS lmtPrc
        , USE_START_DT AS useStartDt
        , USE_STOP_DT AS useStopDt
        , CONCAT(CONVERT(VARCHAR,USE_START_DT, 23), ' ~ ', CONVERT(VARCHAR,USE_STOP_DT, 23)) AS useValidDt
        , CONVERT(VARCHAR,USE_DT, 120) AS useDt
        , CASE WHEN PUBL_EA_CD = '0041001' THEN 'Y'
            ELSE 'N'
            END AS publEaCd
        , CASE
            WHEN PUBL_EA_CD != '0041001' AND  (USE_DT != '' OR USE_DT IS NOT NULL)  THEN 'U' -- 사용완료
            WHEN USE_STOP_DT <![CDATA[<]]> GETDATE() AND  PUBL_EA_CD != '0041001' AND (USE_DT = '' OR USE_DT IS NULL) THEN 'AO' --일반쿠폰 기간만료
            WHEN USE_STOP_DT <![CDATA[<]]> GETDATE() AND  PUBL_EA_CD = '0041001' THEN 'AO' --무제한쿠폰 기간만료
            ELSE 'A'
          END AS cponStCd
        , CREATE_DATE AS createDate
        , ${strColumn}
    FROM LOY.LOY_DK_CPN_HIST
    WHERE FLAG = 1
    AND RID_CUST  = (SELECT RID_CUST FROM LOY.LOY_MBR lm WHERE RID = #{ridMbr})
    <if test="(startDt != null and startDt != '') and (endDt != null and endDt != '')">
    AND FST_REG_DT BETWEEN com.TO_DATE(#{startDt},'YYYY-MM-DD') AND com.TO_DATE(#{endDt},'YYYY-MM-DD')+1
    </if>
    <if test="cpnNo != null and cpnNo !='' " >
    AND USR_CPON_SEQ = #{cpnNo}
    </if>
    <if test="cponNm != null and cponNm !='' " >
    AND CPON_NM = #{cponNm}
    </if>
    <if test="cponStCd != null and cponStCd !=''">
        <if test='cponStCd != "ALL"'>
            <if test='cponStCd == "A"'>
            AND USE_STOP_DT <![CDATA[ >= ]]> SYSDATETIME()
            </if>
            <if test='cponStCd == "AO"'>
            AND USE_STOP_DT <![CDATA[<]]> GETDATE()
            </if>
            <if test='cponStCd == "U" or cponStCd == "C" '>
            AND PUBL_EA_CD != '0041001' AND  (USE_DT != '' OR USE_DT IS NOT NULL)
            </if>
        </if>
    </if>
    AND ${strWhere}
    ORDER BY ${strOrderby}
        ${strEndPaging}
	</select>
    <!--
    SELECT
			 t.ofr_Nm      				AS ofrNm
			,t.ofr_Type     			AS ofrType
			,t.ofr_Sub_Type 			AS ofrSubType
			,t.cpn_No       			AS cpnNo
			,t.cpn_Issue_Dt            	AS cpnIssueDt
			,t.cpn_lst_Uesd_Dt      	AS cpnlstUesdDt
			,t.cpn_State_Cd          	AS cpnStateCd
			,t.create_Date           	AS createDate
			,t.rid                   	AS rid
			,t.acrl_Cncl_No				AS acrlCnclNo
			,t.use_Cncl_No				AS useCnclNo
			,t.rcpt_No					AS rcptNo
			,t.cpn_Avl_Cnt    			AS cpnAvlCnt
			,t.rid_Used_Chnl  			AS ridUsedChnl
			,t.rid_Iss_Chnl   			AS ridIssChnl
			,t.used_Chnl_No				AS usedChnlNo
			,t.iss_Chnl_No				AS issChnlNo
			,t.expiry_Date				AS expiryDate
			,t.ofr_Val_Amt				AS ofrValAmt
			,t.use_Min_Pur_Amt			AS useMinPurAmt
			,t.use_Dup_Yn				AS useDupYn
			,t.off_Yn				 	AS offYn
			,t.chnl_Nm				 	AS chnlNm
			,t.cpn_Expiry_State			AS cpnExpiryState
			,t.cpn_Max_Cnt              AS cpnMaxCnt
			,${strColumn}
	FROM (
			SELECT
				 lo.OFR_NM 			as ofr_Nm ,
			 	 lo.OFR_TYPE   		as ofr_Type,
			 	 lo.OFR_SUB_TYPE 	as ofr_Sub_Type,
			 	 lcm.CPN_NO			as cpn_No,
			 	 CONVERT(VARCHAR, lcm.CPN_ISSUE_DT,120)  as cpn_Issue_Dt,
			 	 CONVERT(VARCHAR, lcm.CPN_LST_USED_DT,'YYYY-MM-DD HH24:MI')  as cpn_lst_Uesd_Dt,
			 	 lcm.CPN_STATE_CD									as cpn_State_Cd,
			 	 CONVERT(VARCHAR, lcm.create_date,120)  as create_Date,
			 	 lcm.rid											as rid,
			 	 lcm.ACRL_CNCL_NO											AS acrl_Cncl_No		 적립 취소 번호
				 ,lcm.USE_CNCL_NO											AS use_Cncl_No		 사용 취소 번호
				 ,lcm.RCPT_NO												AS rcpt_No			 영수증 번호
				 ,lcm.CPN_AVL_CNT											AS cpn_Avl_Cnt
				 ,lcm.RID_USED_CHNL											AS rid_Used_Chnl
				 ,lcm.RID_ISS_CHNL											AS rid_Iss_Chnl
				 ,(select chnl_no from loy.loy_chnl where rid = lcm.RID_USED_CHNL) as used_Chnl_No
				 ,(select chnl_no from loy.loy_chnl where rid = lcm.RID_ISS_CHNL) as iss_Chnl_No
				 ,concat(CONVERT(VARCHAR,com.TO_DATE(lcm.CPN_STD_DT,23),'YYYY-MM-DD '),CONVERT(VARCHAR,com.TO_DATE(lcm.CPN_END_DT,23),'~ YYYY-MM-DD')) AS expiry_Date
		         , CASE WHEN lo.OFR_VAL_TYPE ='F' THEN ISNULL2(lo.OFR_VAL_AMT,CONVERT(VARCHAR,lo.OFR_VAL_AMT,'999,999,999,999,999') + N'원',NULL)
		           WHEN lo.OFR_VAL_TYPE ='A' THEN ISNULL2(lo.OFR_VAL_AMT,CONVERT(VARCHAR,lo.OFR_VAL_AMT,'999,999,999,999,999') + N'원',NULL)
		           ELSE ISNULL2(lo.OFR_VAL_AMT,CONVERT(NVARCHAR, lo.OFR_VAL_AMT) + '%',NULL) END     AS ofr_Val_Amt
		         ,ISNULL2(lc.USE_MIN_PUR_AMT,CONVERT(VARCHAR,lc.USE_MIN_PUR_AMT    ,'999,999,999,999,999') + N'원',NULL)                AS use_Min_Pur_Amt
		         ,lc.USE_DUP_YN                         AS use_Dup_Yn
		         ,lc.OFF_YN                             AS off_Yn
		         ,lc2.CHNL_NM                           AS chnl_Nm
		         ,lc.USABLE_MAX_CNT                     AS cpn_Max_Cnt
		        ,CASE WHEN lcm.CPN_STATE_CD = 'A' THEN
		         	CASE WHEN lcm.CPN_END_DT <![CDATA[ >= ]]> CONVERT(VARCHAR,GETDATE(),'YYYYMMDD') THEN N'사용가능' ELSE N'기간만료'  END
		         	WHEN lcm.CPN_STATE_CD = 'U' THEN N'사용완료'
		         	WHEN lcm.CPN_STATE_CD = 'C' THEN N'발급취소'
                     END                                                                         AS cpn_Expiry_State
			FROM
				loy.LOY_CPN_MBR lcm
				INNER JOIN loy.loy_cpn lc ON lcm.RID_CPN_M= lc.RID
				INNER JOIN loy.loy_ofr lo ON lc.RID_OFR = lo.RID
				INNER JOIN loy.loy_mbr m ON lcm.RID_MBR = m.RID
			    LEFT  JOIN loy.LOY_CHNL lc2 ON lcm.RID_USED_CHNL = lc2.RID
			WHERE
				 lcm.RID_MBR IN ${strMbrIntWhere}
			 	AND lcm.FLAG = 1
			<if test="(startDt != null and startDt != '') and (endDt != null and endDt != '')">
				AND lcm.cpn_Issue_Dt BETWEEN com.TO_DATE(#{startDt},23) AND com.TO_DATE(#{endDt},23)+1
			</if>
		   <if test="cpnNo != null and cpnNo !='' " >
		    AND lcm.CPN_NO = #{cpnNo}
		    </if>
		    <if test="ofrNm != null and ofrNm !='' ">
		     AND lo.OFR_NM =#{ofrNm}
		    </if>
		     <if test="cpnExpiryState != null and cpnExpiryState !=''">
		       <if test='cpnExpiryState != "ALL"'>
		       		<if test='cpnExpiryState == "A"'>
		       		    AND lcm.CPN_STATE_CD  =#{cpnExpiryState}
				    	AND lcm.CPN_END_DT <![CDATA[ >= ]]> CONVERT(VARCHAR,GETDATE(),'YYYYMMDD')
				    </if>
		       		<if test='cpnExpiryState == "AO"'>
		       		    AND lcm.CPN_STATE_CD  = 'A'
				    	AND lcm.CPN_END_DT <![CDATA[ < ]]> CONVERT(VARCHAR,GETDATE(),'YYYYMMDD')
				    </if>
			     	<if test='cpnExpiryState == "U" or cpnExpiryState == "C" '>
			    	 	AND lcm.CPN_STATE_CD  =#{cpnExpiryState}
			    	</if>
		    	</if>
		    </if>
	) t
	WHERE 1 = 1
		AND ${strCondWhere}
		AND ${strWhere}
	ORDER BY ${strOrderby}
    ${strEndPaging}
    -->
	<!--
	SELECT
		 lo.OFR_NM 			as ofrNm ,
	 	 lo.OFR_TYPE   		as ofrType,
	 	 lo.OFR_SUB_TYPE 	as ofrSubType,
	 	 lcm.CPN_NO			as cpnNo,
	 	 CONVERT(VARCHAR, lcm.CPN_ISSUE_DT,'YYYY-MM-DD HH24:MI')  as cpnIssueDt,
	 	 CONVERT(VARCHAR, lcm.CPN_LST_USED_DT,'YYYY-MM-DD HH24:MI')  as cpnlstUesdDt,
	 	 lcm.CPN_STATE_CD		as cpnStateCd,
	 	 CONVERT(VARCHAR, lcm.create_date,120)  as createDate,
	 	 lcm.rid			as rid,
	 	 lcm.ACRL_CNCL_NO											AS acrlCnclNo
		 ,lcm.USE_CNCL_NO											AS useCnclNo
		 ,lcm.RCPT_NO												AS rcptNo
		 ,lcm.CPN_AVL_CNT											AS cpnAvlCnt
		 ,lcm.RID_USED_CHNL											AS ridUsedChnl
		 ,lcm.RID_ISS_CHNL											AS ridIssChnl
		 ,(select chnl_no from loy.loy_chnl where rid = lcm.RID_USED_CHNL) as usedChnlNo
		 ,(select chnl_no from loy.loy_chnl where rid = lcm.RID_ISS_CHNL) as issChnlNo
		 ,concat(CONVERT(VARCHAR,com.TO_DATE(lcm.CPN_STD_DT,23),'YYYY-MM-DD '),CONVERT(VARCHAR,com.TO_DATE(lcm.CPN_END_DT,23),'~ YYYY-MM-DD')) AS expiryDate
         , CASE WHEN lo.OFR_VAL_TYPE ='F' THEN NVL2(lo.OFR_VAL_AMT,CONVERT(VARCHAR,lo.OFR_VAL_AMT,'999,999,999,999,999') + '원',NULL)
           WHEN lo.OFR_VAL_TYPE ='A' THEN NVL2(lo.OFR_VAL_AMT,CONVERT(VARCHAR,lo.OFR_VAL_AMT,'999,999,999,999,999') + '원',NULL)
           ELSE     NVL2(lo.OFR_VAL_AMT,lo.OFR_VAL_AMT + '%',NULL) END     AS ofrValAmt
         ,nvl2(lc.USE_MIN_PUR_AMT,CONVERT(VARCHAR,lc.USE_MIN_PUR_AMT    ,'999,999,999,999,999') + '원',NULL)                AS useMinPurAmt
         ,lc.USE_DUP_YN                         AS useDupYn
         ,lc.OFF_YN                             AS offYn
         ,lc2.CHNL_NM                           AS chnlNm
         ,CASE WHEN lcm.CPN_END_DT >= CONVERT(VARCHAR,GETDATE(),'YYYYMMDD') THEN '사용가능'
          ELSE '기한만료'
          END cpnExpiryState
	     ,${strColumn}
	   FROM
		loy.LOY_CPN_MBR lcm
		INNER JOIN loy.loy_cpn lc ON lcm.RID_CPN_M= lc.RID
		INNER JOIN loy.loy_ofr lo ON lc.RID_OFR = lo.RID
		INNER JOIN loy.loy_mbr m ON lcm.RID_MBR = m.RID
	    LEFT  JOIN loy.LOY_CHNL lc2 ON lcm.RID_USED_CHNL = lc2.RID
	WHERE
		 lcm.RID_MBR IN ${strMbrIntWhere}
	AND ${strCondWhere}
	AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	 -->

    <select id="selectMbrAgreList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrAgreListResDto">
	/* LoyMbrMapper.selectMbrAgreList */
	   SELECT  t1.agreTypeCd
		      , t1.ver
		      , t1.regDate
		      , t1.custRid
		      , t1.rid
		      , t1.termRid
		      , t1.termVerRid
   		      , t1.agreYn
		      ,  CEILING(COUNT(1) OVER()) totalCount
		FROM ( SELECT    lca.AGRE_TYPE_CD				AS agreTypeCd
				, ltv.VER						AS ver
				, CONVERT(VARCHAR,lca.REG_DATE,120)					AS regDate
				, lca.RID_CUST				    AS custRid
				, lca.RID						AS rid
				, lt.RID						AS termRid
				, lca.RID_TERMS_VER				AS termVerRid
				, lca.AGRE_YN AS agreYn
				, ${strColumn}
		FROM   LOY.LOY_CUST_AGRE lca
		JOIN LOY.LOY_TERMS_VER ltv ON lca.RID_TERMS_VER = ltv.RID AND ltv.FLAG = 1
		JOIN LOY.LOY_TERMS lt ON lt.RID = ltv.RID_TERMS AND lt.FLAG = 1
		JOIN LOY.LOY_TERMS_PGM ltp ON ltp.RID_TERMS_VER = ltv.RID AND ltp.FLAG = 1
		WHERE   lca.FLAG = 1
		AND     lca.RID_CUST = #{ridCust}
		AND     ltp.RID_PGM	= #{ridPgm}
		AND     ${strCondWhere}
		AND     ${strWhere}
		UNION ALL
		SELECT    lca.AGRE_TYPE_CD				AS agreTypeCd
				, null							AS ver
				, CONVERT(VARCHAR,lca.REG_DATE,120)					AS regDate
				, lca.RID_CUST				    AS custRid
				, lca.RID						AS rid
				, lt.RID						AS termRid
				, lca.RID_TERMS_VER				AS termVerRid
				, lca.AGRE_YN AS agreYn
				, ${strColumn}
		FROM   LOY.LOY_CUST_AGRE lca
		JOIN   LOY.LOY_TERMS_RCV_CHNL ltrc ON lca.AGRE_TYPE_CD = ltrc.MKT_RCV_CHNL_CD AND ltrc.FLAG = 1
		JOIN   LOY.LOY_TERMS lt ON ltrc.RID_TERMS = lt.RID AND lt.flag = 1
		 LEFT OUTER JOIN (SELECT TOP 1 RID
                   		  	, RID_TERMS
                       		, ROW_NUMBER() OVER (PARTITION BY RID_TERMS ORDER BY VER DESC) RN
                  		  FROM LOY.LOY_TERMS_VER
                  		  WHERE FLAG = 1
      					) ltv ON ltv.RID_TERMS = lt.RID
		LEFT OUTER JOIN   LOY.LOY_TERMS_PGM ltp ON ltp.RID_TERMS_VER = ltv.RID AND ltp.FLAG = 1 AND ltp.RID_PGM	= #{ridPgm}
		WHERE   lca.FLAG = 1
		AND     lca.RID_CUST = #{ridCust}
		AND     ${strCondWhere}
		AND     ${strWhere} ) t1
		ORDER BY ${strOrderby}
		${strEndPaging}
	</select>


	<select id="selectMbrPointExcelHistList" parameterType="com.icignal.loyalty.benefit.point.dto.request.LoyMbrPtnTxnHistReqDto" resultType="com.icignal.loyalty.benefit.point.dto.response.LoyMbrPtnTxnHistListResDto">
	/* LoyMbrMapper.selectMbrPointExcelHistList" */
	SELECT   <!--  lpt.TXN_NUM			AS txnNum -->
			  lpt.TXN_UNIQ_NO		AS txnUniqNo
			<!-- , lpt.TXN_STAT_CD		AS txnStatCd -->
			<!-- , lpt.APPR_NO			AS apprNo -->
			, lpt.PNT_TXN_TYPE_1_CD	AS pntTxnType1Cd
			, lpt.PNT_TXN_TYPE_2_CD	AS pntTxnType2Cd
			, lc.CHNL_NM			AS chnlNm
			, CONVERT(VARCHAR,com.TRUNC(ISNULL(lpt.TXN_AMT,0)),'FM999,999,999,999')   AS txnAmt
			, case when lpt.pnt_txn_type_1_cd = '200' then '-' + CONVERT(VARCHAR,com.TRUNC(lpt.PNT_AMT,0),'FM999,999,999,999') else CONVERT(VARCHAR,TRUNC(lpt.PNT_AMT,0),'FM999,999,999,999') end AS pntAmt
			, CONVERT(VARCHAR,lpt.TXN_DT,120) AS txnDt
			, CONVERT(VARCHAR,lpt.APPR_DT,120)			AS apprDt
			, lpt.RID				AS rid
			,ISNULL(lpt.SALES_AMT,0)    AS salesAmt  --판매가
			, ${strColumn}
	FROM LOY.LOY_PNT_TXN lpt
	JOIN LOY.LOY_MBR lm ON lpt.RID_MBR =lm.RID AND lm.FLAg = 1
	LEFT OUTER JOIN LOY.LOY_CHNL lc ON lc.RID = lpt.RID_CHNL AND lc.FLAG = 1
	WHERE ${strCondWhere}
	AND   lpt.FLAG = 1
	AND   lpt.rid_mbr  = #{rid}
	AND   ${strWhere}
	ORDER BY ${strOrderby}
	${strEndPaging}

	</select>

	<select id="selectMbrOnBoardExcelHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrOnBoardTxnHistListResDto">
	/* LoyMbrMapper.selectMbrOnBoardExcelHistList */
	SELECT CONVERT(VARCHAR,lob.B_DATE,23)		AS bDate
        , lob.AIR_TYPE							AS airType
        , lob.ORIGIN							AS origin
        , lob.DESTI								AS desti
        , lob.FLIGHT							AS flight
        , lob.CLASS								AS seatclass
        , CONVERT(VARCHAR,com.TRUNC(lob.MILE,0),'FM999,999,999,999')	AS mile
        , lob.B_CNT								AS bCnt
        , lob.TICKET							AS ticket
        , lob.RID								AS rid
        , ${strColumn}
	FROM DEMO.LOY_ON_BOARD lob
	JOIN LOY.LOY_MBR lm ON lm.RID = lob.RID_MBR AND lm.FLAG = 1
	WHERE lob.FLAG = 1
	AND lob.RID_MBR = #{rid}
	AND ${strCondWhere}
	AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>

	<select id="selectMbrFamilyList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrFamilyListReqDto"
													 resultType="com.icignal.loyalty.membership.dto.response.LoyMbrFamilyListResDto">
	/* LoyMbrMapper.selectMbrFamilyList */
	SELECT mbrNo
        , custNm
        , hhp
        , relCd
        , statCd
        , createDate
        , secsnDate
        , rid
        , totalPntAvl
        , ${strColumn}
	FROM (
			SELECT DISTINCT(lm.MBR_NO) AS mbrNo
					, lc.CUST_NM AS custNm
					, lc.HHP AS hhp
					, lfm.REL_CD AS relCd
					, lfm.STAT_CD AS statCd
					<!-- , lpt.TOTAL_PNT_AVL AS totalPntAvl -->
					, CONVERT(VARCHAR,lfm.CREATE_DATE, 23) AS createDate
					, CONVERT(VARCHAR,lfm.SECSN_DATE, 23) AS secsnDate
					, lm.RID AS rid
					, (SELECT IIF(COUNT(*)=0,0,ISNULL(SUM(usePnt), 0))
                        FROM (
                                SELECT SUM(CASE WHEN lpaa.VALID_START_DATE <![CDATA[ <= ]]>  com.TRUNC_DATE(GETDATE())
                                                AND lpaa.VALID_END_DATE <![CDATA[ >= ]]> com.TRUNC_DATE(GETDATE()) THEN lpaa.BALNC
                                            ELSE 0 END ) AS usePnt
                                FROM loy.loy_pnt_acrl lpaa
                                LEFT OUTER JOIN LOY.LOY_MBR_INT lmi ON lpaa.rid_mbr = lmi.RID_MBR
                                AND lmi.MBR_INT_CODE IN ( SELECT MBR_INT_CODE
                                                          FROM LOY.LOY_MBR_INT
                                                          WHERE rid_mbr IN ( SELECT RID_MBR
                                                                             FROM loy.LOY_FMLY_MBR
                                                                             WHERE RID_FMLY IN (SELECT RID_FMLY
                                                                                                FROM loy.LOY_FMLY_MBR
                                                                                                WHERE rid_mbr = #{ridMbr}
                                                                                                AND FLAG = 1
                                                                                               )
                                                                             AND FLAG = 1
                                                                            )
                                                          AND flag = 1
                                                        )
                                WHERE lpaa.rid_mbr = lfm.RID_MBR
                                AND lpaa.FLAG = 1
                                AND lpaa.OFFER_TYPE_CD = 'P'
                                AND lpaa.BALNC > 0
                            ) rslt
                        WHERE 1 = 1
                        ) AS totalPntAvl
            FROM loy.LOY_FMLY_MBR lfm
            JOIN loy.LOY_FMLY lf ON lf.rid  = lfm.RID_FMLY AND lf.FLAG = 1
            JOIN LOY.LOY_MBR lm ON lfm.RID_MBR= lm.RID AND lm.FLAG = 1
            LEFT OUTER JOIN LOY.LOY_PNT_TXN lpt ON lm.RID = lpt.RID_MBR AND lpt.FLAG = 1
            JOIN loy.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
            WHERE lfm.FLAG = 1
            AND lfm.RID_FMLY = (SELECT RID_FMLY FROM loy.LOY_FMLY_MBR WHERE rid_mbr = #{ridMbr} AND FLAG = 1)
        ) t
	WHERE ${strWhere}
    ORDER BY ${strOrderby}
    	${strEndPaging}
	</select>

	<!-- <select id="checkExistFmly" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrFamilyListReqDto"
												resultType="java.lang.Integer">
	/* LoyMbrMapper.checkExistFmly */
	SELECT count(*)
	FROM loy.LOY_FMLY lf
	WHERE lf.FLAG = 1
	AND lf.RID = (SELECT RID_FMLY FROM LOY_FMLY_MBR WHERE RID_MBR = #{ridMbrSub} AND FLAG = 1 )
	</select>

	<select id="checkNewFmly" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrFamilyListReqDto"
												resultType="java.lang.Integer">
	/* LoyMbrMapper.checkNewFmly */
	SELECT count(*)
	FROM loy.LOY_FMLY lf
	WHERE lf.FLAG = 1
	AND lf.RID = (SELECT RID_FMLY FROM LOY_FMLY_MBR WHERE RID_MBR = #{ridMbr} AND FLAG = 1 )
	</select>

	<insert id="insertNewFmlyMbr" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrFamilyListReqDto">
	/* LoyMbrMapper.checkNewFmly */
	INSERT INTO LOY.LOY_FMLY_MBR(
				RID
				, CREATE_BY
				, MODIFY_BY
				, STAT_CD
				, REL_CD
				, SECSN_DATE
				, RID_MBR
				, RID_FMLY
	) VALUES(
				com.getNewID('')
				, 'ADMIN'
				, 'ADMIN'
				, '01'
				, NULL
				, NULL
				, #{ridMbrSub}
				, (SELECT RID_FMLY FROM LOY_FMLY_MBR WHERE RID_MBR = #{ridMbr} AND FLAG = 1)
	)
	</insert> -->

	<select id="checkFmlyChiefCnt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrFamilyListReqDto"
												resultType="java.lang.Integer">
	/* LoyMbrMapper.checkFmlyChiefCnt */
	SELECT COUNT(*)
	FROM loy.LOY_FMLY lf
	WHERE lf.FLAG = 1
	AND lf.STAT_CD != '03'
	AND lf.RID = (SELECT lfm.RID_FMLY AS ridFmly
						FROM loy.LOY_FMLY_MBR lfm
						WHERE lfm.FLAG = 1
						AND lfm.RID_MBR = #{rid})
	</select>

	<select id="checkFmlyChief" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrFamilyListReqDto"
												resultType="com.icignal.loyalty.membership.dto.response.LoyMbrFmlyResDto">
	/* LoyMbrMapper.checkFmlyChief */
	SELECT lf.RID_REP_MBR AS chiefRid
	FROM loy.LOY_FMLY lf
	WHERE lf.FLAG = 1
	AND lf.STAT_CD != '03'
	AND lf.RID = (SELECT lfm.RID_FMLY AS ridFmly
						FROM loy.LOY_FMLY_MBR lfm
						WHERE lfm.FLAG = 1
						AND lfm.RID_MBR = #{rid})
	</select>

	<select id="saveNewFmlyMbr" parameterType="com.icignal.loyalty.family.dto.request.LoyFamilyListReqDto" statementType="CALLABLE">
	/* LoyMbrMapper.saveNewFmlyMbr */
    { CALL LOY.PKG_LOY_FMLY.SP_ADD_FMLY (
            #{mbrNo},
            #{relCd},
            #{repMbrNo},
            #{rst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{rstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{rstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
            )
    }
    </select>

	<select id="deleteFmlyMbr" parameterType="com.icignal.loyalty.family.dto.request.LoyFamilyListReqDto" statementType="CALLABLE">
	/* LoyMbrMapper.deleteFmlyMbr */
    { CALL LOY.PKG_LOY_FMLY.SP_REG_FMLY_WITHDRAWAL (
            #{mbrNo},
            #{rst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{rstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{rstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
            )
    }
    </select>

    <select id="selectTermsListVal" parameterType="com.icignal.loyalty.terms.termmaster.dto.request.LoyTermsListReqDto"
    												resultType="com.icignal.loyalty.terms.termmaster.dto.response.LoyTermsListResDto">
    /* LoyMbrMapper.selectTermsListVal */
    SELECT TERMS_TYPE_CD 			AS termsTypeCd
         , TERMS_TYPE_SUB_CD 	AS termsTypeSubCd
         , VER								AS ver
         , START_DATE 					AS startDate
         <!-- , TERMS_SUMRY				AS termsSumry
         , TERMS_CONTS				AS termsConts -->
         , RID 								AS rid
         , REQUIRED_YN 				AS requiredYn
         , PGM_NM 						AS pgmNm
         , PGM_NO 						AS pgmNo
         , ridPgm 							AS ridPgm
         , ${strColumn}
    FROM (
            SELECT T1.RID,
                   T1.TERMS_TYPE_CD ,
                   T1.TERMS_TYPE_SUB_CD,
                   T2.VER,
                   T2.START_DATE,
                   T2.REQUIRED_YN,
                   T2.TERMS_SUMRY,
                   T2.TERMS_CONTS,
                   lp.RID AS ridPgm,
                   lp.PGM_NO,
                   lp.PGM_NM,
                   ROW_NUMBER() OVER (PARTITION BY T2.RID_TERMS ORDER BY START_DATE DESC ) AS RN
            FROM LOY.LOY_TERMS T1
            JOIN LOY.LOY_TERMS_VER T2 ON T1.RID = T2.RID_TERMS
            JOIN loy.LOY_TERMS_PGM ltp ON ltp.RID_TERMS_VER = T2.RID AND ltp.FLAG = 1
            LEFT OUTER JOIN loy.LOY_PGM lp ON lp.RID = ltp.RID_PGM AND lp.FLAG = 1
            WHERE 1=1
            AND T1.FLAG  = 1
            AND T2.FLAG  = 1
            AND T1.STAT_CD = #{statCd}
            AND lp.PGM_NO = #{pgmNo}
            AND T1.TERMS_TYPE_CD = 'AT'
            AND T2.START_DATE <![CDATA[ <= ]]>  GETDATE()
        ) A
    WHERE A.RN = 1
    </select>

	<!-- 회원가입(구버전)사용안함 -->
    	<select id="addNewCustomer" parameterType="com.icignal.loyalty.membership.dto.request.LoyNewCustAddReqDto" statementType="CALLABLE">
	/* LoyMbrMapper.addNewCustomer */
        { CALL LOY.PKG_LOY_MBR_JOIN.SP_CUST_I_JOIN_MAIN (
                #{pgmNo},
                #{custtypecd},
                #{mbrTypeCd},
                #{chnlNo},
                #{sbscPathCd},
                #{sbscDeviceCd},
                #{custnm},
                #{custnmadd},
                #{birthday},
                #{lunarCd},
                #{gen},
                #{nlty},
                #{email},
                #{tel},
                #{zip},
                #{adres},
                #{bunji},
                #{buildingCode},
                #{bCode},
                #{sigunguCode},
                #{mrrgYn},
                #{annvrsry},
                #{annvrsryTypeCd},
                #{frgnrNo},
                #{nativeYn},
                #{wrcNm},
                #{position},
                #{empNo},
                #{certTypeCd},
                #{certSubTypeCd},
                #{certVal},
                #{loginTypeCd},
                #{userId},
                #{userPwd},
                #{rcmmdNo},
                #{drmncyChngUnit},
                #{empId},
                #{Rst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{RstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{RstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{oCustNo , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{oMbrNo , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
                )
        }
    </select>

    <select id="saveJoinCustAll" parameterType="java.util.Map" statementType="CALLABLE">
     /* LoyMbrMapper.saveJoinCustAll */
    	{ CALL LOY.PKG_LOY_MBR.SP_MBR_SBSC_MAIN (
    		#{commitYn},
           	#{empId},
           	#{pgmNo},
           	#{custTypeCd},
           	#{mbrTypeCd},
    		#{tCustTbl, javaType=Object, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustTypeHandler},
    		#{tCustCTbl, javaType=java.lang.String, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustCompanyTypeHandler},
    		#{tCustAgreTbl, javaType=Object, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustAgreTypeHandler},
    		#{tCustAddTbl, javaType=java.lang.String, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustAddTypeHandler},
			#{Rst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	      	#{RstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	      	#{RstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	      	#{oCustNo , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{oMbrNo , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{oMbrCardNo , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
    	) }
  	</select>

  	<select id="selectTermsMktRcvListVal" parameterType="com.icignal.loyalty.terms.termmaster.dto.request.LoyTermsListReqDto"
    														resultType="com.icignal.loyalty.terms.termmaster.dto.response.LoyTermsRcvChnlListResDto">
  	/* LoyMbrMapper.selectTermsMktRcvListVal */
  	SELECT trc.RID as rid,
			trc.SEQ_NO as seqNo,
			trc.MKT_RCV_CHNL_CD as mktRcvChnlCd,
			trc.START_DATE as startDate,
			${strColumn}
  	FROM LOY.LOY_TERMS_RCV_CHNL trc
  	WHERE trc.USE_YN = 'Y'
	AND  trc.flag = 1
	AND RID_TERMS = #{rid}
	AND trc.START_DATE <![CDATA[ <= ]]> GETDATE()
	ORDER BY seqNo asc
  	</select>

  	<select id="selectMbrDetailPop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
  													resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDetailPopResDto">
  	/* LoyMbrMapper.selectMbrDetailPop */
  	SELECT lm.MBR_TYPE_CD 			AS mbrTypeCd
    		, lc.CUST_TYPE_CD 				AS custTypeCd
    		, lc.CUST_NO 						AS custNo
    		, lc.CUST_STAT_CD 				AS custStatCd
    		, lcd.CUST_NM 						AS cust_nm
    		, lc.GEN_CD 							AS gen_cd
    		, CONVERT(VARCHAR,lc.BIRTH_DATE,'YYYYMMDD') 							AS birthdt
    		, lc.LUNAR_CD 						AS lunar_cd
    		, lcd.HHP 								AS hhp
    		, lc.EMAIL 								AS email
    		, lc.ZIP 									AS zip
    		, lc.ADRES 							AS adres
    		, lc.BUNJI 								AS bunji
    		, lc.B_CODE 							AS bCode
    		, lc.RCMMD_NO 					AS rcmmd_no
<!--     		, lc.RID_SBSC_CHNL 				AS ridSbscChnl  -->
    		, lc2.CHNL_NM 						AS chnlNm
    		, lc2.CHNL_NO 						AS chnlNo 
    		, lm.SBSC_PATH_CD 				AS sbscPathCd
    		, lm.SBSC_DEVICE_CD 			AS sbscDeviceCd
    		, lc.CERT_TYPE_CD 				AS certTypeCd
    		, lc.CERT_SUB_TYPE_CD 		AS certSubTypeCd
    		, lc.CERT_VAL 						AS certVal
    		, lci.CUST_NM_ADD 				AS cust_nm_add
    		, lci.TEL_NO 							AS tel_no
    		, lci.ZIP_ADD	 						AS zip_add
    		, lci.ADRES_ADD 					AS adres_add
    		, lci.BUNJI_ADD 					AS bunji_add
    		, lci.B_CODE_ADD					AS bCodeAdd
    		, lci.NLTY 								AS nlty
    		, lci.NATIVE_YN 						AS native_yn
    		, lci.EMP_NO 							AS empNo
    		, lci.MRRG_YN 						AS mrrg_yn
    		, lci.ANNVRSRY 						AS annvrsry
    		, lci.ANNVRSRY_TYPE_CD 		AS annvrsry_type_cd
    		, lci.FRGNR_NO 						AS frgnrNo
    		, lci.WRC_NM 						AS wrc_nm
    		, lci.PSTN 								AS pstn
    		, lci.LA_NAME 						AS laName
    		, lci.LA_CERT_VAL 					AS laCertVal
    		, lci.LA_AGRE_DATE 				AS laAgreDate
    		, lc.DRMNCY_CHNG_UNIT 		AS drmncyChngUnit
    		, lp.PGM_NM 						AS pgmNm
    		, lp.PGM_NO 							AS pgmNo
    		, lcli.USER_ID							AS user_id
    		, lcli.USER_PWD						AS user_pwd
    		, lcli.LOGIN_TYPE_CD				AS loginTypeCd
    		, lci.SNS_ADDR                     AS snsAddr
            , lci.SNS_TYPE_CD                AS snsTypeCd
            , lci.CHILD_YN                      AS child_yn
            , lci.DEPT_NM						AS dept_nm
    FROM loy.LOY_MBR lm
    LEFT OUTER JOIN loy.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
    LEFT OUTER JOIN loy.VW_CUST_DI lcd ON lcd.RID_CUST = lc.RID
    LEFT OUTER JOIN loy.LOY_CUST_I lci ON lci.RID_CUST = lc.RID AND lci.FLAG = 1
    <!-- LEFT OUTER JOIN loy.LOY_CHNL lcl ON lcl.RID = lc.RID_SBSC_CHNL AND lcl.FLAG = 1 -->
    LEFT OUTER JOIN loy.LOY_CUST_LOGIN_INF lcli ON lcli.RID_CUST = lc.RID AND lcli.FLAG = 1 AND lcli.LOGIN_TYPE_CD = 'WEB_ID'
    JOIN LOY.LOY_PGM lp ON lp.RID = lm.RID_PGM AND lp.FLAg = 1
    LEFT OUTER JOIN LOY.LOY_CHNL lc2 ON lc2.RID = lm.RID_SBSC_CHNL AND lc2.FLAG = 1
    WHERE lm.RID = #{rid}
  	</select>
  	
  	<select id="selectCorpMbrDetailPop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
  													resultType="com.icignal.loyalty.membership.dto.response.LoyCorpMbrDetailPopResDto">
  	/* LoyMbrMapper.selectCorpMbrDetailPop */
  	SELECT lm.MBR_TYPE_CD 			AS mbrTypeCd
    		, lc.CUST_TYPE_CD 				AS custTypeCd
    		, lc.CUST_NO 						AS custNo
    		, lc.CUST_STAT_CD 				AS custStatCd
    		, lc.CUST_NM 						AS cust_nm
    		, lc.GEN_CD 							AS gen_cd
    		, CONVERT(VARCHAR,lc.BIRTH_DATE,'YYYYMMDD') 							AS birthdt
    		, lc.LUNAR_CD 						AS lunar_cd
    		, lc.HHP 								AS hhp
    		, lc.EMAIL 								AS email
    		, lc.ZIP 									AS zip
    		, lc.ADRES 							AS adres
    		, lc.BUNJI 								AS bunji
    		, lc.B_CODE 							AS bCode
    		, lc.RCMMD_NO 					AS rcmmd_no
<!--     		, lc.RID_SBSC_CHNL 				AS ridSbscChnl  -->
    		, lc2.CHNL_NM 						AS chnlNm
    		, lc2.CHNL_NO 						AS chnlNo 
    		, lm.SBSC_PATH_CD 				AS sbscPathCd
    		, lm.SBSC_DEVICE_CD 			AS sbscDeviceCd
    		, lc.CERT_TYPE_CD 				AS certTypeCd
    		, lc.CERT_SUB_TYPE_CD 		AS certSubTypeCd
    		, lc.CERT_VAL 						AS certVal
    		, lci.CUST_NM_ADD 				AS cust_nm_add
    		, lcc.TEL_NO 							AS tel_no
    		, lcc.ZIP_ADD	 						AS zip_add
    		, lcc.ADRES_ADD 					AS adres_add
    		, lcc.BUNJI_ADD 					AS bunji_add
<!--     		, lcc.B_CODE_ADD					AS bCodeAdd -->
    		, lci.NLTY 								AS nlty
    		, lci.NATIVE_YN 						AS native_yn
    		, lci.EMP_NO 							AS empNo
    		, lci.MRRG_YN 						AS mrrg_yn
    		, lci.ANNVRSRY 						AS annvrsry
    		, lci.ANNVRSRY_TYPE_CD 		AS annvrsry_type_cd
    		, lci.FRGNR_NO 						AS frgnrNo
    		, lci.WRC_NM 						AS wrc_nm
    		, lci.PSTN 								AS pstn
    		, lci.LA_NAME 						AS laName
    		, lci.LA_CERT_VAL 					AS laCertVal
    		, lci.LA_AGRE_DATE 				AS laAgreDate
    		, lc.DRMNCY_CHNG_UNIT 		AS drmncyChngUnit
    		, lp.PGM_NM 						AS pgmNm
    		, lp.PGM_NO 							AS pgmNo
    		, lcli.USER_ID							AS user_id
    		, lcli.USER_PWD						AS user_pwd
    		, lcli.LOGIN_TYPE_CD				AS loginTypeCd
    		, lci.SNS_ADDR                     AS snsAddr
            , lci.SNS_TYPE_CD                AS snsTypeCd
            , lcc.CEO 						AS ceo 
			, lcc.BIZR_NO 					AS bizrNo
			, lcc.CHARGER 					AS charger
			, lcc.INDUTY 					AS induty
			, lcc.BIZCND 					AS bizcnd
    FROM loy.LOY_MBR lm
    LEFT OUTER JOIN loy.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
    LEFT OUTER JOIN loy.LOY_CUST_I lci ON lci.RID_CUST = lc.RID AND lci.FLAG = 1
  	LEFT OUTER JOIN LOY.LOY_CUST_C lcc ON lcc.RID_CUST = lc.RID AND lcc.FLAG = 1 
    <!-- LEFT OUTER JOIN loy.LOY_CHNL lcl ON lcl.RID = lc.RID_SBSC_CHNL AND lcl.FLAG = 1 -->
    LEFT OUTER JOIN loy.LOY_CUST_LOGIN_INF lcli ON lcli.RID_CUST = lc.RID AND lcli.FLAG = 1
    JOIN LOY.LOY_PGM lp ON lp.RID = lm.RID_PGM AND lp.FLAg = 1
    LEFT OUTER JOIN LOY.LOY_CHNL lc2 ON lc2.RID = lm.RID_SBSC_CHNL AND lc2.FLAG = 1
    WHERE lm.RID = #{rid}
  	</select>

  	<select id="seletMbrPrStore" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
  												resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDetailPopResDto">
  	/* LoyMbrMapper.seletMbrPrStore */
    SELECT lc.CHNL_NO AS prStoreCd
        , lc.CHNL_NM AS prStoreNm
    FROM LOY.LOY_CUST_I lci
    LEFT OUTER JOIN LOY.LOY_CHNL lc ON lci.RID_PR_CHNL = lc.RID AND lc.FLAG =1
    WHERE lci.RID_CUST  = (SELECT RID_CUST FROM loy.LOY_MBR WHERE RID = #{rid})
    <!--
        SELECT TOP 1
                 lcl2.CHNL_NO AS prStoreCd
             , lcl2.CHNL_NM AS prStoreNm
         FROM loy.LOY_MBR lm
         LEFT OUTER JOIN loy.LOY_CHNL_MBR lcm ON lcm.RID_MBR = lm.RID  AND lcm.FLAG = 1
         LEFT OUTER JOIN loy.LOY_CHNL lcl2 ON lcm.RID_CHNL = lcl2.RID AND lcl2.FLAG = 1
         WHERE lm.RID = #{rid}
         AND lcm.CHNL_REL_TYPE_CD ='M'
         AND lcm.SEQ_NO = 1
          AND rownum=1
    -->
  	</select>

  	<select id="selectMbrTermsDetailList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
  															 resultType="com.icignal.loyalty.membership.dto.response.LoyAgreTermsResDto">
  	/* LoyMbrMapper.selectMbrTermsDetailList */
  	SELECT lca.AGRE_TYPE_CD 	AS  agreTypeCd
    		, lca.AGRE_YN 				AS agreYn
    		, ltv.VER 						AS ver
    		, lca.RID 						AS rid
    		,${strColumn}
    FROM loy.LOY_MBR lm
    LEFT OUTER JOIN loy.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
    LEFT OUTER JOIN loy.LOY_CUST_AGRE lca ON lca.RID_CUST = lc.RID AND lca.FLAG = 1
    LEFT OUTER JOIN loy.LOY_TERMS_VER ltv ON ltv.RID = lca.RID_TERMS_VER AND ltv.FLAG = 1
    WHERE lm.RID = #{rid}
    <!-- AND ltv.REQUIRED_YN = 'N' -->
  	</select>

  	<select id="selectCorpMbrListPop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									    					resultType="com.icignal.common.base.dto.response.LoyMbrListPopResDto">
	/* LoyMbrMapper.selectCorpMbrListPop */
	SELECT lmm.RID 					AS rid
			 , lmm.MBR_NO 			AS mbrNo
			 , lc.CUST_NM	 			AS custNm
			 , lcc.BIZR_NO 				AS bizrNo
			 , lc.HHP	     				AS hhp
			 , lmm.MBR_STAT_CD 	AS mbrStatCd
			 , lmm.MBR_TYPE_CD 	AS mbrTypeCd
			 , ${strColumn}
	FROM loy.LOY_MBR lmm
	JOIN loy.LOY_CUST lc ON lc.RID = lmm.RID_CUST AND lc.FLAG = 1
	JOIN LOY.LOY_CUST_C lcc ON lc.RID = lcc.RID_CUST AND lcc.flag=1
	LEFT OUTER JOIN LOY.LOY_PGM lp ON lmm.RID_PGM = lp.RID AND lp.FLAG = 1
	<!-- JOIN LOY.LOY_PGM lp ON lmm.RID_PGM = lp.RID AND lp.FLAG = 1 -->
	LEFT OUTER JOIN LOY.LOY_CHNL lcl ON lmm.RID_SBSC_CHNL = lcl.RID AND lc.FLAG = 1
	where lmm.FLAG  = 1
	AND lmm.MBR_STAT_CD = 'A'
	AND ${strCondWhere}
	AND ${strWhere}
	order by ${strOrderby}
		${strEndPaging}
	</select>

	<select id="selectCorpBranchListPop" parameterType="com.icignal.loyalty.customer.dto.request.LoyCustBranchReqDto"
														resultType="com.icignal.loyalty.customer.dto.response.LoyCustBranchResDto">
	/* LoyMbrMapper.selectCorpBranchListPop */
	SELECT
			lmcb.RID           	AS rid,
			lmcb.BR_NO      	AS brNo,
			lmcb.BR_NM      	AS brNm,
			lc.CHNL_NO       	AS chnlNo,
			lc.CHNL_NM 			AS chnlNm,
			lmcb.CHARGER   	AS charger,
			lmcb.TEL_NO  		AS telNo,
			CONVERT(VARCHAR,lmcb.CREATE_DATE,23) 	  AS createDate,
			${strColumn}
	FROM LOY.LOY_MBR_C_BR lmcb
	INNER JOIN LOY.LOY_CHNL lc ON lmcb.RID_CHNL = lc.RID AND lc.FLAG = 1
	WHERE  ${strCondWhere}
	AND ${strWhere}
	AND lmcb.FLAG  = 1
	AND lmcb.RID_MBR_C = #{ridMbrC}
	ORDER BY ${strOrderby}
				${strEndPaging}
	</select>

	<update id="withdrawMbr" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" statementType="CALLABLE">
	/* LoyMbrMapper.withdrawMbr */
	
	<!--<selectKey keyProperty="secsnReqDt" resultType="java.lang.String" order="BEFORE">
		/* LoyMbrMapper.withdrawMbr#selectKey */
		SELECT CONVERT(VARCHAR,GETDATE(),'YYYYMMDDHH24MISS') AS secsnReqDt
	</selectKey>-->
			
	EXEC LOY.PKG_LOY_MBR_SP_MBR_SECSN
		#{commitYn},
        COM.GETNEWID('1'),
      	#{modifyBy},
	    #{pgmNo},
	    'CH0000001',
	    #{userId},
        SELECT CONVERT(CHAR(8),GETDATE(),112)+REPLACE(CONVERT(CHAR(8),GETDATE(),108),':',''),
	    #{secsnResnCd},
	    #{secsnResnEtc},
	    '01',
	    #{pRst,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	    #{pRstCd,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	    #{pRstMsg,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
  	</update>

    <select id="checkCardNumber" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCCardResDto">
	/* LoyMbrMapper.checkCardNumber */
    <![CDATA[
        SELECT
            PKG_LOY_MBR_CARD.CHK_REGABLE_MBR_CARD(
                 #{mbrNo}
                ,#{cardNo}
            ) AS rst
         FROM DUAL
    ]]>
    </select>

    <select id="selectMbrCouponHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                        resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCouponListResDto">
	/* LoyMbrMapper.selectMbrCouponHistList */
	SELECT
		 lcmh.CPN_STATE_CD 											AS cpnStateCd		-- 쿠폰 상태
		,lcmh.CPN_TXN_STATE_CD										AS cpnTxnStateCd	-- 쿠폰 상세 상태
		,CONVERT(VARCHAR, lcmh.CPN_OCCUR_DT,120) 		AS cpnOccurDt		-- 쿠폰 발생일시
		,lc1.CHNL_NO												AS cpnUseChnlNo		-- 사용 채널 번호
		,lc1.CHNL_NM												AS cpnUseChnlNm		-- 사용 채널명
		,lc2.CHNL_NO												AS issChnlNo		--
		,lc2.CHNL_NM												AS issChnlNm		--
		,lcm.RCPT_NO												AS rcptNo			-- 영수증 번호
		,lcm.ACRL_CNCL_NO											AS acrlCnclNo		-- 적립 취소 번호
		,lcm.USE_CNCL_NO											AS useCnclNo		-- 사용 취소 번호
		,${strColumn}
	FROM loy.LOY_CPN_TXN lcmh
	JOIN loy.LOY_CPN_MBR lcm ON lcmh.RID_CPN_MBR = lcm.rid AND lcm.FLAG = 1
	LEFT OUTER JOIN loy.LOY_CHNL lc1 ON lcmh.RID_USED_CHNL = lc1.rid AND lc1.FLAG = 1
	LEFT OUTER JOIN loy.LOY_CHNL lc2 ON lcmh.RID_ISS_CHNL  = lc2.rid AND lc2.FLAG = 1
	<!-- LEFT OUTER JOIN com.COMM_CODE cc1 ON lcmh.CPN_STATE_CD 		= cc1.CODE_NAME AND cc1.GROUP_CODE = 'LOY_CPN_STAT_CD' 		AND cc1.country =  #{country} AND cc1.flag = 1 AND cc1.lang = #{lang}
	LEFT OUTER JOIN com.COMM_CODE cc2 ON lcmh.CPN_TXN_STATE_CD 	= cc2.CODE_NAME AND cc2.GROUP_CODE = 'LOY_CPN_TXN_STAT_CD' 	AND cc2.country =  #{country} AND cc2.flag = 1 AND cc2.lang = #{lang} -->
	WHERE lcm.rid = #{rid}
	AND ${strCondWhere}
	AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>

	<select id="checkUserId" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
	 						resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCCardResDto">
	/* LoyMbrMapper.checkUserId */
    <![CDATA[
        SELECT
            PKG_LOY_MBR.CHK_USER_ID(
                 #{loginTypeCd}
                ,#{userId}
            ) AS rst
         FROM DUAL
    ]]>
    </select>

	<select id="checkRcmmdNo" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
	 												resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCCardResDto">
	/* LoyMbrMapper.checkRcmmdNo */
    <![CDATA[
        SELECT
            PKG_LOY_MBR.CHK_RCMMD_NO(
                 #{rcmmdNo}
            ) AS rst
         FROM DUAL
    ]]>
    </select>

	<select id="updateMbrDetailPop" parameterType="java.util.Map" statementType="CALLABLE">
     /* LoyMbrMapper.updateMbrDetailPop */
    	{ CALL LOY.PKG_LOY_MBR.SP_MBR_EDIT (
    		#{commitYn},
           	#{empId},
           	#{pgmNo},
           	'CH0000001',
           	#{mbrNo},
    		#{tCustTbl, javaType=Object, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustTypeHandler},
    		#{tCustAgreTbl, javaType=Object, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustAgreTypeHandler},
    		#{tCustAddTbl, javaType=java.lang.String, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustAddTypeHandler},
			#{Rst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	      	#{RstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	      	#{RstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
    	) }
  	</select>
  	
    <select id="updateCorpMbrDetailPop" parameterType="java.util.Map" statementType="CALLABLE">
    /* LoyMbrMapper.updateCorpMbrDetailPop */
    	{ CALL LOY.PKG_LOY_MBR.SP_MBR_EDIT (
    		#{commitYn},
           	#{empId},
           	#{pgmNo},
           	'CH0000001',
           	#{mbrNo},
    		#{tCustTbl, javaType=Object, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustTypeHandler},
    		#{tCustAgreTbl, javaType=Object, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustAgreTypeHandler},
    		#{tCustAddTbl, javaType=java.lang.String, jdbcType=ARRAY, mode=IN, typeHandler=com.icignal.loyalty.membership.typehandler.LoyCustAddTypeHandler},
			#{Rst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	      	#{RstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
	      	#{RstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
    	) }
  	</select>

	<select id="selectCustSegmentHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
													 resultType="com.icignal.loyalty.membership.dto.response.LoyMbrSegmentHistListResDto">
	/* LoyMbrMapper.selectCustSegmentHistList */
    SELECT h.ID                										 						AS id
        , CONVERT(VARCHAR,h.CREATE_DATE, 120) 						AS createDate
        , h.CREATE_BY             								 						AS createByName
        , c.CSEG_NM 												 					AS csegNm
        , s.CSEG_STAGE_NM 									 						AS csegStageNm
        , h.CSEG_TYPE_CD																AS csegTypeCd
        , ${strColumn}
    FROM LOY.LOY_CSEG_HIST h
    JOIN LOY.LOY_MBR lm ON h.RID_MBR= lm.RID AND lm.FLAG = 1
    LEFT OUTER JOIN anl.anl_cseg_mst c ON c.ID = h.CSEG_ID AND c.FLAG = 1
    LEFT OUTER JOIN anl.ANL_CSEG_STAGE s ON s.id=h.CSEG_STAGE_ID AND s.FLAG =1
    WHERE ${strWhere}
    AND h.RID_MBR = #{rid}
    AND h.FLAG = 1
    ORDER BY ${strOrderby}
        ${strEndPaging}
	</select>

	<select id="selectCustItemConfList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrChangeHistListReqDto"
                                        resultType="com.icignal.loyalty.loyprogram.dto.response.LoyCustItemConfListResDto">
	/* LoyProgramMapper.selectCustItemConfList */
	SELECT lcic.CUST_TYPE_CD AS custTypeCd
			, lcic.COLUMN_NM AS fieldNm
			, lcic.FIELD_DESC AS fieldDesc
			, lcic.REQUIRED_YN AS requiredYn
			, lcic.ENCODE_YN AS encodeYn
			, lcic.FIELD_VAL_CD AS fieldValCdNm
			, lcic.GRP_CD_NM AS grpCdNm
			, CONVERT(VARCHAR,lcic.CREATE_DATE, 120) AS createDate
			, lcic.RID AS rid
			, ${strColumn}
	FROM loy.LOY_CUST_ITEM_CONF lcic
	WHERE lcic.FLAG = 1
	AND lcic.RID_PGM = #{ridPgm}
	<if test="custTypeCd != null and custTypeCd != ''">
	AND lcic.CUST_TYPE_CD = #{custTypeCd}
	</if>
	</select>

	<select id="selectRidPgm" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrChangeHistListReqDto" statementType="CALLABLE"
													resultType="java.lang.String">
		/* LoyMbrMapper.selectRidPgm */
	 	<!-- { #{ridPgm,jdbcType=VARCHAR, mode=OUT} = call loy.PKG_LOY_FN.GET_RID_REP_PGM(
                #{pgmNo,javaType=java.lang.String,jdbcType=VARCHAR,mode=IN}
               )
        } -->
		DECLARE	@RST_VAL VARCHAR(MAX)
		EXEC	@RST_VAL = LOY.PKG_LOY_FN_GET_RID_REP_PGM #{pgmNo}
		SELECT	@RST_VAL as ridPgm      
	</select>

	<select id="selectAchngMarkName" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrChangeHistListReqDto"
                                    resultType="java.lang.String">
		/* LoyMbrMapper.selectAchngMarkName */
	SELECT mark_name
	FROM com.comm_code
	WHERE flag = 1
	AND   group_code = #{grpCode}
	AND   code_name  = #{achngData}
	</select>

    <select id="selectBchngMarkName" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrChangeHistListReqDto"
                                    resultType="java.lang.String">
		/* LoyMbrMapper.selectBchngMarkName */
	SELECT mark_name
	FROM com.comm_code
	WHERE flag = 1
	AND   group_code = #{grpCode}
	AND   code_name  = #{bchngData}
	</select>

	<select id="selectMbrCpnCnt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
												resultType="java.lang.Integer">
	/* LoyMbrMapper.selectMbrCpnCnt */
    SELECT ISNULL(SUM(CASE
                WHEN PUBL_EA_CD != '0041001' AND  (USE_DT != '' OR USE_DT IS NOT NULL)  THEN 0 -- 사용완료
                WHEN USE_STOP_DT <![CDATA[<]]> GETDATE() AND  PUBL_EA_CD != '0041001' AND (USE_DT = '' OR USE_DT IS NULL) THEN 0  --일반쿠폰 기간만료
                WHEN USE_STOP_DT <![CDATA[<]]> GETDATE() AND  PUBL_EA_CD = '0041001' THEN 0 --무제한쿠폰 기간만료
                ELSE 1
                END ),0) AS cponStCd
    FROM LOY.LOY_DK_CPN_HIST
    WHERE RID_CUST  = (SELECT RID_CUST FROM LOY.LOY_MBR lm WHERE RID = #{rid})
	</select>

    <!--
    /* LoyMbrMapper.selectMbrCpnCnt */
	SELECT com.nvl(sum(CASE WHEN lc.USABLE_MAX_CNT != 0 THEN lc.USABLE_MAX_CNT - lcm.CPN_AVL_CNT ELSE 1 END),0)
   	  FROM LOY.LOY_CPN_MBR lcm
      JOIN LOY.LOY_OFR lo ON lcm.RID_OFR = lo.RID
      JOIN LOY.LOY_CPN lc ON lcm.RID_CPN_M = lc.RID
     WHERE lcm.FLAG = 1
      AND CPN_STATE_CD='A'
    AND  GETDATE() <![CDATA[>=]]>com.TO_DATE(CPN_STD_DT,'YYYYMMDD')
    AND  GETDATE() <![CDATA[<=]]>com.TO_DATE(CPN_END_DT,'YYYYMMDD')
    AND RID_MBR = #{rid}
    -->

	<select id="selectMbrTicketCnt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
												resultType="java.lang.Integer">
	/* LoyMbrMapper.selectMbrTicketCnt */
	SELECT ISNULL(count(RID), 0)
    FROM LOY.LOY_EVT_TCKT_MBR
    WHERE FLAG = 1
    AND RID_MBR = #{rid}
    AND USE_YN = 'N'
    AND VALID_START_DT <![CDATA[<=]]> com.TRUNC_DATE(GETDATE())
    AND VALID_END_DT <![CDATA[>=]]> com.TRUNC_DATE(GETDATE())
	</select>

	<select id="selectOneMbrEvt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
												resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDetailNewPageResDto">
	/* LoyMbrMapper.selectOneMbrEvt */
	SELECT EVT_NM 				AS evtNm
		 	, APPLCT_DT 	AS evtDt
	FROM (
			SELECT  lem.EVT_NM
					,  CONVERT(VARCHAR,lea.APPLCT_DT, 23) AS APPLCT_DT
					, ROW_NUMBER() OVER (ORDER BY lea.APPLCT_DT ASC ) AS RN
			FROM loy.LOY_EVT_APPLCT lea
			LEFT OUTER JOIN LOY.LOY_EVT_MST lem ON lem.RID = lea.RID_EVT AND lem.FLAG = 1
			WHERE lea.FLAG = 1
			AND lea.RID_MBR = #{rid}
		) A
	WHERE A.RN = 1
	</select>

	<select id="selectMbrTierHistListNew" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTiersListResDto">
	/* LoyMbrMapper.selectMbrTierHistListNew */
    SELECT  ltg.TIERS_GRP_NM							        AS tierGrpNm
            , lt.TIER_NM										AS tierNm
            , lt.TIER_TYPE_CD									AS tierTypeCd
            , ltmh.TIER_CHG_TYPE_CD								AS tierChgTypeCd
            , ltmh.TIER_CHG_RST_CD								AS tierChgRstCd
            , ltmh.TIER_MNL_REASON_CD							AS tierMnlReasonCd
            <!-- , CONVERT(VARCHAR,ltmh.TIER_CALC_DATE,23)		    AS tierCalcDate
            , CONVERT(VARCHAR,ltmh.VALID_START_DT,23)		    AS vaildStartDt
            , CONVERT(VARCHAR,ltmh.VALID_END_DT,23)			AS validEndDt
            , ltmh.VALID_HIST_YN								AS validHistYn -->
            , em.name											AS createBy
            , CONVERT(VARCHAR,ltmh.CREATE_DATE,120) AS createDate
            , ltmh.RID											AS rid
            , ltmh.RID_TG										AS tierGrpRid
            , ltmh.RID_TIER									    AS tierRid
            , ltmh.VALID_HIST_YN								AS validHistYn
            , ${strColumn}
    FROM LOY.LOY_TIERS_MBR_HIST ltmh
    JOIN LOY.LOY_MBR lm ON ltmh.RID_MBR = lm.RID AND lm.FLAG = 1
    JOIN LOY.LOY_TIERS lt ON ltmh.RID_TIER = lt.RID AND lt.FLAG = 1
    JOIN LOY.LOY_TIERS_GRP ltg ON ltmh.RID_TG = ltg.RID AND ltg.FLAG = 1
    LEFT OUTER JOIN COM.CRM_USER cu ON cu.RID = ltmh.CREATE_BY AND cu.FLAG = 1
    LEFT OUTER JOIN COM.EMPLOYEE em ON cu.ID_EMPLOYEE = em.ID AND em.FLAG = 1
    WHERE ltmh.RID_MBR = #{rid}
    AND   ltmh.RID_TG  = #{tierGrpRid}
    AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>

	<select id="selectTierDetailPop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTiersDetailResDto">
	/* LoyMbrMapper.selectTierDetailPop */
    SELECT ltmh.TIER_MNL_REASON_DESC			AS tierMnlReasonDesc
            , em.name							AS reqNm
            , CONVERT(VARCHAR,cea.CREATE_DATE,120)					AS createDate
            , em2.name							AS resNm
            , CONVERT(VARCHAR,cea.LAST_APV_DD,120) AS lastApvDd
    FROM LOY.LOY_TIERS_MBR_HIST ltmh
    LEFT OUTER JOIN com.com_elec_aprv cea ON ltmh.RID = cea.ATRIB_10 AND cea.FLAG = 1
    LEFT OUTER JOIN com.EMPLOYEE em ON cea.ELEC_APRV_RQTR_ID = em.ID AND em.FLAG = 1
    LEFT OUTER JOIN com.EMPLOYEE em2 ON cea.LAST_APVR_ID = em2.ID AND em2.FLAG = 1
    WHERE ltmh.rid = #{rid}
	</select>

	<select id="selectTierApprovalPop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="com.icignal.loyalty.membership.dto.response.LoyMbrApprovalDetailResDto">
	/* LoyMbrMapper.selectTierApprovalPop */
	SELECT  ltmh.TIER_MNL_REASON_DESC			AS tierMnlReasonDesc
    FROM COM.COM_ELEC_APRV cea
    WHERE cea.ATRIB_1 = #{rid}
	</select>

	<insert id="insertTierHist" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrTiersDetailReqDto">
    /* LoyMbrMapper.insertTierHist */
    INSERT INTO LOY.LOY_TIERS_MBR_HIST (
                                         RID
                                         , CREATE_BY
                                         , MODIFY_BY
                                         , CREATE_DATE
                                         , MODIFY_DATE
                                         , FLAG
                                         , RID_MBR
                                         , RID_TG
                                         , RID_TIER
                                         , VALID_START_DT
                                         , VALID_END_DT
                                         , VALID_HIST_YN
                                         , TIER_CHG_TYPE_CD
                                         , TIER_CALC_DATE
                                         , TIER_CALC_TYPE_CD
                                         , TIER_CHG_RST_CD
                                         , TIER_MNL_REASON_CD
                                         , TIER_MNL_REASON_DESC
                                         , TIER_CHG_STEP
                                         , WORK_DT
    ) VALUES (
                                            #{rid},
                                            #{createBy},
                                            #{modifyBy},
                                            GETDATE(),
                                            GETDATE(),
                                            1,
                                            #{mbrRid},
                                            #{tierGrpRid},
                                            #{tierRid},
                                            GETDATE(),
                                            com.TO_DATE(#{upKeepMm},'YYYY-MM-DD'),
                                            <!-- com.TO_DATE(CONVERT(VARCHAR,EOMONTH(ADD_MONTHS(GETDATE(),+com.nvl(${upKeepMm},0))))), -->
                                            'Y',
                                            'R5',
                                            GETDATE(),
                                            'M',
                                            #{tierRstCd},
                                            #{tierMnlReasonCd},
                                            #{tierMnlReasonDesc},
                                            0,
                                            CONVERT(CHAR(8), DATEADD(DAY, 1, GETDATE()) , 112)
    )
    </insert>

    <update id="updateMbrTier" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrTiersDetailReqDto">
		 /* LoyMbrMapper.updateMbrTier */
		UPDATE LOY.LOY_MBR
		SET RID_TIER = #{tierRid},
		    TIER_DT	 = CONVERT(VARCHAR,GETDATE(),'YYYYMMDD')
		WHERE RID = #{mbrRid}
	</update>

	<update id="updateMbrLiftTier" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrTiersDetailReqDto">
		 /* LOYMbr.updateMbrLiftTier */
		UPDATE LOY.LOY_MBR
		SET RID_TIER_LIFTTIME = #{tierRid},
		    TIER_LIFTTIME_DT	 = CONVERT(VARCHAR,GETDATE(),'YYYYMMDD')
		WHERE RID = #{mbrRid}
	</update>

	<select id="selectTierMgtPlcy" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="java.lang.Integer">
	/* LoyMbrMapper.selectTierMgtPlcy */
	SELECT count(1) 
    FROM LOY.LOY_OPR_PLCY lop 
    JOIN LOY.LOY_OPR_PLCY_DTL lopd ON lop.RID = lopd.RID_OPR AND lopd.FLAG = 1
    WHERE lop.CTG_1_CD ='D'
    AND   lop.CTG_2_CD ='D1'
    AND   lop.PLCY_CD ='D11'
    AND   lopd.ATTR_CD ='12'
    AND   lop.RID_PGM = #{pgmRid}
	</select>

	<select id="selectTierMgtPlcyYn" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
									   resultType="java.lang.String">
	/* LoyMbrMapper.selectTierMgtPlcyYn */
	SELECT lopd.DATA_VAL 
    FROM LOY.LOY_OPR_PLCY lop 
    JOIN LOY.LOY_OPR_PLCY_DTL lopd ON lop.RID = lopd.RID_OPR AND lopd.FLAG = 1
    WHERE lop.CTG_1_CD ='D'
    AND   lop.CTG_2_CD ='D1'
    AND   lop.PLCY_CD ='D11'
    AND   lopd.ATTR_CD ='12'
    AND   lop.RID_PGM = #{pgmRid}
	</select>

	<select id="purAcrlPointProc" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" statementType="CALLABLE">
    /* LoyMbrMaper.purAcrlPointProc */
        { CALL LOY.SP_CALL_BENF(
                #{pgmRid},
                #{purHeadRid},
                #{value}
               )
        }
	</select>

	<select id="searchMbrGiftPntTgtMbr" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
												resultType="com.icignal.common.base.dto.response.LoyMbrListPopResDto">
	/* LoyMbrMaper.searchMbrGiftPntTgtMbr */
	SELECT lmm.MBR_NO AS mbrNo
			, lc.CUST_NM AS custNm
			, lc.HHP AS unMaskHhp
			, lc.EMAIL AS unMaskEmail
			, lc.CUST_NM AS unMaskCustNm
			, lc.HHP AS hhp
			, lc.EMAIL AS email
			, lmm.MBR_TYPE_CD AS mbrTypeCd
			, lmm.MBR_STAT_CD AS mbrStatCd
			<!-- , CONVERT(VARCHAR,lc.SBSC_DATE, 23) AS sbscDate
			, lc.RID_SBSC_CHNL AS ridSbscChnl
			, lchnl.CHNL_NM AS chnlNm -->
			, CONVERT(VARCHAR,lmm.CREATE_DATE, 23) AS createDate
			, lmm.RID AS rid
			, lc.RID	AS custRid
			, ${strColumn}
	FROM loy.LOY_MBR lmm
	JOIN loy.LOY_CUST lc ON lmm.RID_CUST = lc.RID AND lc.FLAG = 1
	<!-- LEFT OUTER JOIN loy.LOY_CHNL lchnl ON lc.RID_SBSC_CHNL = lchnl.RID AND lchnl.FLAG = 1 -->
	WHERE ${strWhere}
		AND ${strCondWhere}
		AND lmm.FLAG = 1
		<if test="ridPgm != null and ridPgm != ''">
		AND lmm.RID_PGM = #{ridPgm}
		</if>
		AND NOT lmm.RID = #{rid}
	ORDER BY ${strOrderby}
		  			${strEndPaging}
	</select>

	<select id="setMbrPointGiftProc" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" statementType="CALLABLE">
     /* LoyMbrMaper.setMbrPointGiftProc */
        { call loy.PKG_LOY_PNT.SP_PNT_GIFT(
                		#{commitYn},
                		#{chnlNo},
			           	#{mbrNo},
			           	#{tgtMbrNo},
			    		#{pntPwd},
			    		#{giftPoint},
			    		#{trDt},
			    		#{feeLevyCd},
			    		#{countFee},
			    		#{feeRcptNo},
			    		#{giftComment},
						#{pRst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
				      	#{pRstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
				      	#{pRstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
            )
        }
    </select>

	<select id="selectGiftPointHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
												resultType="com.icignal.loyalty.membership.dto.response.LoyMbrPointHistListResDto">
	/* LoyMbrMapper.selectGiftPointHistList */
	SELECT A.txnUniqNo 		AS txnUniqNo
			, CONVERT(VARCHAR,A.txnDate, 23)			AS txnDate
			, A.custNm			AS custNm
			, A.tgtCustNm		AS tgtCustNm
			, A.pntAmt			AS pntAmt
			, A.feeAmt				AS feeAmt
			, A.feeLevyCd		AS feeLevyCd
			, A.feeRcptNo		AS feeRcptNo
			, A.giftComment 	AS giftComment
			, A.rid					AS rid
			, ${strColumn}
	FROM(
				SELECT lpt.TXN_UNIQ_NO 	AS txnUniqNo
						, lpgm.TXN_DATE 			AS txnDate
						, lc1.CUST_NM 				AS custNm
						, lc2.CUST_NM 				AS tgtCustNm
						, lpgm.PNT_AMT 			AS pntAmt
						, lpgm.FEE_AMT 			AS feeAmt
						, lpgm.FEE_LEVY_CD 	AS feeLevyCd
						, lpgm.FEE_RCPT_NO 	AS feeRcptNo
						, lpgm.GIFT_COMMENT AS giftComment
						, lpgm.RID 					AS rid
				FROM loy.LOY_PNT_GIFT_MBR lpgm
				JOIN loy.LOY_PNT_TXN lpt ON lpgm.RID_TXN_GIFT = lpt.RID AND lpt.FLAG = 1
				LEFT OUTER JOIN loy.LOY_MBR lm1 ON lm1.RID = lpgm.RID_GIFT_MBR AND lm1.FLAG = 1
				LEFT OUTER JOIN loy.LOY_CUST lc1 ON lc1.rid = lm1.RID_CUST AND lc1.FLAG = 1
				LEFT OUTER JOIN loy.LOY_MBR lm2 ON lm2.RID = lpgm.RID_GIFT_TGT_MBR AND lm2.FLAG = 1
				LEFT OUTER JOIN loy.LOY_CUST lc2 ON lc2.rid = lm2.RID_CUST AND lc2.FLAG = 1
				WHERE lpgm.FLAG = 1
				AND lpt.RID_MBR = #{rid}

				UNION ALL

				SELECT lpt.TXN_UNIQ_NO 	AS txnUniqNo
						, lpgm.TXN_DATE 			AS txnDate
						, lc1.CUST_NM 				AS custNm
						, lc2.CUST_NM 				AS tgtCustNm
						, lpgm.PNT_AMT 			AS pntAmt
						, lpgm.FEE_AMT 			AS feeAmt
						, lpgm.FEE_LEVY_CD 	AS feeLevyCd
						, lpgm.FEE_RCPT_NO 	AS feeRcptNo
						, lpgm.GIFT_COMMENT AS giftComment
						, lpgm.RID 					AS rid
				FROM loy.LOY_PNT_GIFT_MBR lpgm
				JOIN loy.LOY_PNT_TXN lpt ON lpgm.RID_TXN_GIFT_TGT = lpt.RID AND lpt.FLAG = 1
				LEFT OUTER JOIN loy.LOY_MBR lm1 ON lm1.RID = lpgm.RID_GIFT_MBR AND lm1.FLAG = 1
				LEFT OUTER JOIN loy.LOY_CUST lc1 ON lc1.rid = lm1.RID_CUST AND lc1.FLAG = 1
				LEFT OUTER JOIN loy.LOY_MBR lm2 ON lm2.RID = lpgm.RID_GIFT_TGT_MBR AND lm2.FLAG = 1
				LEFT OUTER JOIN loy.LOY_CUST lc2 ON lc2.rid = lm2.RID_CUST AND lc2.FLAG = 1
				WHERE lpgm.FLAG = 1
				AND lpt.RID_MBR = #{rid}
			) A
	WHERE ${strWhere}
	ORDER BY ${strOrderby}
		  			${strEndPaging}
	</select>

	<select id="selectMbrPgmChnlPop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.common.base.dto.response.LoyChnlListResDto">
	/* LoyMbrMapper.selectMbrPgmChnlPop */
	SELECT lc1.CHNL_NM 		AS chnlNm
	            , lc1.chnl_no      AS chnlNo
	            , lc2.CHNL_NM	AS parChnlNm
                , lc1.rid          AS rid
                , lc1.CHNL_TYPE_CD AS chnlTypeCd
                , lc1.stat_cd AS chnlStatCd
                , lcp.pnt_acrl_yn AS acrlPsblYn
                , ${strColumn}
    FROM LOY.LOY_CHNl lc1
    JOIN LOY.LOY_CHNL_PGM lcp ON lc1.RID = lcp.RID_CHNL AND lcp.FLAG = 1
    JOIN LOY.LOY_PGM lp ON lcp.RID_PGM = lp.RID AND lp.FLAG = 1
    LEFT OUTER JOIN LOY.LOY_CHNL lc2 ON lc1.RID_PAR_CHNL = lc2.RID AND lc2.FLAG = 1
	WHERE ${strWhere}
	AND lc1.FLAG = 1
	AND lp.RID = #{pgmRid}
	ORDER BY ${strOrderby}
	  			${strEndPaging}
	</select>

	<select id="selectMbrUsePurMax" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
														resultType="com.icignal.loyalty.membership.dto.response.LoyMbrPointAuthResDto">
	/* LoyMbrMapper.selectMbrUsePurMax */
	SELECT USE_1DAY_MAX AS useDayMax
		  			, USE_PER_MAX AS usePerMax
		  			, USE_HUDL AS useHudl
		  			, USE_UNIT AS useUnit
		  			, (SELECT SUM(lpgm.PNT_AMT) FROM loy.LOY_PNT_GIFT_MBR lpgm
						JOIN loy.LOY_PNT_TXN lpt ON lpgm.RID_TXN_GIFT = lpt.RID AND lpt.FLAG = 1
						AND lpt.RID_MBR = #{rid} AND lpgm.CREATE_DATE <![CDATA[>=]]> GETDATE() -1) AS usePoint
					, GIFT_FEE_CNT_AMT AS giftFeeCntAmt
					, GIF_FEE_MILEAGE_AMT AS giftFeeMileageAmt
  	FROM loy.LOY_PNT_PLCY
  	WHERE RID_PGM = #{pgmRid}
  	AND FLAG = 1
	</select>

	<select id="selectPgmMgtPlcy" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
    												resultType="java.lang.Integer">
    /* LoyProgramMapper.selectPgmMgtPlcy */
    SELECT COUNT(*)
    FROM loy.LOY_MGT_PLCY lmp
    JOIN loy.LOY_PGM lp ON lmp.RID_PGM = lp.RID AND lp.FLAG = 1
    WHERE lmp.FLAG = 1
    AND lp.PGM_NO = #{pgmNo}
    AND lmp.CATE_SUB_CD = #{cateSubCd}
    </select>

    <select id="chkPntUsable" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
	 												resultType="com.icignal.loyalty.membership.dto.response.LoyWithdrawMbrCallResDto">
	 /* LoyMbrMapper.chkPntUsable */
        <![CDATA[
            SELECT
                LOY.PKG_LOY_FN.CHK_PNT_USABLE(
                     #{rid},
                     #{giftPoint},
                     'Y'
                ) AS pRst
             FROM DUAL
        ]]>
    </select>
    
    <select id="selectMbrIntList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
	 												resultType="com.icignal.loyalty.membership.dto.response.LoyMbrIntListResDto">
	 /* LoyMbrMapper.selectMbrIntList */
    SELECT    lmi.REP_YN	AS repYn
    		, lm.MBR_NO		AS mbrNo
    		, ISNULL(secu.fn_getDecrypt('863859AEA32184842D8372BE3ABBF146345FA4D39920C7E6A503470A0CE8E406@@@!!!FBE2BD72A610E3B0010AEF0587CD62ED803B612387A8F0D62C3B50F8670357DA',
    		  lc.CUST_NM, null), '') 	AS custNm 
    		, em2.name		AS modifyBy
    		, CONVERT(VARCHAR,lmi.MODIFY_DATE,120) AS modifyDate
    		, em.name		AS createBy
    		, CONVERT(VARCHAR,lmi.CREATE_DATE,120) AS createDate
    		, CONVERT(VARCHAR,lm.SBSC_DATE, 120)  AS sbscDate  /* 가입일자 */
    		, CONVERT(VARCHAR,lc.SESCN_DATE,120)  AS sescnDate
  			, lm.MBR_STAT_CD 	 AS mbrStatCd  		 /* 회원상태 */
			, cc.MARK_NAME  	 AS mbrStatCdNm   	/* 회원상태 마크네임 */
			, lm.MBR_TYPE_CD 	 AS mbrTypeCd	 	/* 회원유형(회원상세유형) */
			, cc2.MARK_NAME 	 AS mbrTypeCdNm	 	/* 회원유형(회원상세유형) 마크네임 */
    		, lmi.RID		AS rid
    		, lmi.MBR_INT_CODE AS mbrIntCode
    		, lmi.RID_MBR		AS ridMbr
    		, ${strColumn}
    FROM    LOY.LOY_MBR_INT lmi
    JOIN    LOY.LOY_MBR  lm ON lmi.RID_MBR = lm.RID AND lm.FLAG = 1
    JOIN    LOY.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
    LEFT OUTER JOIN COM.CRM_USER cu ON lmi.CREATE_BY = cu.RID AND cu.FLAG = 1
	LEFT OUTER JOIN COM.EMPLOYEE em ON cu.ID_EMPLOYEE = em.ID AND em.FLAG = 1
	LEFT OUTER JOIN COM.CRM_USER cu2 ON lmi.MODIFY_BY = cu2.RID AND cu.FLAG = 1
	LEFT OUTER JOIN COM.EMPLOYEE em2 ON cu2.ID_EMPLOYEE = em2.ID AND em.FLAG = 1
	LEFT OUTER JOIN COM.COMM_CODE cc ON cc.CODE_NAME = lm.MBR_STAT_CD AND cc.group_code = 'LOY_MBR_STAT_CD' AND cc.flag = 1
	LEFT OUTER JOIN COM.COMM_CODE cc2 ON cc2.CODE_NAME = lm.MBR_TYPE_CD AND cc2.group_code = 'LOY_MBR_TYPE_CD' AND cc2.flag = 1
    WHERE  lmi.flag  = 1
    AND    lmi.MBR_INT_CODE = #{mbrIntCd}
    AND ${strCondWhere}
	AND ${strWhere}
	ORDER BY ${strOrderby}
	${strEndPaging}
    </select>
    <!-- , lc.CUST_NM	AS custNm -->
    
    <select id="selectMbrIntCode" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
	 												resultType="java.lang.String">
	 /* LoyMbrMapper.selectMbrIntCode */
    SELECT    lmi.MBR_INT_CODE
    FROM    LOY.LOY_MBR_INT lmi
    WHERE  lmi.flag  = 1
    AND    lmi.RID_MBR = #{rid}
    </select>
    
    <select id="callSaveMbrInt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrIntDetailReqDto" statementType="CALLABLE">
        /* LoyMbrMapper.callSaveMbrInt */
        { call loy.PKG_LOY_MBR.SP_MBR_INT(
                'Y',
                #{modifyBy},
                #{prevMbrRid},
                #{intRidMbr},
                #{p_Rst,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{p_RstCd,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
                #{p_RstMsg,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT} )
        }
    </select>
    
    <select id="selectMbrIntCnt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrIntDetailReqDto" resultType="java.lang.Integer">
        /* LoyMbrMapper.selectMbrIntCnt */
        SELECT   count(*)
    FROM    LOY.LOY_MBR_INT lmi
    WHERE  lmi.flag  = 1
    AND    lmi.MBR_INT_CODE = #{mbrIntCode}
    </select>
    
    <update id="removeMbrInt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrIntDetailReqDto">
    /* LoyMbrMapper.removeMbrInt */
    UPDATE LOY.LOY_MBR_INT
    SET     MODIFY_DATE =GETDATE()
    	  , MODIFY_BY = #{modifyBy}
		  , MBR_INT_CODE = #{ridMbr}
   	WHERE RID = #{rid}
    </update>
    
    <!-- 적립요청 프로시저 실행 -->
	<update id="callProcPointAcrl" parameterType="com.icignal.loyalty.benefit.point.dto.request.LoyPointAcrlRequestDTO" statementType="CALLABLE">
		/* LOYCommon.callProcPointAcrl */
		{
			CALL LOY.SP_POINT_ACRL(
				#{isConTran} 
				, #{pgmNo}
				, #{identiType}
				, #{identiVal}
				, #{encryptKey}
				, #{offerNo}
				, #{offerType}
				, #{ridIntactType}
				, #{ridIntactDate}
				, #{chnlNo}
				, #{posNo}
				, #{pntTxnType}
				, #{pntTxnDtlType}
				<!-- , #{sndDate}
				, #{sndTime} -->
				, #{txnUniqNo}
				, #{txnDate} + #{txnTime}
				<!-- , #{txnTime} -->
				, #{orgnApprDate}
				, #{orgnApprNo}
				, #{pntAmt}
				, #{refNo}
				, #{rcptNo}
				, #{txnAmt}
				, 0
				, #{calcFlag}
				, #{keyFieldType}
				, #{tranDtlTypeDesc}
				, #{modifyBy}
				, ''
				, #{rst, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{rstCd, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{rstMsg, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{applyPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				<!-- , #{usePnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{preAcrlPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{expr1MonthPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{expr3MonthPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalAcrlPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalRdmPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalAcrlCancelPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalRdmCancelPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalExprPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT} -->
				, #{apprNo, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{apprDate, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{apprTime, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
			)
		}
	</update>
	
	<!-- 차감 프로시저 실행 -->
	<update id="callProcPointRdm" parameterType="com.icignal.loyalty.benefit.point.dto.request.LoyPointRdmRequestDTO" statementType="CALLABLE">
		/* LOYCommon.callProcPointRdm */
			EXEC LOY.SP_POINT_RDM
				  #{isConTran} 
				, #{pgmNo}
				, #{identiType}
				, #{identiVal}
				, #{encryptKey}
				, #{offerNo}
				, #{offerType}
				, #{ridIntactType}
				, #{ridIntactDate}
				, #{chnlNo}
				, #{posNo}
				, #{pntTxnType}
				, #{pntTxnDtlType}
				<!-- , #{sndDate}
				, #{sndTime} -->
				, #{txnUniqNo}
				, #{txnDate} + #{txnTime}
				<!-- , #{txnTime} -->
				, #{orgnApprDate}
				, #{orgnApprNo}
				, #{pntAmt}
				, #{refNo}
				, #{rcptNo}
				, #{txnAmt}
				, 0
				, #{calcFlag}
				, #{keyFieldType}
				, #{tranDtlTypeDesc}
				, #{modifyBy}
				, #{rst, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{rstCd, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{rstMsg, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{usePnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				<!-- , #{preAcrlPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{expr1MonthPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{expr3MonthPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalAcrlPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalRdmPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalAcrlCancelPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalRdmCancelPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT}
				, #{totalExprPnt, javaType=java.lang.Integer, jdbcType=INTEGER, mode=OUT} -->
				, #{apprNo, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{apprDate, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
				, #{apprTime, javaType=java.lang.String, jdbcType=VARCHAR, mode=OUT}
	</update>
	
	<select id="clearMaskMbrInt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
	 												resultType="com.icignal.loyalty.membership.dto.response.LoyMbrIntListResDto">
	 /* LoyMbrMapper.clearMaskMbrInt */
    SELECT  lc.CUST_NM	AS unMaskCustNm
    FROM    LOY.LOY_MBR_INT lmi
    JOIN    LOY.LOY_MBR  lm ON lmi.RID_MBR = lm.RID AND lm.FLAG = 1
    JOIN    LOY.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
    WHERE  lmi.flag  = 1
    AND    lmi.RID = #{rid}
    </select>
    
    <select id="blackRuleFmly" parameterType="com.icignal.loyalty.family.dto.request.LoyFamilyListReqDto" statementType="CALLABLE">
    /* LoyMbrMapper.blackRuleFmly */
   { call loy.PKG_LOY_PNT.SP_FRAUD_MBR_INSERT (
           'Y',
           'FMLY_CHG',
           #{rst,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
           #{rstCd,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
           #{rstMsg,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT} )
   }
    </select>
    <select id="executivesViewSelect" parameterType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto"
                                                           resultType="com.icignal.loyalty.membership.dto.response.LoyExecutivesViewResDto">
            /* LoyMbrMapper. executivesViewSelect*/
        SELECT 
                lci.EMP_NO              as empNo
                , lm.MBR_STAT_CD        as mbrStatCd 
                , lci.RID                      as lcirid
                , lc.RID                      as lcrid
        FROM LOY.LOY_MBR lm
            JOIN LOY.LOY_CUST lc ON lc.RID = lm.RID_CUST AND lc.FLAG = 1
            LEFT OUTER JOIN LOY.LOY_CUST_I lci ON lci.RID_CUST = lc.RID AND lci.FLAG = 1
        WHERE 1=1
        AND lm.FLAG = 1
        AND lm.rid = #{mbrRid}
    </select>
        <select id="executivesMemberCheck" parameterType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto"
                                                           resultType="com.icignal.loyalty.membership.dto.response.LoyExecutivesViewResDto">
            /* LoyMbrMapper. executivesMemberCheck*/
        SELECT     lci.EMP_NO              as empNo
        FROM LOY.LOY_MBR lm
            JOIN LOY.LOY_CUST lc ON lc.RID = lm.RID_CUST AND lc.FLAG = 1
            LEFT OUTER JOIN LOY.LOY_CUST_I lci ON lci.RID_CUST = lc.RID AND lci.FLAG = 1
        WHERE 1=1
        AND lm.FLAG = 1
        AND lci.EMP_NO != #{empNo}
        AND lci.EMP_NO = #{empNoNew}
    </select>
    <select id="executivesExistSelect" parameterType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto"
                                                           resultType="com.icignal.loyalty.membership.dto.response.LoyExecutivesViewResDto">
            /* LoyMbrMapper. executivesExistSelect*/
        SELECT llip.EMP_NO AS empNo 
        FROM LOY.LOY_INTER_PERSON llip
        WHERE 1=1
        AND llip.FLAG =1
        AND llip.EMP_NO = #{empNo}
    </select>
    <update id="empNoUpdateExecutives" parameterType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto">
	    /* LoyMbrMapper.empNoUpdateExecutives */
        UPDATE LOY.LOY_CUST_I lci
        SET lci.MODIFY_DATE = GETDATE()
          , lci.MODIFY_BY = #{modifyBy}
          , lci.EMP_NO = #{empNoNew}
          , lci.WRC_NM = #{wrcNm}
          , lci.DEPT_NM = #{deptNm}
        WHERE lci.RID = #{custiRid}
    </update>
     <select id="empNoFindFunctionExecutives" parameterType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto"
                                                                            resultType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto">
        /* LoyMbrMapper.empNoFindFunctionExecutives */
        SELECT LOY.FN_GET_COMPANY_TEAM (#{empNoNew}) AS wrDeData FROM DUAL
    </select >
    <update id="mbrStatCdUpdateExecutives" parameterType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto">
	    /* LoyMbrMapper.mbrStatCdUpdateExecutives */
        UPDATE LOY.LOY_MBR lm
        SET lm.MODIFY_DATE = GETDATE()
          , lm.MODIFY_BY = #{modifyBy}
          , lm.MBR_STAT_CD  = #{mbrStatCd}
        WHERE lm.RID = #{mbrRid}
    </update>
    <update id="custStatCdUpdateExecutives" parameterType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto">
        /* LoyMbrMapper.custStatCdUpdateExecutives */
        UPDATE LOY.LOY_CUST lc
        SET lc.MODIFY_DATE = GETDATE()
          , lc.MODIFY_BY = #{modifyBy}
          , lc.CUST_STAT_CD  = #{custStatCd}
        WHERE lc.RID = #{custRid}
    </update>
    <select id="buyDetailSelect" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                                            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTxnHistListResDto">
    /* LoyMbrMapper.buyDetailSelect */
            SELECT 
                 lp.prod_nm as prodNm 
               , lp.prod_id as prodId
               , lpx.MM_ZZITEMCD as mmZzItemCd
              <if test='srcType != null and srcType != ""'>
                              <if test='srcType == "온라인"'>
                                 ,lopt.PRICE * lopt.EA 	AS sellAmt
                              </if>
                              <if test='srcType == "오프라인"'>
                                 ,llo.TOT_AMT  			AS sellAmt
                              </if>
              </if>
               ,${strColumn}
            FROM loy.LOY_PROD lp 
              LEFT JOIN loy.LOY_PROD_X lpx ON lpx.RID_PROD = lp.RID
              <if test='srcType != null and srcType != ""'>
	              <if test='srcType == "온라인"'>
	                        LEFT JOIN loy.LOY_ORDM_DTL llod ON llod.RID_PROD_MALL = lp.RID AND llod.flag = 1
	              </if>
	              <if test='srcType == "오프라인"'>
	                        LEFT JOIN loy.LOY_ORDP_DTL llod ON llod.RID_PROD = lp.RID AND llod.flag = 1
	              </if>  
	              LEFT JOIN loy.LOY_ORD llo ON llo.RID = llod.RID_ORD  AND llo.flag=1
	              LEFT JOIN loy.LOY_ORDM_OPT lopt ON lopt.RID_ORD = llo.rid AND lopt.flag=1
	           </if>
		    WHERE  1=1
                AND llo.rid = #{rid}
			    AND ${strCondWhere}
			    AND ${strWhere}
		    ORDER BY ${strOrderby}
			    ${strEndPaging}
    </select>
    
     <select id="buyDetailSelectOffLine" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                                            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTxnHistListResDto">
         /* LoyMbrMapper.buyDetailSelectOffLine */
         SELECT  
             T1.LINE_NO                       
         ,  T4.PROD_NM                        AS prodNm                  -- 상품명
         , T1.UPRICE                        AS uPrice              -- 정상가
         , T1.SALE_QTY                      AS saleQty              -- 수량
         , T1.SALE_TOT                      AS saleTot             -- 정상가총액
         , T1.SALE_TOT - T1.DC_AMT - ISNULL(T1.POINT_AMT,0) AS settleAmt   -- 실결제금액
         , T1.DC_AMT + ISNULL(T1.POINT_AMT,0)  AS discntAmt               -- 총할인금액
         , T1.DC_AMT                        AS offlineDC              -- 오프라인할인
         , 0               AS mbrSale      -- 온라인회원할인
         , 0                AS eventSale   -- 온라인이벤트할인
         , 0               AS couponSale   -- 온라인쿠폰할인
         , ISNULL(T1.POINT_AMT,0)               AS pointAmt             -- 사용적립금
         , ISNULL(T1.SALE_POINT,0)               AS salePoint            -- 발생적립금
         , T2.PROD_ID                       AS prodId                -- 자재코드
         , T3.MM_ZZITEMCD                    AS mmZzItemCd         -- 아이템코드 
         , T1.GOODS_CD                       AS goodsCd             -- 상품코드   
         , CASE WHEN T5.ORD_NO = '02' THEN '취소' ELSE '판매'  END  AS cancelYn      -- 취소여부
          ,${strColumn}
       FROM LOY.LOY_ORDP_DTL T1
       LEFT JOIN    loy.LOY_PROD T2 ON T1.RID_PROD = T2.RID
       JOIN LOY.LOY_ORD T5 ON T1.RID_ORD = T5.RID
       LEFT JOIN loy.LOY_PROD_X T3 ON T2.RID = T3.RID_PROD 
       LEFT JOIN LOY.LOY_PROD_POS_X T4 ON T4.PROD_ID  = T1.GOODS_CD    
    WHERE 1=1
      	AND T1.RID_ORD = #{rid}
      	ORDER BY ${strOrderby}
		    ${strEndPaging}      
     </select>
    
  
      <select id="buyDetailSelectOnline" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                                            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTxnHistListResDto">
        /* LoyMbrMapper.buyDetailSelectOnline */
        SELECT T1.GOODS_NAME                                       AS goodNm  -- 상품명
             , T2.PRICE                                            AS uPrice  -- 정상가
             , T2.EA                                               AS saleQty -- 수량
             , T2.PRICE * T2.EA                                    AS saleTot -- 정상가총액
             , com.fn_GREATEST((T2.PRICE * T2.EA) -
                               ((T2.MEMBER_SALE * T2.EA) + T2.MEMBER_SALE_REST + T2.EVENT_SALE + (T2.COUPON_SALE_UNIT * T2.EA) + T2.COUPON_SALE_REST + (T2.EMONEY_SALE_UNIT * T2.EA) +
                                T2.EMONEY_SALE_REST),0)                                                                                                                                   AS settleAmt

             , (T2.MEMBER_SALE * T2.EA) + T2.MEMBER_SALE_REST + T2.EVENT_SALE + (T2.COUPON_SALE_UNIT * T2.EA) + T2.COUPON_SALE_REST + (T2.EMONEY_SALE_UNIT * T2.EA) +
               T2.EMONEY_SALE_REST                                                                                                                                                        AS discntAmt
             , 0                                                   AS offlineDC
             , T2.MEMBER_SALE * EA                                 AS mbrSale
             , T2.EVENT_SALE                                       AS eventSale
             , (T2.COUPON_SALE_UNIT * T2.EA) + T2.COUPON_SALE_REST AS couponSale
             , (T2.EMONEY_SALE_UNIT * T2.EA) + T2.EMONEY_SALE_REST AS pointAmt
             , (T2.RESERVE * EA) + RESERVE_REST                    AS salePoint
             , T3.PROD_ID                                          AS prodId
             , T4.MM_ZZITEMCD                                      AS mmZzItemCd
             , T1.GOODS_CODE                                       AS goodsCd
             /*, T1.SRC_IDX                                          AS srcIdx*/
             , CASE
                   WHEN T5.ORD_NO = '02'
                       THEN '취소'
                   ELSE case
                            when T2.ORD_NO = '02'
                                then '취소'
                            else '판매'
                       end
            END                                                    AS cancelYn
         ,${strColumn}
         FROM LOY.LOY_ORDM_DTL T1
         JOIN LOY.LOY_ORDM_OPT T2 ON T1.RID = T2.RID_ORD_DTL
         JOIN LOY.LOY_ORD T5 ON T1.RID_ORD = T5.RID
         LEFT JOIN    loy.LOY_PROD T3 ON T2.RID_PROD = T3.RID
         LEFT JOIN loy.LOY_PROD_X T4 ON T3.RID = T4.RID_PROD
    WHERE 1=1
      	AND T1.RID_ORD = #{rid}
        GROUP BY T1.GOODS_NAME
               , T2.PRICE
               , T1.GOODS_NAME
               , T2.EA
               , T2.EMONEY_SALE_REST
               , T2.MEMBER_SALE
               , T2.MEMBER_SALE_REST
               , T2.EVENT_SALE
               , T2.COUPON_SALE_UNIT
               , T2.COUPON_SALE_REST
               , T2.EMONEY_SALE_UNIT
               , T2.RESERVE
               , RESERVE_REST
               , T3.PROD_ID
               , T4.MM_ZZITEMCD
               , T1.GOODS_CODE
               /*, T1.SRC_IDX*/
               , T5.ORD_NO
               , T2.ITEM_SEQ
               , T2.ORD_NO
      	ORDER BY ${strOrderby}
		    ${strEndPaging}      
     </select>
    
        <select id="getProdCustList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrProdCustListResDto">
     /* LoyMbrMapper.getProdCustList */
		SELECT 
		    T1.RID                                                               AS rid     
          , T1.PROD_NO                                                       AS prodNo  -- 상품(자재)코드
          , lpx.GOODS_CODE 													 AS goodsCode
          , CASE WHEN T2.PROD_NM  IS NOT NULL THEN T2.PROD_NM 
          		 WHEN lpx.GOODS_NAME IS NOT NULL THEN lpx.GOODS_NAME  END     AS prodNm
          , T4.MM_ZZITEMCD                                                  AS mmZzitemCd -- 아이템코드                            
          , T1.SUBJECT                                                        AS subject  
          , T1.SCORE                                                          AS score    
          , T1.UPLOAD_IMG_PATH                                                    		AS uploadImgPath
          , CONVERT(VARCHAR,T1.R_DATE,120)                	AS regDate
          , CONVERT(VARCHAR,T1.MODIFY_DATE,120)         AS modifyDate
          , T1.REVIEW_TYPE_CD                                             				AS reviewTypeCd -- 상품평구분 (01 : 온라인구매상품, 02: 온라인체험단,  03: 오프라인구매상품)
		     , ${strColumn}
		       FROM LOY.LOY_PROD_REVW T1
           LEFT OUTER JOIN LOY.LOY_PROD T2 ON T1.PROD_NO = T2.PROD_ID  -- 자재코드
  		   LEFT OUTER JOIN LOY.LOY_PROD_MALL lpx ON lpx.GOODS_SEQ = T1.GOODS_SEQ  -- 굿즈코드
           LEFT OUTER JOIN LOY.LOY_MBR T3 ON T1.RID_MBR = T3.RID    
           LEFT OUTER JOIN LOY.LOY_PROD_X T4 ON T2.RID = T4.RID_PROD AND T4.FLAG = 1  -- 아이템코드
		WHERE  1=1
			<choose>
	        <when test="mbrStatCd == '탈퇴'">
		    	AND T1.RID_MBR = #{rid}
		   	</when>
		   	<otherwise>
		   		AND T1.RID_MBR IN ${strMbrIntWhere}
		   	</otherwise>
		   	</choose>
		    AND  ${strWhere}
		    AND T1.FLAG =1
		    ORDER BY ${strOrderby}                                                                                                        
		    ${strEndPaging}
    </select>
        <select id="prodCustListDetail" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrProdCustListReqDto"
                                                           resultType="com.icignal.loyalty.membership.dto.response.LoyMbrProdCustDetailResDto">
            /* LoyMbrMapper. prodCustListDetail*/
			SELECT 
				   T2.prod_id      									   AS prodNo     	/* 자재코드 */ 
			     , T6.CHNL_NM    AS purChnl 		/* 구입채널 */
			     , T2.PROD_ID             	        			AS srcProdId 	/* 아이템코드 */
			     , lpx.GOODS_CODE	AS goodsCode
     			 , T1.CONTENTS      	 	                			AS content 		/* 내용 */
			FROM LOY.LOY_PROD_REVW        T1
	 			LEFT OUTER JOIN LOY.LOY_PROD T2 ON T1.PROD_NO = T2.PROD_ID 
			  	LEFT OUTER JOIN LOY.LOY_PROD_X T3 ON T2.RID = T3.RID_PROD
			  	LEFT OUTER JOIN LOY.LOY_PROD_MALL lpx ON lpx.GOODS_SEQ = T1.GOODS_SEQ  -- 굿즈코드
			  	LEFT OUTER JOIN LOY.LOY_ORDM T4 ON T1.RID_ORD = T4.RID_ORD
         	  	LEFT OUTER JOIN LOY.LOY_ORDP T5 ON T1.RID_ORD =  T5.RID_ORD
         	  	LEFT OUTER JOIN LOY.LOY_CHNL T6 ON T6.RID = T1.RID_EXT_PUR_CHNL
			WHERE 1=1
			AND T1.RID = #{rid} 
			AND T1.FLAG = 1
    </select>
    <!-- 
    /* LoyMbrMapper. prodCustListDetail*/
			SELECT T2.PROD_ID      AS prodId 
			     , T3.MM_ZZITEMCD  AS srcProdId
			     , T1.CONTENT      AS content
			FROM LOY.LOY_PROD_REVW        T1
			  LEFT OUTER JOIN LOY.LOY_PROD    T2 ON T1.RID_PROD = T2.RID 
			  LEFT OUTER JOIN LOY.LOY_PROD_X  T3 ON T2.RID = T3.RID_PROD
			WHERE 1=1
			AND T1.RID = #{rid} 
			AND T1.FLAG = 1
     -->
    
        <select id="getDorMantList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" 
        		resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto">
        /* LoyMbrMapper.getDorMantList */
	    SELECT lm.MBR_NO AS mbrNo 
	    		, lm.MBR_TYPE_CD AS mbrTypeCd 
	    		, lc.CUST_TYPE_CD AS custTypeCd
				, lm.rid AS mbRid 
				, dc.CUST_NM AS custNm 
				, CONVERT(VARCHAR, dc.BIRTH_DATE,23) AS birtHdt 
				, dc.GEN_CD AS genCd 
				, dc.HHP AS hhp 
				, dcli.USER_ID AS userId 
				, CONVERT(VARCHAR,lm.SBSC_DATE,23) AS sbscDate 
				, CONVERT(VARCHAR,lc.DRMNCY_DATE ,23) AS drmncyDate 
                , ${strColumn}
		FROM dor.DOR_CUST dc
		JOIN loy.LOY_CUST lc ON dc.RID_CUST = lc.RID AND lc.FLAG =1 AND lc.CUST_STAT_CD = 'D'
		JOIN loy.LOY_MBR lm ON lc.rid = lm.rid_cust and lm.flag = 1 
		LEFT OUTER JOIN dor.DOR_CUST_LOGIN_INF dcli ON dcli.RID_CUST = dc.RID_CUST AND dcli.FLAG =1 AND dcli.LOGIN_TYPE_CD = 'WEB_ID'
		WHERE 1=1 
			AND dc.FLAG = 1 
        	AND   ${strCondWhere}
        	AND   ${strWhere}
        ORDER BY ${strOrderby}
        ${strEndPaging}
    </select>

    <select id="getBeforeDorMantListTotalCnt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto" fetchSize="1000">
        /* LoyMbrMapper.getBeforeDorMantListTotalCnt */
        SELECT COUNT(*) AS totalCount
        FROM loy.LOY_MBR lm
        JOIN loy.LOY_CUST lc ON lc.rid = lm.RID_CUST AND lc.FLAG = 1
        LEFT JOIN loy.LOY_CUST_LOGIN_INF lcli ON lcli.RID_CUST = lc.RID AND lcli.FLAG = 1 AND lcli.REP_YN = 'Y'
        LEFT JOIN (SELECT RID_CUST
                          , DATEADD(YEAR,CONVERT(INT,MAX(lc2.DRMNCY_CHNG_UNIT)),CONVERT(DATE,MAX(lcs.SVC_DT))) AS drmncy_date
                          , MAX(lcs.SVC_DT)                                                                    AS svc_dt
                   FROM loy.LOY_CUST_SVC_HIST lcs
                   LEFT JOIN loy.LOY_CUST lc2 ON lc2.RID = lcs.RID_CUST AND lc2.FLAG = 1
                   WHERE lcs.FLAG = 1
                   GROUP BY RID_CUST) lcsh ON lcsh.RID_CUST = lc.RID
  		WHERE 1 = 1
        AND lm.FLAG = 1
        AND lm.MBR_STAT_CD NOT IN ('C','D')
        AND ${strCondWhere}
        AND ${strWhere}
    </select>

    <select id="getBeforeDorMantList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                        resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto">
    	/*LoyMbrMapper.getBeforeDorMantList*/
        SELECT lc.rid                                                               AS rid
        	 , lm.rid                                                               AS mbRid
		     , lm.MBR_NO                                                            AS mbrNo
		     , lc.CUST_NM                                                           AS custNm
		     , cc.MARK_NAME 														AS custTypeCdNm2
		     , CONVERT(VARCHAR,lc.BIRTH_DATE,23)                                  AS birtHdt
		     , lc.GEN_CD                                                            AS genCd
		     , lc.HHP                                                               AS hhp
		     , lcli.USER_ID                                                         AS userId
		     , CONVERT(VARCHAR,lm.SBSC_DATE, 23)                                  AS sbscDate
		     , CONVERT(DATE,lcsh.svc_dt)				AS svcDt            /* 최근활동일 */
--              , CONVERT(VARCHAR,CONVERT(DATE,lcsh.drmncy_date), 23)    AS expectDormancyDate     /* 휴면예정일 */
		FROM loy.LOY_MBR lm
        JOIN loy.LOY_CUST lc ON lc.rid = lm.RID_CUST AND lc.FLAG = 1
        LEFT JOIN loy.LOY_CUST_LOGIN_INF lcli ON lcli.RID_CUST = lc.RID AND lcli.FLAG = 1 AND lcli.REP_YN = 'Y'
        LEFT JOIN (SELECT RID_CUST
                          , DATEADD(YEAR,CONVERT(INT,MAX(lc2.DRMNCY_CHNG_UNIT)),CONVERT(DATE,MAX(lcs.SVC_DT))) AS drmncy_date
                          , MAX(lcs.SVC_DT)                                                                    AS svc_dt
                   FROM loy.LOY_CUST_SVC_HIST lcs
                   JOIN loy.LOY_CUST lc2 ON lc2.RID = lcs.RID_CUST AND lc2.FLAG = 1
                   WHERE lcs.FLAG = 1
                   GROUP BY RID_CUST) lcsh ON lcsh.RID_CUST = lc.RID
        LEFT OUTER JOIN COM.COMM_CODE cc ON lc.CUST_TYPE_CD = cc.CODE_NAME AND cc.GROUP_CODE = 'LOY_CUST_TYPE_CD' AND cc.FLAG = 1
        WHERE 1 = 1
		  AND lm.FLAG = 1
		  AND lm.MBR_STAT_CD NOT IN ('C','D')
		  AND ${strCondWhere}
	      AND ${strWhere}
		ORDER BY ${strOrderby}
        ${strEndPaging}
    </select>     
    
        <select id="getexecutivesList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto">
          /* LoyMbrMapper.getexecutivesList */
        SELECT
                lm.rid                  as mbRid
                ,lc.RID                  AS rid
                ,lp.PGM_NM       AS pgmNm
                ,lm.MBR_NO       AS mbrNo
                ,llip.TEAM_NM   AS teamNm
                ,lci.EMP_NO     AS empNo
                ,llip.STATUS_CD AS statusCd
                ,lc.CUST_NM     AS custNm
                ,lc.HHP         AS hhp
                ,lc.GEN_CD      AS genCd
                ,lm.MBR_STAT_CD AS mbrStatCd
                ,CONVERT(VARCHAR,lm.SBSC_DATE,23)   AS sbscDate
                ,lch.CHNL_NM    AS chnlNm
                ,llip.COMPANY_NM AS companyNm
                , lc.CUST_TYPE_CD AS custTypeCd
                , ${strColumn}
        FROM loy.LOY_MBR lm
           JOIN loy.LOY_PGM lp ON lp.RID = lm.RID_PGM
           LEFT OUTER JOIN loy.LOY_CHNL lch ON lch.RID = lm.RID_SBSC_CHNL
           JOIN loy.LOY_CUST_I lci ON lci.RID_CUST = lm.RID_CUST
           JOIN loy.LOY_CUST lc ON lc.RID = lci.RID_CUST AND lc.CUST_TYPE_CD = 'E'
           JOIN loy.LOY_INTER_PERSON llip ON llip.EMP_NO = lci.EMP_NO
           JOIN loy.LOY_CUST_LOGIN_INF lcli ON lc.RID = lcli.RID_CUST AND lcli.FLAG =1
        WHERE 1=1
            AND lm.FLAG = 1
            AND   ${strCondWhere}
            AND   ${strWhere}
        ORDER BY ${strOrderby}
        ${strEndPaging}
    </select>
    <select id="getExecutivesPopComm" resultType ="com.icignal.loyalty.membership.dto.response.LoyMbrCommResDto">
            SELECT 
                id as codeId,
                code_name as codeName,
                mark_name as markName,
                par_code_id as parCodeId,
                ATTRIB01 as attrib01,
                ATTRIB02 as attrib02,
                ATTRIB03 as attrib03,
                ATTRIB04 as attrib04,
                ATTRIB05 as attrib05,
                TYPE as type,
                seq as seq
            FROM
                com.comm_code
            WHERE 1=1
              AND flag = 1
              AND group_code = 'LOY_MBR_STAT_CD'
              AND CODE_NAME IN ('A','S')
     </select>
     
          <!-- /**************************************
    -   관련 파일            : LoyMbrMapper.java (getPrStoreNmPopList)
    ============================================
    -   제목                   : 공통 팝업 (채널마스터조회)
    -   설명                   : 
    -   결과형태             : 복수
    ============================================
    -   입력            : accountId, pgm_rid
    -   출력            : 
    ============================================
    -   작성자                : LEE GYEONG YOUNG
    -   작성일                : 2020.12.22
    ***************************************/ -->
    
    <select id="getPrStoreNmPopList" parameterType="com.icignal.loyalty.common.dto.request.LoyCommonReqDto" 
                                resultType="com.icignal.common.base.dto.response.LoyChnlListResDto">
        /* LoyMbrMapper.getPrStoreNmPopList */
        SELECT
            lc1.CHNL_NM AS chnlNm ,
            lc1.CHNL_NO AS chnlNo ,
            lc1.CHNL_TYPE_CD AS chnlTypeCd ,
            lc3.PAR_CHNL_NM AS parChnlNm ,
            lc1.RID AS rid ,
            ${strColumn}
        FROM LOY.LOY_CHNL lc1
        LEFT OUTER JOIN (
            SELECT lc2.RID AS RID_PAR_CHNL,
            lc2.CHNL_NM AS PAR_CHNL_NM
            FROM LOY.LOY_CHNL lc2 WHERE lc2.FLAG = 1) lc3 ON lc1.RID_PAR_CHNL = lc3.RID_PAR_CHNL
        WHERE ${strWhere}
	        AND  lc1.FLAG  = 1
<!-- 	        AND  lc1.CHNL_TYPE_CD = 'S'  -->
	        AND  lc1.STAT_CD = 'A'
	        AND   ${strCondWhere}
	        AND   ${strWhere}
        ORDER BY ${strOrderby}
            ${strEndPaging}
    </select>
          <!-- /**************************************
    -   관련 파일            : LoyMbrMapper.java (getCampaignExecList)
    ============================================
    -   제목                   : 공통 팝업 (캠페인 이력 조회)
    -   설명                   : 
    -   결과형태             : 복수
    ============================================
    -   입력            : mbr_rid
    -   출력            : 
    ============================================
    -   작성자                : LEE GYEONG YOUNG
    -   작성일                : 2020.12.23
    ***************************************/ -->
    
    <select id="getCampaignExecList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" 
                                resultType="com.icignal.common.base.dto.response.LoyCampaignExecListResDto">
    /* LoyMbrMapper.getCampaignExecList */
    SELECT
            rid                        AS      rid
            ,disp_no                    AS      dispNo
            ,CAM_NM                     AS      camNm
            ,CAM_TYPE_CD                 AS      camTypeCd
            ,cc.MARK_NAME                AS      camTypeCdNm
            ,CAM_STATUS_CD               AS      camStatusCd
            ,cc2.MARK_NAME               AS      camStatusCdNm
            ,CONVERT(VARCHAR,cam_start_dd,23)                AS      camStartDD
            ,CONVERT(VARCHAR,cam_end_dd,23)                  AS      camEndDD
            ,CAM_CHNL_CD                AS      chnlTypeCd
            ,SEND_SUCES_YN               AS      sendSucesYn
            ,batSendStatus		  		              AS batSendStatus
            ,OPEN_SUCES_YN 		              AS openSucesYn
            ,actAmt                     AS actAmt
            , ${strColumn}
    FROM (
         SELECT 
             T1.RECV_MEM_ID   AS MBR_NO
             , GETDATE()          AS SYS_UPD_DT
             , T2.CAM_NM        AS cam_nm
             , T2.CAM_START_DD  AS cam_start_dd
             , T2.CAM_END_DD    AS cam_end_dd
             , T2.CAM_TYPE_CD   AS cam_type_cd
             , T2.CAM_PRPS_CD   AS CAM_PRPS_CD
             , 'EMAIL'          AS CAM_CHNL_CD
             , T1.SEND_SUCES_DT AS SEND_DT
             , T1.SEND_SUCES_YN AS SEND_SUCES_YN
             , T2.CAM_STATUS_CD AS cam_status_cd
             , T2.ID                                         AS      rid
             , T2.DISP_NO                                   AS      disp_no
             , T1.BAT_SEND_STATUS AS batSendStatus
             , T1.OPEN_SUCES_YN AS open_suces_yn
             , ISNULL(sum(lo.ACT_AMT),0) AS actAmt
        FROM MKT.MKT_EMAIL_SEND_LOG T1
        INNER JOIN MKT.MKT_CAM_MST T2 ON T1.CAM_ID = T2.ID
        JOIN LOY.LOY_MBR lm ON lm.USR_ID = T1.RECV_MEM_ID COLLATE LATIN1_GENERAL_CS_AS
        LEFT OUTER JOIN LOY.LOY_ORD lo ON lo.RID_MBR = lm.RID AND lo.SALE_DATE <![CDATA[>=]]> T2.CAM_START_DD AND lo.SALE_DATE <![CDATA[<=]]> T2.CAM_END_DD
        WHERE  T2.CAM_TYPE_CD !='MULTISTAGE' AND T2.FLAG =1
        AND T1.RECV_MEM_ID = #{userId}
        GROUP BY T1.RECV_MEM_ID, T2.CAM_NM, T2.CAM_START_DD, T2.CAM_END_DD, T2.CAM_TYPE_CD, T2.CAM_PRPS_CD,T1.SEND_SUCES_DT, T1.SEND_SUCES_YN
            , T2.CAM_STATUS_CD, T2.ID, T2.DISP_NO, T1.BAT_SEND_STATUS, T1.OPEN_SUCES_YN
     UNION ALL 
        SELECT T1.RECV_MEM_ID   AS MBR_NO
             , GETDATE()          AS SYS_UPD_DT
             , T2.CAM_NM        AS CAM_NM
             , T2.CAM_START_DD  AS CAM_START_DATE
             , T2.CAM_END_DD    AS CAM_END_DATE
             , T2.CAM_TYPE_CD   AS CAM_TYPE_CD
             , T2.CAM_PRPS_CD   AS CAM_PRPS_CD
             , 'PUSH'           AS CAM_CHNL_CD
             , T1.SEND_SUCES_DT AS SEND_DT
             , T1.SEND_SUCES_YN AS SEND_SUCES_YN
             , T2.CAM_STATUS_CD AS cam_status_cd
             , T2.ID                                         AS      rid
             , T2.DISP_NO                                   AS      disp_no
             , T1.BAT_SEND_STATUS AS batSendStatus
             , T1.READ_SUCES_YN AS open_suces_yn
             , ISNULL(sum(lo.ACT_AMT),0) AS actAmt
        FROM MKT.MKT_PUSH_SEND_LOG T1
        LEFT OUTER JOIN MKT.MKT_CAM_MST T2 ON T1.CAM_ID = T2.ID
        JOIN LOY.LOY_MBR lm ON lm.USR_ID = T1.RECV_MEM_ID COLLATE LATIN1_GENERAL_CS_AS
        LEFT OUTER JOIN LOY.LOY_ORD lo ON lo.RID_MBR = lm.RID AND lo.SALE_DATE <![CDATA[>=]]> T2.CAM_START_DD AND lo.SALE_DATE <![CDATA[<=]]> T2.CAM_END_DD
        WHERE  T2.CAM_TYPE_CD !='MULTISTAGE' AND T2.FLAG =1
        AND T1.RECV_MEM_ID = #{userId}
        GROUP BY T1.RECV_MEM_ID, T2.CAM_NM, T2.CAM_START_DD, T2.CAM_END_DD, T2.CAM_TYPE_CD, T2.CAM_PRPS_CD,T1.SEND_SUCES_DT, T1.SEND_SUCES_YN
            , T2.CAM_STATUS_CD, T2.ID, T2.DISP_NO, T1.BAT_SEND_STATUS, T1.READ_SUCES_YN
    UNION ALL 
        SELECT T1.RECV_MEM_ID   AS MBR_NO
             , GETDATE()          AS SYS_UPD_DT
             , T2.CAM_NM        AS CAM_NM
             , T2.CAM_START_DD  AS CAM_START_DATE
             , T2.CAM_END_DD    AS CAM_END_DATE
             , T2.CAM_TYPE_CD   AS CAM_TYPE_CD
             , T2.CAM_PRPS_CD   AS CAM_PRPS_CD
             , T1.msg_send_type      AS CAM_CHNL_CD
             , T1.SEND_SUCES_DT AS SEND_DT
             , T1.SEND_SUCES_YN AS SEND_SUCES_YN
             , T2.CAM_STATUS_CD AS cam_status_cd
             , T2.ID                                         AS      rid
             , T2.DISP_NO                                   AS      disp_no
             , T1.BAT_SEND_STATUS  AS batSendStatus
             , T1.SEND_SUCES_YN  AS open_suces_yn
             , ISNULL(sum(lo.ACT_AMT),0) AS actAmt
        FROM MKT.MKT_MSG_SEND_LOG T1
        LEFT OUTER JOIN MKT.MKT_CAM_MST T2 ON T1.CAM_ID = T2.ID
        JOIN LOY.LOY_MBR lm ON lm.USR_ID = T1.RECV_MEM_ID COLLATE LATIN1_GENERAL_CS_AS
        LEFT OUTER JOIN LOY.LOY_ORD lo ON lo.RID_MBR = lm.RID AND lo.SALE_DATE <![CDATA[>=]]> T2.CAM_START_DD AND lo.SALE_DATE <![CDATA[<=]]> T2.CAM_END_DD
        WHERE  T2.CAM_TYPE_CD !='MULTISTAGE' AND T2.FLAG =1
        AND T1.RECV_MEM_ID = #{userId}
        GROUP BY T1.RECV_MEM_ID, T2.CAM_NM, T2.CAM_START_DD, T2.CAM_END_DD, T2.CAM_TYPE_CD, T2.CAM_PRPS_CD, T1.msg_send_type ,T1.SEND_SUCES_DT, T1.SEND_SUCES_YN
            , T2.CAM_STATUS_CD, T2.ID, T2.DISP_NO, T1.BAT_SEND_STATUS, T1.SEND_SUCES_YN
    UNION ALL
    SELECT T1.RECV_MEM_ID   AS MBR_NO
        , GETDATE()          AS SYS_UPD_DT
        , T2.CAM_NM        AS CAM_NM
        , T2.CAM_START_DD  AS CAM_START_DATE
        , T2.CAM_END_DD    AS CAM_END_DATE
        , T2.CAM_TYPE_CD   AS CAM_TYPE_CD
        , T2.CAM_PRPS_CD   AS CAM_PRPS_CD
        , T1.msg_send_type      AS CAM_CHNL_CD
        , T1.SEND_SUCES_DT AS SEND_DT
        , T1.SEND_SUCES_YN AS SEND_SUCES_YN
        , T2.CAM_STATUS_CD AS cam_status_cd
        , T2.ID                                         AS      rid
        , T2.DISP_NO                                   AS      disp_no
        , T1.BAT_SEND_STATUS  AS batSendStatus
        , T1.SEND_SUCES_YN  AS open_suces_yn
        , ISNULL(sum(lo.ACT_AMT),0) AS actAmt
    FROM MKT.MKT_KAKAO_SEND_LOG T1
    LEFT OUTER JOIN MKT.MKT_CAM_MST T2 ON T1.CAM_ID = T2.ID
    JOIN LOY.LOY_MBR lm ON lm.USR_ID = T1.RECV_MEM_ID COLLATE LATIN1_GENERAL_CS_AS
    LEFT OUTER JOIN LOY.LOY_ORD lo ON lo.RID_MBR = lm.RID AND lo.SALE_DATE <![CDATA[>=]]> T2.CAM_START_DD AND lo.SALE_DATE <![CDATA[<=]]> T2.CAM_END_DD
    WHERE  T2.CAM_TYPE_CD !='MULTISTAGE' AND T2.FLAG =1
    AND T1.RECV_MEM_ID = #{userId}
    GROUP BY T1.RECV_MEM_ID, T2.CAM_NM, T2.CAM_START_DD, T2.CAM_END_DD, T2.CAM_TYPE_CD, T2.CAM_PRPS_CD, T1.msg_send_type,T1.SEND_SUCES_DT, T1.SEND_SUCES_YN
        , T2.CAM_STATUS_CD, T2.ID, T2.DISP_NO, T1.BAT_SEND_STATUS, T1.SEND_SUCES_YN
        ) camTable
           left outer join  com.comm_code cc on cc.flag = 1 and cc.code_name = camTable.CAM_TYPE_CD and cc.lang = 'ko' and cc.group_code = 'MKT_CAM_TYPE_CD'
           left outer join  com.comm_code cc2 on cc2.flag = 1 and cc2.code_name = camTable.CAM_STATUS_CD and cc2.lang = 'ko' and cc2.group_code = 'MKT_CAM_STAT'
        WHERE 1=1
             AND   ${strCondWhere}
             AND   ${strWhere}
        ORDER BY ${strOrderby}
            ${strEndPaging}         
    
<!--          SELECT  -->
<!--             rid                        AS      rid -->
<!--             ,disp_no                    AS      dispNo -->
<!--             ,cam_nm                     AS      camNm -->
<!--             ,cam_type_cd                 AS      camTypeCd -->
<!--             ,cc.MARK_NAME                AS      camTypeCdNm -->
<!--             ,cam_status_cd               AS      camStatusCd -->
<!--             ,cc2.MARK_NAME               AS      camStatusCdNm -->
<!--             ,CONVERT(VARCHAR,cam_start_dd,23)                AS      camStartDD -->
<!--             ,CONVERT(VARCHAR,cam_end_dd,23)                  AS      camEndDD -->
<!--             ,chnl_type_cd                AS      chnlTypeCd -->
<!--             ,send_suces_yn               AS      sendSucesYn -->
<!--             , ${strColumn} -->
<!--          FROM (   -->
<!--            SELECT   -->
<!--                     T2.ID                                         AS      rid -->
<!--                     ,T2.DISP_NO                                   AS      disp_no -->
<!--                     ,T2.CAM_NM                                    AS      cam_nm -->
<!--                     ,T2.CAM_TYPE_CD                               AS      cam_type_cd -->
<!--                     ,T2.CAM_STATUS_CD                             AS      cam_status_cd -->
<!--                     ,T2.CAM_START_DD                              AS      cam_start_dd -->
<!--                     ,T2.CAM_END_DD                                AS      cam_end_dd -->
<!--                     ,T4.CHNL_TYPE_CD                              AS      chnl_type_cd -->
<!--                     ,T1.SEND_SUCES_YN                             AS      send_suces_yn -->
<!--             FROM MKT.MKT_EMAIL_SEND_LOG T1 -->
<!--                 LEFT JOIN MKT.MKT_CAM_MST T2 ON T1.CAM_ID = T2.ID -->
<!--                 LEFT JOIN com.MKT_CONTS_CHNL_REL T3 ON T2.ID = T3.CAM_ID -->
<!--                 LEFT JOIN MKT.MKT_CHNL T4 ON T4.ID = T3.MKT_CHNL_ID -->
<!--             WHERE  1=1 -->
<!--                 AND T2.CAM_TYPE_CD !='MULTISTAGE'AND T2.FLAG =1 AND T4.CHNL_TYPE_CD ='EMAIL' -->
<!--                 AND T1.RECV_MEM_ID =#{mbrNo} -->
<!--             UNION ALL -->
<!--                 SELECT   -->
<!--                     T2.ID                                         AS      rid -->
<!--                     ,T2.DISP_NO                                   AS      disp_no -->
<!--                     ,T2.CAM_NM                                    AS      cam_nm -->
<!--                     ,T2.CAM_TYPE_CD                               AS      cam_type_cd -->
<!--                     ,T2.CAM_STATUS_CD                             AS      cam_status_cd -->
<!--                     ,T2.CAM_START_DD                              AS      cam_start_dd -->
<!--                     ,T2.CAM_END_DD                                AS      cam_end_dd -->
<!--                     ,T4.CHNL_TYPE_CD                              AS      chnl_type_cd -->
<!--                     ,T1.SEND_SUCES_YN                             AS      send_suces_yn -->
<!--                 FROM MKT.MKT_EMAIL_SEND_LOG T1 -->
<!--                     LEFT JOIN MKT.MKT_CAM_MST T2 ON T1.CAM_ID = T2.ID -->
<!--                     LEFT JOIN com.MKT_CONTS_CHNL_REL T3 ON T2.ID = T3.CAM_ID -->
<!--                     LEFT JOIN MKT.MKT_CHNL T4 ON T4.ID = T3.MKT_CHNL_ID -->
<!--                 WHERE  1=1 -->
<!--                     AND T2.CAM_TYPE_CD !='MULTISTAGE'AND T2.FLAG =1 AND T4.CHNL_TYPE_CD ='PUSH' -->
<!--                     AND T1.RECV_MEM_ID =#{mbrNo} -->
<!--             UNION ALL -->
<!--                 SELECT   -->
<!--                     T2.ID                                         AS      rid -->
<!--                     ,T2.DISP_NO                                   AS      disp_no -->
<!--                     ,T2.CAM_NM                                    AS      cam_nm -->
<!--                     ,T2.CAM_TYPE_CD                               AS      cam_type_cd -->
<!--                     ,T2.CAM_STATUS_CD                             AS      cam_status_cd -->
<!--                     ,T2.CAM_START_DD                              AS      cam_start_dd -->
<!--                     ,T2.CAM_END_DD                                AS      cam_end_dd -->
<!--                     ,T4.CHNL_TYPE_CD                              AS      chnl_type_cd -->
<!--                     ,T1.SEND_SUCES_YN                             AS      send_suces_yn -->
<!--                 FROM MKT.MKT_MSG_SEND_LOG T1 -->
<!--                     LEFT JOIN MKT.MKT_CAM_MST T2 ON T1.CAM_ID = T2.ID -->
<!--                     LEFT JOIN com.MKT_CONTS_CHNL_REL T3 ON T2.ID = T3.CAM_ID -->
<!--                     LEFT JOIN MKT.MKT_CHNL T4 ON T4.ID = T3.MKT_CHNL_ID -->
<!--                 WHERE  1=1 -->
<!--                     AND T2.CAM_TYPE_CD !='MULTISTAGE'AND T2.FLAG =1 AND T4.CHNL_TYPE_CD ='SMS' -->
<!--                     AND T1.RECV_MEM_ID = #{mbrNo} -->
<!--            ) camTable  -->
<!--            LEFT OUTER JOIN COM.COMM_CODE cc ON camTable.cam_type_cd = cc.CODE_NAME AND cc.FLAG = 1 -->
<!--            LEFT OUTER JOIN COM.COMM_CODE cc2 ON camTable.cam_status_cd = cc2.CODE_NAME AND cc2.FLAG = 1 -->
<!--         WHERE 1=1 -->
<!--              AND   ${strCondWhere} -->
<!--              AND   ${strWhere} -->
<!--         ORDER BY ${strOrderby} -->
<!--             ${strEndPaging}           -->
    </select>    
    
              <!-- /**************************************
    -   관련 파일            : LoyMbrMapper.java (getNegativeAccList)
    ============================================
    -   제목                   : 부정적립 회원 조회
    -   설명                   : 
    -   결과형태             : 복수
    ============================================
    -   작성자                : LEE GYEONG YOUNG
    -   작성일                : 2021.01.04
    ***************************************/ -->
    
    <select id="getNegativeAccList" parameterType="com.icignal.loyalty.membership.dto.request.LoyNegativeAccReqDto" 
                                resultType="com.icignal.loyalty.membership.dto.response.LoyNegativeAccResDto">
        /* LoyMbrMapper.getNegativeAccList */
		SELECT lpt.APPR_DATE    AS apprDate
		     , lpt.RID_MBR                  AS ridMbr
		     , lc.CUST_STAT_CD 		AS custStatCd
		     , cc.MARK_NAME 		AS custStatCdNm
		     , MAX(lm.MBR_NO)       AS mbrNo
		     , MAX(lc.CUST_NM)      AS custNm
		     , MAX(lc.GEN_CD)       AS genCd
		     , MAX(lc.HHP)              AS mobilePhone
		     , MAX(lch.CHNL_NO)     AS chnlNo
		     , MAX(lch.CHNL_NM)     AS chnlNm
		     , COUNT(lpt.RID)           AS cnt
		     , ${strColumn}
		FROM LOY.LOY_PNT_TXN lpt
		         JOIN LOY.LOY_CHNL lch ON lch.RID = lpt.RID_CHNL AND CHNL_TYPE_CD = 'S' AND CHNL_SUB_TYPE_CD IN ('S1', 'S2')
		         JOIN LOY.LOY_MBR lm ON lm.RID = lpt.RID_MBR
		         JOIN LOY.LOY_CUST lc ON lc.RID = lm.RID_CUST
		         LEFT OUTER JOIN com.COMM_CODE cc ON lc.CUST_STAT_CD = cc.CODE_NAME AND cc.GROUP_CODE = 'LOY_CUST_STAT_CD' AND cc.FLAG = 1
		WHERE 1 = 1
		  AND lpt.FLAG = 1
		  AND lpt.PNT_TXN_TYPE_1_CD = '100'
		  AND lpt.PNT_TXN_TYPE_2_CD = '100'
		  AND lpt.TXN_STAT_CD = 'A'
		  <if test="strDt != null and endDt != null">
            AND lpt.APPR_DT BETWEEN com.TO_DATE(#{strDt},'YYYY-MM-DD') AND com.TO_DATE(#{endDt},'YYYY-MM-DD')+0.99999
          </if>
		  AND   ${strCondWhere}
		  AND   ${strWhere}
		GROUP BY lch.CHNL_NO, APPR_DATE, RID_MBR, lc.CUST_STAT_CD, cc.MARK_NAME
		HAVING COUNT(lpt.RID) >= #{dayCnt}
		ORDER BY ${strOrderby}
		            ${strEndPaging}
    </select>
    <select id="clearMaskNegativeAccList" parameterType="com.icignal.loyalty.membership.dto.request.LoyNegativeAccReqDto"
                                            resultType="com.icignal.loyalty.membership.dto.response.LoyNegativeAccResDto">
	    /* LoyMbrMapper.clearMaskMbr */
	    SELECT 
	               lc.cust_nm                AS unMaskCustNm
	                , lc.HHP                    AS unMaskHhp
	    FROM LOY.LOY_MBR lm
	    JOIN LOY.LOY_CUST lc ON lm.RID_CUST = lc.RID AND lc.FLAG = 1
	    WHERE lm.FLAG = 1
	    AND lm.RID = #{rid}
    </select>
    
    <select id="negativeAccListExcelList" parameterType="com.icignal.loyalty.membership.dto.request.LoyNegativeAccReqDto" 
                                resultType="com.icignal.loyalty.membership.dto.response.LoyNegativeAccExcelResDto">
        /* LoyMbrMapper.negativeAccListExcelList */
        SELECT lpt.APPR_DATE    AS apprDate
             , lpt.RID_MBR                  AS ridMbr
             , MAX(lm.MBR_NO)       AS mbrNo
             , MAX(lc.CUST_NM)      AS custNm
             , MAX(lc.GEN_CD)       AS genCd
             , MAX(lc.HHP)              AS mobilePhone
             , MAX(lch.CHNL_NO)     AS chnlNo
             , MAX(lch.CHNL_NM)     AS chnlNm
             , COUNT(lpt.RID)           AS cnt
             , ${strColumn}
        FROM LOY.LOY_PNT_TXN lpt
                 JOIN LOY.LOY_CHNL lch ON lch.RID = lpt.RID_CHNL AND CHNL_TYPE_CD = 'S' AND CHNL_SUB_TYPE_CD IN ('S1', 'S2')
                 JOIN LOY.LOY_MBR lm ON lm.RID = lpt.RID_MBR
                 JOIN LOY.LOY_CUST lc ON lc.RID = lm.RID_CUST
        WHERE 1 = 1
          AND lpt.FLAG = 1
          AND lpt.PNT_TXN_TYPE_1_CD = '100'
          AND lpt.PNT_TXN_TYPE_2_CD = '100'
          AND lpt.TXN_STAT_CD = 'A'
          <if test="strDt != null and endDt != null">
            AND lpt.APPR_DT BETWEEN com.TO_DATE(#{strDt},'YYYY-MM-DD') AND com.TO_DATE(#{endDt},'YYYY-MM-DD')+0.99999
          </if>
          AND   ${strCondWhere}
          AND   ${strWhere}
        GROUP BY lch.CHNL_NO, APPR_DATE, RID_MBR
        HAVING COUNT(lpt.RID) >= #{dayCnt}
        ORDER BY ${strOrderby}
                    ${strEndPaging}
    </select>
    
    
    <!-- /**************************************
    -   관련 파일             : LoyMbrService.java
    ============================================
    -   제목                  : 회원관리정보 리스트 조회해오기
    -   설명                  : 회원관리정보 화면에서 전체내역을 리스트로 볼 수 있도록 데이터를 가져온다
    -   결과형태           : 
    ============================================
    -   입력			: 
    ============================================
    -   작성자                : jb.kim
    -   작성일                : 2021-01-11
    ***************************************/ -->
    <select id="getMbrMgtInfoList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrMgtInfoReqDto"
    		                        resultType="com.icignal.loyalty.membership.dto.response.LoyMbrMgtInfoResDto">
    /* LoyMbrMapper.getMbrMgtInfoList */
    SELECT lmma.RID AS rid
         , lmma.ATTR_CD AS attrCd
         , CASE
            WHEN lmma.X_EXPRE_DT <![CDATA[<=]]>  GETDATE()  THEN   'N'
            ELSE 'Y'
           END mgtYn
         , e1.NAME AS createBy
         , convert(varchar(10),lmma.CREATE_DATE,120) AS createDate
         , e2.NAME AS modifyBy
         , convert(varchar(10),lmma.MODIFY_DATE,120) AS modifyDate
         , convert(varchar(10),lmma.X_EXPRE_DT,120) AS xExpreDt
         , ${strColumn}
    from LOY.LOY_MBR_MGT_ATTR lmma
    LEFT JOIN com.crm_user cu1 ON cu1.rid = lmma.CREATE_BY AND cu1.FLAG = 1
    LEFT JOIN com.employee e1  ON cu1.ID_EMPLOYEE = e1.id AND e1.FLAG = 1
    LEFT JOIN com.crm_user cu2 ON cu2.rid = lmma.MODIFY_BY AND cu2.FLAG = 1
    LEFT JOIN com.employee e2  ON cu2.ID_EMPLOYEE = e2.id AND e2.FLAG = 1
    WHERE lmma.FLAG = 1
    AND RID_MBR = #{ridMbr}
    <!--AND lmma.CREATE_DATE <![CDATA[<=]]> GETDATE()
   AND lmma.X_EXPRE_DT <![CDATA[>=]]> GETDATE() -->
   AND ${strWhere}
   ORDER BY ${strOrderby}
       ${strEndPaging}
   </select>

   <!--
     /* LoyMbrMapper.getMbrMgtInfoList */
        SELECT   t.rid											AS rid
               ,t.create_By									AS createBy
               ,t.modify_By									AS modifyBy
               ,t.create_Date								 	AS createDate
               ,t.modify_Date 									AS modifyDate
               ,t.rid_Mbr										AS ridMbr
               ,t.attr_Cd										AS attrCd
               ,t.attr_Cd_Nm									AS attrCdNm
               ,t.attr_Sub_Cd									AS attrSubCd
               ,t.attr_Sub_Cd_Nm								AS attrSubCdNm
               ,t.mgt_Yn										AS mgtYn
               ,t.eval_Cd										AS evalCd
               ,t.eval_Cd_Nm									AS evalCdNm
               ,t.comments										AS comments
                   ,${strColumn}
       FROM (
                SELECT   LMMA.RID											AS rid
                        ,EM.NAME											AS create_By
                       ,EM2.NAME											AS modify_By
                       ,CONVERT(VARCHAR,LMMA.CREATE_DATE,120) 	AS create_Date
                       ,CONVERT(VARCHAR,LMMA.MODIFY_DATE,120) 	AS modify_Date
                       ,LMMA.RID_MBR 										AS rid_Mbr
                       ,LMMA.ATTR_CD 										AS attr_Cd
                       ,CC2.MARK_NAME										AS attr_Cd_Nm
                       ,LMMA.ATTR_SUB_CD 									AS attr_Sub_Cd
                       ,CC3.MARK_NAME										AS attr_Sub_Cd_Nm
                       ,LMMA.MGT_YN										AS mgt_Yn
                       ,LMMA.EVAL_CD										AS eval_Cd
                       ,CC.MARK_NAME										AS eval_Cd_Nm
                       ,LMMA.COMMENTS										AS comments
               FROM LOY.LOY_MBR_MGT_ATTR LMMA
                    LEFT OUTER JOIN COM.CRM_USER US ON LMMA.CREATE_BY = US.RID AND US.FLAG = 1
                    LEFT OUTER JOIN COM.EMPLOYEE EM ON US.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
                    LEFT OUTER JOIN COM.CRM_USER US2 ON LMMA.MODIFY_BY = US2.RID AND US2.FLAG = 1
                    LEFT OUTER JOIN COM.EMPLOYEE EM2 ON US2.ID_EMPLOYEE = EM2.ID AND EM2.FLAG = 1
                    LEFT OUTER JOIN COM.COMM_CODE CC ON LMMA.EVAL_CD = CC.CODE_NAME AND CC.GROUP_CODE = 'LOY_MBR_ACT_EVAL_CD' AND CC.FLAG = 1
                    LEFT OUTER JOIN COM.COMM_CODE CC2 ON LMMA.ATTR_CD = CC2.CODE_NAME AND CC2.GROUP_CODE = 'LOY_MBR_MGT_ATTR_CD' AND CC2.FLAG = 1
                      LEFT OUTER JOIN COM.COMM_CODE CC3 ON LMMA.ATTR_SUB_CD = CC3.CODE_NAME AND CC3.GROUP_CODE = 'LOY_MBR_MGT_ATTR_SUB_CD' AND CC3.FLAG = 1
               WHERE 	1=1
                   AND LMMA.FLAG = 1
                   AND LMMA.RID_MBR = #{ridMbr}
           ) t
       WHERE   1=1
           AND ${strCondWhere}
           AND ${strWhere}
       ORDER BY ${strOrderby}

       ${strEndPaging}
    -->

    <!-- LEFT OUTER JOIN COM.COMM_CODE CC3 ON LMMA.ATTR_SUB_CD = CC3.CODE_NAME AND CC3.GROUP_NAME LIKE '%회원관리속성%' AND CC3.FLAG = 1 -->
    <!-- 
     /* LoyMbrMapper.getMbrMgtInfoList */
	 	SELECT   LMMA.RID											AS rid
	 			,EM.NAME											AS createBy
				,EM2.NAME											AS modifyBy
				,CONVERT(VARCHAR,LMMA.CREATE_DATE,120) 	AS createDate
				,CONVERT(VARCHAR,LMMA.MODIFY_DATE,120) 	AS modifyDate
				,LMMA.RID_MBR 										AS ridMbr
				,LMMA.ATTR_CD 										AS attrCd
				,CC2.MARK_NAME										AS attrCdNm
				,LMMA.ATTR_SUB_CD 									AS attrSubCd
				,CC3.MARK_NAME										AS attrSubCdNm
				,LMMA.MGT_YN										AS mgtYn
				,LMMA.EVAL_CD										AS evalCd
				,CC.MARK_NAME										AS evalCdNm
				,LMMA.COMMENTS										AS comments
				,${strColumn}
		FROM LOY.LOY_MBR_MGT_ATTR LMMA 
		     LEFT OUTER JOIN COM.CRM_USER US ON LMMA.CREATE_BY = US.RID AND US.FLAG = 1
		     LEFT OUTER JOIN COM.EMPLOYEE EM ON US.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
		     LEFT OUTER JOIN COM.CRM_USER US2 ON LMMA.MODIFY_BY = US2.RID AND US2.FLAG = 1
		     LEFT OUTER JOIN COM.EMPLOYEE EM2 ON US2.ID_EMPLOYEE = EM2.ID AND EM2.FLAG = 1
		     LEFT OUTER JOIN COM.COMM_CODE CC ON LMMA.EVAL_CD = CC.CODE_NAME AND CC.GROUP_CODE = 'LOY_MBR_ACT_EVAL_CD' AND CC.FLAG = 1
			 LEFT OUTER JOIN COM.COMM_CODE CC2 ON LMMA.ATTR_CD = CC2.CODE_NAME AND CC2.GROUP_CODE = 'LOY_MBR_MGT_ATTR_CD' AND CC2.FLAG = 1
  		     LEFT OUTER JOIN COM.COMM_CODE CC3 ON LMMA.ATTR_SUB_CD = CC3.CODE_NAME AND CC3.GROUP_CODE = 'LOY_MBR_MGT_ATTR_SUB_CD' AND CC3.FLAG = 1
    	WHERE 	1=1
    		AND LMMA.FLAG = 1
    		AND ${strCondWhere}
    		AND ${strWhere}
    	ORDER BY ${strOrderby} 

    	${strEndPaging}
    
     -->
    
    <!-- /**************************************
    -   관련 파일             : LoyMbrService.java
    ============================================
    -   제목                  : 회원관리정보 추가
    -   설명                  : 회원관리정보를 신규로 추가하는 기능
    -   결과형태           : 
    ============================================
    -   입력			: 
    ============================================
    -   작성자                : jb.kim
    -   작성일                : 2021-01-11
    ***************************************/ -->
    <insert id="addMbrMgtInfo" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrMgtInfoReqDto">
    	/*LoyMbrMapper.addMbrMgtInfo*/
    	INSERT INTO LOY.LOY_MBR_MGT_ATTR (
				 RID
				,CREATE_BY  
				,MODIFY_BY    
				,RID_MBR      
				,ATTR_CD      
				,MGT_YN       
				,ATTR_SUB_CD  
				,EVAL_CD      
				,COMMENTS     )
    	VALUES (
    			 #{rid}
    			,#{createBy}
    			,#{modifyBy}
    			,#{ridMbr}
    			,#{attrCd}
    			,#{mgtYn}
    			,#{attrSubCd}
    			,#{evalCd}
    			,#{comments}  )
    </insert>
    
     <!-- /**************************************
    -   관련 파일             : LoyMbrService.java
    ============================================
    -   제목                  : 회원관리정보 수정할 데이터 로드해오기 
    -   설명                  : 수정 팝업 시 수정할 필드 내용들을 조회해 로드해오는 쿼리
    -   결과형태           : 
    ============================================
    -   입력			: 
    ============================================
    -   작성자                : jb.kim
    -   작성일                : 2021-01-11
    ***************************************/ -->
	<select id="getMbrMgtInfoBeforeUpdate" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrMgtInfoReqDto"
			resultType="com.icignal.loyalty.membership.dto.response.LoyMbrMgtInfoResDto">
		/* LoyMbrMapper.getMbrMgtInfoBeforeUpdate */
		SELECT   LMMA.RID											AS rid
				,EM.NAME											AS createBy
				,EM2.NAME											AS modifyBy
				,CONVERT(VARCHAR,LMMA.CREATE_DATE,120) 	AS createDate
				,CONVERT(VARCHAR,LMMA.MODIFY_DATE,120) 	AS modifyDate
				,LMMA.RID_MBR 										AS ridMbr
				,LMMA.ATTR_CD 										AS attrCd
				,CC2.MARK_NAME										AS attrCdNm
				,LMMA.ATTR_SUB_CD 									AS attrSubCd
				,CC3.MARK_NAME										AS attrSubCdNm
				,LMMA.MGT_YN										AS mgtYn
				,LMMA.EVAL_CD										AS evalCd
				,CC.MARK_NAME										AS evalCdNm
				,LMMA.COMMENTS										AS comments
		FROM 	 LOY.LOY_MBR_MGT_ATTR LMMA 
			     LEFT OUTER JOIN COM.CRM_USER US ON LMMA.CREATE_BY = US.RID AND US.FLAG = 1
			     LEFT OUTER JOIN COM.EMPLOYEE EM ON US.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
			     LEFT OUTER JOIN COM.CRM_USER US2 ON LMMA.MODIFY_BY = US2.RID AND US2.FLAG = 1
			     LEFT OUTER JOIN COM.EMPLOYEE EM2 ON US2.ID_EMPLOYEE = EM2.ID AND EM2.FLAG = 1
			     LEFT OUTER JOIN COM.COMM_CODE CC ON LMMA.EVAL_CD = CC.CODE_NAME AND CC.GROUP_CODE = 'LOY_MBR_ACT_EVAL_CD' AND CC.FLAG = 1
				 LEFT OUTER JOIN COM.COMM_CODE CC2 ON LMMA.ATTR_CD = CC2.CODE_NAME AND CC2.GROUP_CODE = 'LOY_MBR_MGT_ATTR_CD' AND CC2.FLAG = 1
				 LEFT OUTER JOIN COM.COMM_CODE CC3 ON LMMA.ATTR_SUB_CD = CC3.CODE_NAME AND CC3.GROUP_CODE = 'LOY_MBR_MGT_ATTR_SUB_CD' AND CC3.FLAG = 1
		WHERE    1=1
			AND  LMMA.FLAG = 1
			AND  LMMA.RID = #{rid}
	</select>
	
	<!-- /**************************************
    -   관련 파일             : LoyMbrService.java
    ============================================
    -   제목                  : 회원관리정보 데이터 수정 시행 
    -   설명                  : 수정 시행
    -   결과형태           : 
    ============================================
    -   입력			: 
    ============================================
    -   작성자                : jb.kim
    -   작성일                : 2021-01-11
    ***************************************/ -->
	<update id="updateMbrMgtInfo" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrMgtInfoReqDto">
		/*LoyMbrMapper.updateMbrMgtInfo*/
		UPDATE LOY.LOY_MBR_MGT_ATTR LMMA
		SET    LMMA.ATTR_CD		 = #{attrCd} 
			  ,LMMA.ATTR_SUB_CD  = #{attrSubCd}
			  ,LMMA.MGT_YN 		 = #{mgtYn}
			  ,LMMA.EVAL_CD		 = #{evalCd}
			  ,LMMA.COMMENTS 	 = #{comments}
			  ,LMMA.MODIFY_BY 	 = #{modifyBy}
		WHERE  LMMA.RID 		 = #{rid}
	</update>
	 
    <!-- /**************************************
    -   관련 파일             : LoyMbrService.java
    ============================================
    -   제목                  : 회원관리정보 이력 추가 
    -   설명                  : 회원관리정보 신규/수정 시 이력정보 추가
    -   결과형태           : 
    ============================================
    -   입력			: 
    ============================================
    -   작성자                : jb.kim
    -   작성일                : 2021-01-11
    ***************************************/ -->
    <insert id="addMbrMgtInfoHist" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrMgtInfoReqDto">
    	/*LoyMbrMapper.addMbrMgtInfoHist*/
    	INSERT INTO LOY.LOY_MBR_MGT_ATTR_HIST (
				 RID
				,CREATE_BY  
				,MODIFY_BY    
				,RID_MBR      
				,ATTR_CD      
				,MGT_YN       
				,ATTR_SUB_CD  
				,EVAL_CD      
				,COMMENTS
				,RID_MBR_MGT_ATTR   )
    	VALUES (
    			 #{rid}
    			,#{createBy}
    			,#{modifyBy}
    			,#{ridMbr}
    			,#{attrCd}
    			,#{mgtYn}
    			,#{attrSubCd}
    			,#{evalCd}
    			,#{comments}
    			,#{ridMbrMgtAttr}  )
    </insert>
    
     <!-- /**************************************
    -   관련 파일             : LoyMbrService.java
    ============================================
    -   제목                  : 회원관리정보에 대한 이력내역 리스트 조회해오기
    -   설명                  : 회원관리정보의 이력팝업 화면에서 전체내역을 리스트로 볼 수 있도록 데이터를 가져온다
    -   결과형태           : 
    ============================================
    -   입력			: 
    ============================================
    -   작성자                : jb.kim
    -   작성일                : 2021-01-12 
    ***************************************/ -->
    <select id="getMbrMgtInfoHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrMgtInfoReqDto"
    		                            resultType="com.icignal.loyalty.membership.dto.response.LoyMbrMgtInfoResDto">
    /* LoyMbrMapper.getMbrMgtInfoHistList */
    SELECT lmmah.RID AS rid
         , lmmah.ATTR_CD AS attrCd
         , e1.NAME AS modifyBy
         , convert(varchar(10), lmmah.MODIFY_DATE ,120) AS modifyDate
         , convert(varchar(10), lmmah.X_EXPRE_DT ,120) AS xExpreDt
         , ${strColumn}
    FROM LOY.LOY_MBR_MGT_ATTR_HIST lmmah
     LEFT JOIN com.crm_user cu1 ON cu1.rid = lmmah.MODIFY_BY AND cu1.FLAG = 1
     LEFT JOIN com.employee e1  ON cu1.ID_EMPLOYEE = e1.id AND e1.FLAG = 1
    WHERE lmmah.FLAG =1
      AND lmmah.RID_MBR = #{ridMbr}
      AND lmmah.RID_MBR_MGT_ATTR = #{ridMbrMgtAttr}
      AND ${strWhere}
    ORDER BY ${strOrderby}
        ${strEndPaging}
    </select>
    <!--
     /* LoyMbrMapper.getMbrMgtInfoHistList */
	 	SELECT   t.rid											AS rid
	 			,t.create_By									AS createBy
				,t.modify_By									AS modifyBy
				,t.create_Date  								AS createDate
				,t.modify_Date  								AS modifyDate
				,t.rid_Mbr 										AS ridMbr
				,t.attr_Cd 										AS attrCd
				,t.attr_Cd_Nm									AS attrCdNm
				,t.attr_Sub_Cd 									AS attrSubCd
				,t.attr_Sub_Cd_Nm								AS attrSubCdNm
				,t.mgt_Yn										AS mgtYn
				,t.eval_Cd										AS evalCd
				,t.eval_Cd_Nm									AS evalCdNm
				,t.comments										AS comments
				,t.rid_Mbr_Mgt_Attr								as ridMbrMgtAttr
				,${strColumn}
		FROM (
		  		SELECT	 H.RID											AS rid
		 				,EM.NAME										AS create_By
						,EM2.NAME										AS modify_By
						,CONVERT(VARCHAR,H.CREATE_DATE,120)	AS create_Date
						,CONVERT(VARCHAR,H.MODIFY_DATE,120)	AS modify_Date
						,H.RID_MBR 										AS rid_Mbr
						,H.ATTR_CD 										AS attr_Cd
						,CC2.MARK_NAME									AS attr_Cd_Nm
						,H.ATTR_SUB_CD 									AS attr_Sub_Cd
						,CC3.MARK_NAME									AS attr_Sub_Cd_Nm
						,H.MGT_YN										AS mgt_Yn
						,H.EVAL_CD										AS eval_Cd
						,CC.MARK_NAME									AS eval_Cd_Nm
						,H.COMMENTS										AS comments
						,H.RID_MBR_MGT_ATTR								as rid_Mbr_Mgt_Attr
				FROM LOY.LOY_MBR_MGT_ATTR_HIST H
				     LEFT OUTER JOIN COM.CRM_USER US ON H.CREATE_BY = US.RID AND US.FLAG = 1
				     LEFT OUTER JOIN COM.EMPLOYEE EM ON US.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
				     LEFT OUTER JOIN COM.CRM_USER US2 ON H.MODIFY_BY = US2.RID AND US2.FLAG = 1
				     LEFT OUTER JOIN COM.EMPLOYEE EM2 ON US2.ID_EMPLOYEE = EM2.ID AND EM2.FLAG = 1
				     LEFT OUTER JOIN COM.COMM_CODE CC ON H.EVAL_CD = CC.CODE_NAME AND CC.GROUP_CODE = 'LOY_MBR_ACT_EVAL_CD' AND CC.FLAG = 1
					 LEFT OUTER JOIN COM.COMM_CODE CC2 ON H.ATTR_CD = CC2.CODE_NAME AND CC2.GROUP_CODE = 'LOY_MBR_MGT_ATTR_CD' AND CC2.FLAG = 1
		  		     LEFT OUTER JOIN COM.COMM_CODE CC3 ON H.ATTR_SUB_CD = CC3.CODE_NAME AND CC3.GROUP_CODE = 'LOY_MBR_MGT_ATTR_SUB_CD' AND CC3.FLAG = 1
		  		WHERE   H.FLAG = 1
		  			AND H.RID_MBR_MGT_ATTR = #{ridMbrMgtAttr}
  		) t
    	WHERE 	1=1
    		AND ${strCondWhere}
    		AND ${strWhere}
    	ORDER BY ${strOrderby}
    	${strEndPaging}
     -->
    <!-- AND H.RID_MBR_MGT_ATTR = #{ridMbrMgtAttr} -->
    <!-- 
    	SELECT   H.RID											AS rid
	 			,EM.NAME										AS createBy
				,EM2.NAME										AS modifyBy
				,CONVERT(VARCHAR,H.CREATE_DATE,120)	AS createDate
				,CONVERT(VARCHAR,H.MODIFY_DATE,120)	AS modifyDate
				,H.RID_MBR 										AS ridMbr
				,H.ATTR_CD 										AS attrCd
				,CC2.MARK_NAME									AS attrCdNm
				,H.ATTR_SUB_CD 									AS attrSubCd
				,CC3.MARK_NAME									AS attrSubCdNm
				,H.MGT_YN										AS mgtYn
				,H.EVAL_CD										AS evalCd
				,CC.MARK_NAME									AS evalCdNm
				,H.COMMENTS										AS comments
				,H.RID_MBR_MGT_ATTR								as ridMbrMgtAttr					
				,${strColumn}
		FROM LOY.LOY_MBR_MGT_ATTR_HIST H 
		     LEFT OUTER JOIN COM.CRM_USER US ON H.CREATE_BY = US.RID AND US.FLAG = 1
		     LEFT OUTER JOIN COM.EMPLOYEE EM ON US.ID_EMPLOYEE = EM.ID AND EM.FLAG = 1
		     LEFT OUTER JOIN COM.CRM_USER US2 ON H.MODIFY_BY = US2.RID AND US2.FLAG = 1
		     LEFT OUTER JOIN COM.EMPLOYEE EM2 ON US2.ID_EMPLOYEE = EM2.ID AND EM2.FLAG = 1
		     LEFT OUTER JOIN COM.COMM_CODE CC ON H.EVAL_CD = CC.CODE_NAME AND CC.GROUP_CODE = 'LOY_MBR_ACT_EVAL_CD' AND CC.FLAG = 1
			 LEFT OUTER JOIN COM.COMM_CODE CC2 ON H.ATTR_CD = CC2.CODE_NAME AND CC2.GROUP_CODE = 'LOY_MBR_MGT_ATTR_CD' AND CC2.FLAG = 1
  		     LEFT OUTER JOIN COM.COMM_CODE CC3 ON H.ATTR_SUB_CD = CC3.CODE_NAME AND CC3.GROUP_CODE = 'LOY_MBR_MGT_ATTR_SUB_CD' AND CC3.FLAG = 1
    	WHERE 	1=1
    		AND H.FLAG = 1
    		AND H.RID_MBR_MGT_ATTR = #{ridMbrMgtAttr}
    		AND ${strCondWhere}
    		AND ${strWhere}
    	ORDER BY ${strOrderby} 

    	${strEndPaging}
     -->
    
     <!-- /**************************************
    -   관련 파일             : LoyMbrService.java
    ============================================
    -   제목                  : 회원관리정보 삭제(논리삭제)
    -   설명                  : 회원관리정보를 제거한다
    -   결과형태           : 
    ============================================
    -   입력			: 
    ============================================
    -   작성자                : jb.kim
    -   작성일                : 2021-01-12
    ***************************************/ -->
	<insert id="deleteMbrMgtInfo" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrMgtInfoReqDto">
		/*LoyMbrMapper.deleteMbrMgtInfo*/
		UPDATE LOY.LOY_MBR_MGT_ATTR
		SET flag = flag + 1
		WHERE RID = #{rid}
	</insert>
	 
     <!-- /**************************************
    -   관련 파일             : LoyMbrService.java
    ============================================
    -   제목                  : [유효성검사] 레코드 갯수 카운트
    -   설명                  : 신규/수정 시 '회원관리속성(ATTR_CD)'과 '속성값(ATTR_SUB_CD)'이 동일한 것이
    				 기존 테이블 안의 레코드 상에 존재하는가를 확인하는 작업
    -   결과형태           : 
    ============================================
    -   입력			: 
    ============================================
    -   작성자                : jb.kim
    -   작성일                : 2021-01-12
    ***************************************/ -->
	<select id="countTheRecordMatched" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrMgtInfoReqDto"
			resultType="int">
		/*LoyMbrMapper.countTheRecordMatched*/
		SELECT COUNT(*)
		FROM (
			SELECT LMMA.*
			FROM LOY.LOY_MBR_MGT_ATTR LMMA
			WHERE 1=1
				AND LMMA.ATTR_CD = #{attrCd}
				AND LMMA.ATTR_SUB_CD = #{attrSubCd}
				AND LMMA.FLAG = 1
		)
	</select>
	
	<select id="selectOnlineMallCouponHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCouponListResDto">
	/*LoyMbrMapper.selectOnlineMallCouponHistList*/
		SELECT llc.TITLE     AS cpnNm /* 쿠폰명 */
	     , llcm.CPN_IDX  AS cpnNo /* 쿠폰번호 */
	     , llcm.RID_MBR  AS ridMbr /* 회원 RID */
	     , CASE
	           WHEN llc.KIND = 100 THEN '상품쿠폰'
	           WHEN llc.KIND = 200 THEN '장바구니쿠폰'
	           WHEN llc.KIND = 300 THEN '무료배송쿠폰'
	           WHEN llc.KIND = 400 THEN '사은품쿠폰'
	           ELSE llc.KIND
	       END              AS cpnKind /* 유형 (100:상품쿠폰, 200:장바구니쿠폰, 300:무료배송쿠폰, 400:사은품쿠폰) */
	     , CASE
	           WHEN llc.METHOD = 102 THEN '구매보상발급'
	           WHEN llc.METHOD = 103 THEN '회원선택발급'
	           WHEN llc.METHOD = 104 THEN '오프라인발급'
	           WHEN llc.METHOD = 105 THEN '첫구매발급'
	           WHEN llc.METHOD = 106 THEN '재구매발급'
	           WHEN llc.METHOD = 107 THEN '이벤트발급'
	           WHEN llc.METHOD = 201 THEN '회원가입발급'
	           WHEN llc.METHOD = 202 THEN '생일발급'
	           WHEN llc.METHOD = 203 THEN '기념일발급'
	           WHEN llc.METHOD = 204 THEN '회원등급발급'
	           WHEN llc.METHOD = 301 THEN '사은품교환'
	           ELSE llc.METHOD
	       END              AS cpnMethod /* 상세유형 */
	     , llc.SUMMARY   AS cpnSummary /* 쿠폰 설명 */
	     , CASE
	           WHEN llcm.DISCOUNT_UNIT = 100 THEN '정액'
	           WHEN llcm.DISCOUNT_UNIT = 200 THEN '정률'
	           ELSE llcm.DISCOUNT_UNIT
	       END              AS dcUnit /* 할인유형 (100: 정액(원), 200: 정률(%))*/
	     , CASE
	           WHEN llcm.DISCOUNT_UNIT = 100 THEN llcm.DISCOUNT_VALUE
	           WHEN llcm.DISCOUNT_UNIT = 200 THEN ROUND(llcm.DISCOUNT_VALUE * 100)
	            ELSE llcm.DISCOUNT_VALUE
	       END              AS dcValue /* 할인액 */
	     , CASE
	           WHEN llcm.USED = 100 THEN '미사용'
	           WHEN llcm.USED = 900 THEN '사용'
	           ELSE llcm.USED
	       END AS cpnUseYN /* 쿠폰 사용여부 100: 미사용, 900: 사용 */
	      ,CONVERT(VARCHAR,llcm.REG_DATE,120) AS regDate  /* 등록일자 */
	     ,${strColumn}
    FROM LOY_LNL_CPN_MBR llcm
         JOIN LOY_LNL_CPN llc ON llc.RID = llcm.RID_CPN
	WHERE  	${strCondWhere} 
		AND ${strWhere}
		<choose>
	        <when test="mbrStatCd == '탈퇴'">
		    	AND llcm.RID_MBR = #{rid}
		   	</when>
		   	<otherwise>
		   		AND llcm.RID_MBR IN ${strMbrIntWhere}
		   	</otherwise>
		</choose>
	 order by ${strOrderby}
        ${strEndPaging}	
	</select>
	
<select id="selectNewMallCouponList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCouponListResDto">
	/*LoyMbrMapper.selectNewMallCouponList*/
	SELECT 
       llcmt.CPN_TYPE                                              AS cpnTypeCd /* 발급방법 */
     , llct.CPN_CTG_CD                                           AS cpnCtgCd /*쿠폰종류 */
     , llcmt.COUPON_DESC 										AS cpnDesc /* 쿠폰요약설명 */
     , llcmt.COUPON_NAME  										AS cpnNm /* 쿠폰명 */
     , llcmt.SRC_IDX                 								AS cpnNo /* 쿠폰번호 */
     , llct.SRC_IDX 												AS ofrNo
     ,CONVERT(VARCHAR,llcmt.REGIST_DATE,23)      AS issuDate /* 발급일자 */
     , llcmt.SALE_TYPE  	 										AS saleType /* 할인유형 */
     , CASE
        WHEN llcmt.SALE_TYPE = 'percent' THEN llcmt.PERCENT_GOODS_SALE
        WHEN llcmt.SALE_TYPE = 'won' THEN llcmt.WON_GOODS_SALE
    	END                             									AS valAmt /* 할인(액/률) */
     , llcmt.LIMIT_GOODS_PRICE     			 				AS minPurAmt /* 최소구매금액 */
     , llcmt.MAX_PERCENT_GOODS_SALE 					AS maxDcAmt /* 최대할인금액 */
     , llcmt.USE_STATUS             								AS useStatus /* 사용여부(미사용: unused, 사용: used) (공통코드 Mig 후 수정 필요) */
     , CONVERT(VARCHAR,llcmt.USE_DATE,120)	AS useDate
     ,${strColumn}
		FROM LOY.LOY_CPN_MBR_TOBE llcmt
         JOIN LOY.LOY_CPN_TOBE llct ON llcmt.RID_LNL_CPN_TOBE = llct.RID
	WHERE  	${strCondWhere} 
		AND ${strWhere}
		AND llcmt.RID_MBR = #{ridMbr}
	 order by ${strOrderby}
        ${strEndPaging}	
	</select>
	<!-- '등급-등급상세-등급별혜택'에서 '등급혜택이력'조회 쿼리 -->
	<select id="getTierBenefitHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrTierBenefitHistReqDto"
			resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTierBenefitHistResDto">
			SELECT   ltbp.RID 						AS rid
					,ltbp.RID_MBR 					AS ridMbr
					,ltbp.RID_TIERS_BNFT 			AS ridTiersBnft
					,ltb.RID_OFFER 					AS ridOfr
					,lo.OFR_TYPE 					AS ofrTypeCd
					,cc1.MARK_NAME 					AS ofrTypeCdNm
					,lo.OFR_SUB_TYPE 				AS ofrSubType
					,cc2.MARK_NAME					AS ofrSubTypeNm
					,ltb.TIER_BNFT_TYPE_CD 			AS tierBnftTypeCd
					,cc3.MARK_NAME 					AS tierBnftTypeCdNm
					,ltb.BNFT_ACT_CYCLE_CD 			AS bnftActCycleCd
					,cc4.MARK_NAME 					AS bnftActCycleCdNm
					,ltb.BNFT_ACT_ROT_CYCEL_CD	 	AS bnftActRotCycleCd
					,cc5.MARK_NAME 					AS bnftActRotCycleCdNm
					,cc5.MARK_NAME + '(' + cc4.MARK_NAME + ')'	AS combinedBnftActCycleNm
					,ltbp.PAY_YEAR 					AS payYear
					,ltbp.PAY_MONTH 				AS payMonth
					,CONVERT(VARCHAR,com.TO_DATE(ltbp.PAY_DAY, 'YYYYMMDD'), 23) AS payDay
					,lo.CPN_YN						AS cpnYn
					,lo.OFR_NO						AS ofrNo
					,lo.OFR_NM						AS ofrNm
					,CASE WHEN lo.OFR_VAL_TYPE ='F' THEN CONVERT(VARCHAR,ltb.AMT,'999,999,999,999,999') + '원'
					       WHEN lo.OFR_VAL_TYPE ='A' THEN CONVERT(VARCHAR,ltb.AMT,'999,999,999,999,999') + '원'
					  ELSE 	convert(varchar, ltb.AMT) + '%' END 		AS amt
					,ltb.QTY						AS qty
					,lo.OFR_VAL_TYPE				AS ofrValType
					,lo.OFR_VAL_AMT					AS ofrValAmt
					,ltbp.CREATE_DATE 				AS createDate
					,ltbp.CREATE_BY 				AS createBy
					,ltbp.MODIFY_DATE 				AS modifyDate
					,ltbp.MODIFY_BY 				AS modifyBy
					,${strColumn}
			FROM LOY.LOY_TIERS_BNFT_PAY ltbp
					LEFT OUTER JOIN LOY.LOY_TIERS_BNFT ltb ON ltbp.RID_TIERS_BNFT = ltb.RID AND ltb.flag = 1
					LEFT OUTER JOIN LOY.LOY_OFR lo ON ltb.RID_OFFER = lo.RID AND lo.flag = 1
					LEFT OUTER JOIN COM.COMM_CODE cc1 ON cc1.CODE_NAME = lo.OFR_TYPE AND cc1.GROUP_CODE = 'LOY_OFR_TYPE' AND cc1.FLAG = 1
					LEFT OUTER JOIN COM.COMM_CODE cc2 ON cc2.CODE_NAME = lo.OFR_SUB_TYPE AND cc2.GROUP_CODE = 'LOY_OFR_SUB_TYPE' AND cc2.FLAG = 1
					LEFT OUTER JOIN COM.COMM_CODE cc3 ON cc3.CODE_NAME = ltb.TIER_BNFT_TYPE_CD AND cc3.GROUP_CODE = 'LOY_TIER_BNFT_TYPE_CD' AND cc3.FLAG = 1
					LEFT OUTER JOIN COM.COMM_CODE cc4 ON cc4.CODE_NAME = ltb.BNFT_ACT_CYCLE_CD AND cc4.GROUP_CODE = 'LOY_TIER_BNFT_ACT_CYCLE' AND cc4.FLAG = 1
					LEFT OUTER JOIN COM.COMM_CODE cc5 ON cc5.CODE_NAME = ltb.BNFT_ACT_ROT_CYCEL_CD AND cc5.GROUP_CODE = 'LOY_TIER_BNFT_ACT_ROT_CYCLE' AND cc5.FLAG = 1
			WHERE	1 = 1
				AND ltbp.RID_MBR = #{ridMbr}
				AND ${strCondWhere} 
				AND ${strWhere}
			ORDER BY ${strOrderby}
			${strEndPaging}
	</select>
	
	   <select id="selectMbrCustTypeCd" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" 
                                                               resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto">
        /* LoyMbrMapper.selectMbrCustTypeCd */
        SELECT   lmm.rid                                                as mbRid
                        ,lc.CUST_TYPE_CD                            AS custTypeCd
        FROM    LOY.LOY_MBR lmm
        JOIN LOY.LOY_CUST lc ON lmm.RID_CUST = lc.RID AND lc.FLAG = 1
        WHERE 1=1
        AND   lmm.FLAG = 1
       <if test="rid != null and rid != ''">
            AND lmm.rid = #{rid}
       </if>
       <if test="mbrNo != null and mbrNo != ''">
            AND lmm.MBR_NO = #{mbrNo}
       </if>
    </select>
	
	
	<select id="selectMbrTxnHistSumList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTxnHistListResDto">
	  /* LoyMbrMapper.selectMbrTxnHistSumList */
	 SELECT
	 	 <!-- 
	       com.nvl(SUM(case when llo.SELL_TYPE_CD = '01' then CONVERT(VARCHAR,com.TRUNC(llo.SELL_AMT,0)) END),0) 				AS sellAmtSum
     	  ,com.nvl(SUM(case when llo.SELL_TYPE_CD = '01' then CONVERT(VARCHAR,com.TRUNC(llo.DISC_AMT,0)) END),0) 			AS discntAmtSum
	      ,com.nvl(SUM(case when llo.SELL_TYPE_CD = '01' then CONVERT(VARCHAR,com.TRUNC(llo.SETTLE_AMT,0)) END),0) 			AS settleAmtSum 
	    -->
            ISNULL(SUM(case when llo.ORD_NO = '01' then com.TRUNC(llo.TOT_AMT,0) END),0) 			AS sellAmtSum
     	  ,ISNULL(SUM(case when llo.ORD_NO = '01' then com.TRUNC(llo.DISC_AMT,0) END),0) 			AS discntAmtSum
	      ,ISNULL(SUM(case when llo.ORD_NO = '01' then com.TRUNC(llo.ACT_AMT,0) END),0) 			AS settleAmtSum
	   FROM   
	    	LOY.LOY_ORD llo
	  JOIN   LOY.LOY_MBR lm ON lm.RID = llo.RID_MBR AND lm.FLAG = 1
	  WHERE  1=1
	   AND llo.FLAG = 1
	    <choose>
	        	<when test="mbrStatCd == '탈퇴'">
		    		AND llo.RID_MBR = #{rid}
		   		</when>
		   		<otherwise>
		   			AND llo.RID_MBR IN ${strMbrIntWhere}
		   		</otherwise>
		   	</choose>
	   <if test="startDt != null and endDt != null">
	   AND llo.SALE_DATE BETWEEN com.TO_DATE(#{startDt},'YYYY-MM-DD') AND com.TO_DATE(#{endDt},'YYYY-MM-DD')+1
		</if>
		</select>
	
	
		<select id="selectMbrPntHistSumList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTxnHistListResDto">
		  /* LoyMbrMapper.selectMbrPntHistSumList */
		 SELECT
            ISNULL(SUM(CASE WHEN lpt.PNT_TXN_TYPE_1_CD = '200' AND lpt.PNT_TXN_TYPE_2_CD ='210' THEN '-' + CONVERT(NVARCHAR, com.TRUNC(lpt.TXN_AMT,0))
              			   WHEN lpt.PNT_TXN_TYPE_1_CD = '200' THEN '0'
              			   WHEN lpt.PNT_TXN_TYPE_1_CD = '100' AND lpt.PNT_TXN_TYPE_2_CD = '130' THEN '0'
              else com.TRUNC(lpt.TXN_AMT,0)END),0)    AS txnAmtSum
             ,ISNULL(SUM(case when lpt.pnt_txn_type_1_cd = '200' then '-' + CONVERT(NVARCHAR, com.TRUNC(lpt.PNT_AMT,0)) else com.TRUNC(lpt.PNT_AMT,0) END),0)
              AS pntAmtSum
		FROM LOY.LOY_PNT_TXN lpt
	  	JOIN LOY.LOY_MBR lm ON lpt.RID_MBR =lm.RID AND lm.FLAg = 1
		LEFT OUTER JOIN LOY.LOY_CHNL lc ON lc.RID = lpt.RID_CHNL AND lc.FLAG = 1
	   WHERE  1=1
	    AND lpt.FLAG = 1
	    AND lpt.RID_MBR = #{ridMbr}
	    <if test="startDt != null and endDt != null">
	    AND lpt.TXN_DT BETWEEN com.TO_DATE(#{startDt},'YYYY-MM-DD') AND com.TO_DATE(#{endDt},'YYYY-MM-DD')+1
	  	</if>
	  	</select>
	  	
	  
	 <select id="selectCpnIssueOfferList" parameterType="com.icignal.loyalty.club.dto.request.LoyClubOfferDetailReqDto"
													resultType="com.icignal.loyalty.club.dto.response.LoyClubOfferListResDto">
		/* LoyMbrMapper.selectCpnIssueOfferList */
		SELECT lo.RID AS rid
			, lo.OFR_NO 						AS ofrNo
			, lo.OFR_NM 						AS ofrNm
			, lo.OFR_TYPE 					AS ofrTypeCd
			, lo.OFR_SUB_TYPE 			AS ofrSubTypeCd
			, lo.CPN_YN		  				AS cpnYn
			, lo.OFR_VAL_TYPE 				AS ofrValType
			, lo.OFR_VAL_AMT  				AS ofrValAmt
			, lo.USE_CHNL_LIMIT_YN  	AS useChnlLimitYn   -- 사용 가능 채널
			, lo.USE_PROD_LIMIT_YN    AS useProdLimitYn   -- 사용 가능 상품
			, lc.ISS_TYPE	  					AS issType
			, lc.USE_MIN_PUR_AMT  		AS useMinPurAmt 	-- 구매 최소 금액 
			, lc.USE_MAX_DC_AMT   		AS useMaxDcAmt  	-- 최대 할인 금액
			, lc.OFF_YN          				AS offYn        	 		-- 오프라인 매장 전용
			, lc.USABLE_MAX_CNT  		AS usableMaxCnt 	-- 사용 가능 횟수
			, lc.use_Dup_Yn             		AS useDupYn   -- 타쿠폰 중복
			, lo.VOC_YN							AS vocYn    -- 대응 지급 가능 여부
			, lo.EMP_YN 						AS empYn	-- 임직원 지급 가능여부
			, ${strColumn}
	FROM loy.loy_ofr lo
	LEFT OUTER JOIN LOY.LOY_CPN lc ON lo.RID = lc.RID_OFR AND lc.FLAG = 1
	WHERE ${strCondWhere}
		AND ${strWhere}
		AND lo.FLAG = 1
		AND lo.STAT_CD = 'A'
		AND lo.cpn_YN='Y' 
		<!-- AND lo.VOC_YN ='Y' -->
		<if test="ofrType != null and ofrType != null">
		AND lo.OFR_TYPE = #{ofrType}
		</if>
		<if test="issType != null and issType != null">
		AND lc.ISS_TYPE = #{issType}
		</if>
	ORDER BY ${strOrderby}
		  		${strEndPaging}
	</select>
	
	
    <select id="selectMbrCouponTxnHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrCouponListResDto">
	/* LoyMbrMapper.selectMbrCouponTxnHistList */
	SELECT
		lcmh.CPN_NO   														AS cpnNo	
		,lcmh.CPN_STATE_CD 												AS cpnStateCd		-- 쿠폰 상태
		,lcmh.CPN_TXN_STATE_CD										AS cpnTxnStateCd	-- 쿠폰 상세 상태
		,CONVERT(VARCHAR, lcmh.CPN_OCCUR_DT,120) 		AS cpnOccurDt		-- 쿠폰 발생일시
		,CASE WHEN lcmh.CPN_TXN_STATE_CD ='20' THEN lc1.CHNL_NO
		 WHEN lcmh.CPN_TXN_STATE_CD ='10' THEN lc2.CHNL_NO
		   ELSE lc1.CHNL_NO END										AS cpnUseChnlNo		-- 사용 채널 번호
		,CASE WHEN lcmh.CPN_TXN_STATE_CD ='20' THEN lc1.CHNL_NM
		  WHEN lcmh.CPN_TXN_STATE_CD ='10' THEN lc2.CHNL_NM
	    ELSE	lc1.CHNL_NM END 											AS cpnUseChnlNm		-- 사용 채널명
		,lc2.CHNL_NO												AS issChnlNo		--
		,lc2.CHNL_NM												AS issChnlNm		--
	    ,lcmh.CHNL_TXN_NO                                   AS chnlTxnNo   --거래 번호
	    ,lcmh2.ridCpnTxn                             				AS ridCpnTxn  --원거래 번호    
	    ,e.name												AS createBy
		,${strColumn}
	FROM loy.LOY_CPN_TXN lcmh
	JOIN loy.LOY_CPN_MBR lcm ON lcmh.RID_CPN_MBR = lcm.rid AND lcm.FLAG = 1
	LEFT OUTER JOIN loy.LOY_CHNL lc1 ON lcmh.RID_USED_CHNL = lc1.rid AND lc1.FLAG = 1
	LEFT OUTER JOIN loy.LOY_CHNL lc2 ON lcmh.RID_ISS_CHNL  = lc2.rid AND lc2.FLAG = 1
	left OUTER JOIN com.crm_user cu ON cu.rid = lcmh.CREATE_BY
    LEFT OUTER JOIN com.employee e ON cu.ID_EMPLOYEE = e.id
	LEFT OUTER JOIN (SELECT 
								lcc.rid AS txnRid  
								,lcc.CHNL_TXN_NO AS ridCpnTxn
	FROM Loy.LOY_CPN_TXN lcc WHERE lcc.flag=1) lcmh2 ON lcmh.RID_PAR_CPN_TXN  = lcmh2.txnRid
	WHERE lcm.rid = #{rid}
	AND ${strCondWhere}
	AND ${strWhere}
    ORDER BY ${strOrderby}
    ${strEndPaging}
	</select>
	
	<update id="updatePntYn" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto">  								   
     /* LoyMbrMapper.updatePntYn */
     UPDATE loy.LOY_MBR
		SET 
		  PNT_ACRL_YN	= #{afterPntAcrlYnVal}
		WHERE RID = #{rid}
    </update>
    
    	<update id="updateRdmPntYn" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto">  								   
     /* LoyMbrMapper.updateRdmPntYn */
     UPDATE loy.LOY_MBR
		SET 
		  PNT_RDM_YN	= #{afterPntRdmYnVal}
		WHERE RID = #{rid}
    </update>
    
    <insert id="addMbrPntChngHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto">  								   
    /* LoyMbrMapper.addMbrPntChngHistList */
    INSERT INTO loy.loy_mbr_chg_hist
     (
     	RID
     , CREATE_BY
     , MODIFY_BY
     , CREATE_DATE
     , MODIFY_DATE
     , FLAG
     , RID_MBR
     , RMARK
     , CHG_TBL
     , CHG_COL
     , BCHNG_DATA
     , ACHNG_DATA
	)
     VALUES (
      com.getNewID('A'),
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      1,
     #{rid},
     #{rMark},
     #{chgTbl},
     #{chgCol},
     #{bchngData},
     #{achngData}
      )       
    </insert>
	
	<select id="selectChgVal" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrItemResDto">
		/* LoyMbrMapper.selectChgVal */
		SELECT t2.rid			AS dataVAl
		FROM   LOY.LOY_OPR_PLCY T1
		JOIN   LOY.LOY_OPR_PLCY_DTL T2 ON T1.RID = T2.RID_OPR AND T2.FLAG = 1
		WHERE T1.FLAG = 1
		AND   T1.RID_PGM = #{ridPgm}
		AND   T1.CTG_1_CD = 'A'
		AND   T1.CTG_2_CD = 'A1'
		AND   T1.PLCY_CD  =#{plcyCd}
		AND   T2.DATA_VAL=#{altChnlTypeCd}
	</select>
	
	<select id="selectChgNextDate" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrItemResDto">
		/* LoyMbrMapper.selectChgNextDate */
        SELECT DATA_VAL                 AS dataVAl		
        FROM   LOY.LOY_OPR_PLCY T1
		JOIN   LOY.LOY_OPR_PLCY_DTL T2 ON T1.RID = T2.RID_OPR AND T2.FLAG = 1
		WHERE T1.FLAG = 1
		AND   T1.RID_PGM = #{ridPgm}
		AND   T1.CTG_1_CD = 'A'
		AND   T1.CTG_2_CD = 'A1'
        AND   T1.PLCY_CD  = 'A11'    
 </select>

	<select id="selectContsRid" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrItemResDto">
		/* LoyMbrMapper.selectContsRid */
		SELECT
        	mc.ID 		as contRid
		FROM 
			com.mkt_conts_mst mc
	 	WHERE  1=1 and mc.flag = 1 
	  		AND mc.CONTS_NO=(SELECT t2.DATA_VAL as dataVal
			 									FROM   LOY.LOY_OPR_PLCY T1
												JOIN   LOY.LOY_OPR_PLCY_DTL T2 ON T1.RID = T2.RID_OPR AND T2.FLAG = 1
	    										WHERE T1.FLAG = 1 	 	
	    										AND T2.ATTR_CD ='10'        
	   											AND t2.PAR_RID =#{parRid})
	</select>
	
	<select id="selectBfPwd" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrItemResDto">
	/* LoyMbrMapper.selectBfPwd */
	SELECT 
		USER_PWD 			AS bfPwd
	FROM 
		loy.LOY_CUST_LOGIN_INF
	WHERE 
		rid=#{ridVal}
	
	</select>
	
	    
    <!-- 사용자 비밀번호(락앤락) 변경 -->
	<update id="updateMbrLoiginPwLL" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto">
		/* LoyMbrMapper.updateMbrLoiginPwLL */
		UPDATE	
			loy.LOY_CUST_LOGIN_INF
		SET 	
			USER_PWD 					= #{userPwd}  														--변경 패스워드
			,PWD_CHG_DATE 			= CONVERT(VARCHAR,GETDATE() ,120) 	--패스워드 변경일시
			,MODIFY_DATE 				= GETDATE() 
			,MODIFY_BY 					= #{modifyBy}	
			,BF_PWD						= #{bfPwd}
		    ,PWD_CHG_NEXT_DATE	= CASE WHEN #{plusDateVal} = 0 THEN NULL 
		    										ELSE com.TRUNC_DATE(GETDATE())+#{plusDateVal} END       --패스워드 다음 변경일
		WHERE 	
			RID = #{ridVal}
	</update>

	 <insert id="addPwdSendChnl" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto">
	 	/* LoyMbrMapper.addPwdSendChnl */
	  INSERT INTO loy.LOY_CUST_ALT
     (
       RID
     , CREATE_BY
     , MODIFY_BY
     , CREATE_DATE
     , MODIFY_DATE
     , FLAG
     , ALT_TYPE_CD
     , RID_CUST
     , RID_MBR
     , ALT_CHNL_TYPE_CD
     , RID_CONTS
     , EXP_SEND_DATE
     , RID_PGM
     , SRC_SYSTEM
     , SEND_STAT_CD
    )
     VALUES (
      #{rid},
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      1,
      #{altTypeCd},
      #{ridCust},
      #{ridMbr},
      #{altChnlTypeCd},
      #{ridConts},
      GETDATE(),
      #{ridPgm},
      'ACTION',  
      'WAIT'
     )
	  </insert>
	  
	 <insert id="addPwdSendChnlTag" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrEditPntUsePwReqDto">
	  	/* LoyMbrMapper.addPwdSendChnlTag */
	  INSERT INTO loy.LOY_CUST_ALT_TAG
     (
       RID
     , CREATE_BY
     , MODIFY_BY
     , CREATE_DATE
     , MODIFY_DATE
     , FLAG
     , RID_ALT
     , TAG_NM
     , TAG_VAL
     , ENC_YN
    )
     VALUES (
      com.getNewID('A'),
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      1,
      #{ridAlt},
      #{tagNm},
      #{tagVal},
      #{encYn}
     )
	  </insert>
	  
	   <select id="selectOfrPntList" parameterType="com.icignal.loyalty.club.dto.request.LoyClubOfferDetailReqDto"
													resultType="com.icignal.loyalty.club.dto.response.LoyClubOfferListResDto">
		/* LoyMbrMapper.selectOfrPntList */
		SELECT 
		ac.OFFER_NO  			AS ofrNo   -- 오퍼번호
		,o.OFR_NM    			AS ofrNm-- 오퍼명
		,COM.TO_CHAR(ac.ACRL_DATE, 'YYYY-MM-DD HH24:MI')    AS acrlDate -- 적립일
		,CONVERT(VARCHAR,ac.VALID_START_DATE, 23)  AS validStartDt  -- 유효시작일 
		,CONVERT(VARCHAR,ac.VALID_END_DATE, 23)    AS validEndDt-- 유효종료일
		,ac.ACRL_AMT  			AS acrlAmt-- 적립금
		,ac.BALNC     			AS blanc-- 잔액
		,CASE WHEN ac.VALID_START_DATE > com.TRUNC_DATE(GETDATE()) THEN N'사용불가(적립예정)' 
			  WHEN ac.VALID_START_DATE <![CDATA[ <= ]]> com.TRUNC_DATE(GETDATE()) AND ac.VALID_END_DATE <![CDATA[ < ]]> com.TRUNC_DATE(GETDATE()) THEN N'사용불가(기간만료)' ELSE '' END AS acrlDesc
		,ac.RID	AS rid
		,${strColumn}
		FROM LOY.LOY_PNT_ACRL ac
		LEFT OUTER JOIN loy.loy_ofr o ON ac.OFFER_NO = o.OFR_NO 
	    WHERE  ${strWhere}
    	AND ac.FLAG = 1
    	AND ac.BALNC > 0
        AND ac.RID_MBR = #{ridMbr}
        order by ${strOrderby}
        ${strEndPaging}
		</select>
		
		<update id="updateMbrSecsnMbrToAble" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto">
			/* LoyMbrMapper.updateMbrSecsnMbrToAble */
			UPDATE LOY.LOY_CUST
			SET    CUST_NM = NULL
				 , HHP     = NULL
				 , EMAIL   = NULL
				 , CERT_VAL      = NULL
				 , MODIFY_DATE = GETDATE()
				 , MODIFY_BY   = #{modifyBy}
			WHERE RID = #{ridCust}
		</update>
		
		<update id="updateMbrSecsnMbrIToAble" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto">
			/* LoyMbrMapper.updateMbrSecsnMbrIAble */
			UPDATE LOY.LOY_CUST_I
			SET    EMP_NO = NULL
				 , MODIFY_DATE = GETDATE()
				 , MODIFY_BY   = #{modifyBy}
			WHERE RID_CUST = #{ridCust}
		</update>
		
		<update id="updateMbrSecsnMbrCToAble" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto">
			/* LoyMbrMapper.updateMbrSecsnMbrCAble */
			UPDATE LOY.LOY_CUST_C
			SET    BIZR_NO = NULL
				 , MODIFY_DATE = GETDATE()
				 , MODIFY_BY   = #{modifyBy}
			WHERE RID_CUST = #{ridCust}
		</update>
		
		<update id="updateMbrSecsnMbr" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto">
			/* LoyMbrMapper.updateMbrSecsnMbr */
			UPDATE LOY.LOY_MBR_SECSN 
			SET    RE_SBSC_RESN = #{secsnAbleResnEtc}
				 , MODIFY_DATE = GETDATE()
				 , MODIFY_BY   = #{modifyBy}
			WHERE RID = #{rid}
		</update>
		
		<select id="selectMbrIntListSearch" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" 
	                                                           resultType="com.icignal.loyalty.membership.dto.response.LoyMbrListNewPageResDto">
		/* LoyMbrMapper.selectMbrIntListSearch */
		SELECT 	  
				  lm.MBR_NO	AS mbrNo
				, lc.CUST_TYPE_CD AS custTypeCd
				, lm.MBR_TYPE_CD AS mbrTypeCd
				, lc.CUST_NM	AS unMaskCustNm
				, lc.HHP		AS unMaskHhp
				, lm.RID		AS ridMbr
				, lc.RID_CUST		AS ridCust
				, ${strColumn}
		FROM	 LOY.LOY_MBR lm
	    JOIN LOY.VW_CUST_DI lc ON lm.RID_CUST = lc.RID_CUST 
		WHERE 1=1
		AND   ${strWhere}
        AND   lm.MBR_STAT_CD IN('A','D')
        AND   lm.MBR_TYPE_CD IN ('M1','M2')
        AND   lc.CUST_TYPE_CD = 'I'
        AND   lc.CUST_NM = #{encrytedCustNm}
        AND   lc.HHP = #{encrytedHhp}
        AND   ${strCondWhere}
		ORDER BY ${strOrderby}
		${strEndPaging}
	</select>
	
	<update id="updateMbrInt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" statementType="CALLABLE">
	/* LoyMbrMapper.updateMbrInt */
    { CALL LOY.PKG_LOY_MBR.SP_MBR_INT_CHECK (
            'Y',
            #{createBy},
            #{tgtMbrNo},
            #{pRst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{pRstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{pRstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
            )
    }
    </update>
    
    <update id="updateMbrTierBnft" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" statementType="CALLABLE">
	/* LoyMbrMapper.updateMbrTierBnft */
    { CALL LOY.PKG_LOY_MBR.SP_MBR_TIERS_BNFT (
            'Y',
            #{createBy},
            #{ridMbr},
            #{pRst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{pRstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{pRstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
            )
    }
    </update>
    
		<select id="setCustDorChange" parameterType="com.icignal.loyalty.membership.dto.request.LoyExecutivesViewReqDto" statementType="CALLABLE">
        	/* LoyMbrMaper.setCustDorChange */
        	{ CALL batch.PKG_DOR_MBR_MANUAL.SP_MAIN( #{mbrRid},#{modifyBy} ) }
    	</select>
    	
    	 <select id="getExtncList" parameterType="com.icignal.loyalty.club.dto.request.LoyClubOfferDetailReqDto"
													resultType="com.icignal.loyalty.club.dto.response.LoyClubOfferListResDto">
				/* LoyMbrMaper.getExtncList */
				SELECT 
				ac.OFFER_NO  			AS ofrNo   -- 오퍼번호
				,o.OFR_NM    			AS ofrNm-- 오퍼명
				,COM.TO_CHAR(ac.ACRL_DATE, 'YYYY-MM-DD HH24:MI')    AS acrlDate -- 적립일
				,CONVERT(VARCHAR,ac.VALID_START_DATE, 23)  AS validStartDt  -- 유효시작일 
				,CONVERT(VARCHAR,ac.VALID_END_DATE, 23)    AS validEndDt-- 유효종료일
				,ac.ACRL_AMT  			AS acrlAmt-- 적립금
				,ac.BALNC     			AS blanc-- 잔액
				,${strColumn}
				FROM LOY.LOY_PNT_ACRL ac
				LEFT OUTER JOIN loy.loy_ofr o ON ac.OFFER_NO = o.OFR_NO 
			    WHERE  ${strWhere}
		    	AND ac.FLAG = 1
		    	AND ac.BALNC > 0
		        AND ac.RID_MBR = #{ridMbr}
		        AND ac.VALID_END_DATE  <![CDATA[ <= ]]> EOMONTH(com.TRUNC_DATE(GETDATE()))
		        order by ${strOrderby}
		        ${strEndPaging}
		</select>
		
		<insert id="insertChgHist" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrRenameReqDto">
     /* LoyMbrMaper.insertChgHist */
     INSERT INTO LOY.LOY_MBR_CHG_HIST
     (RID
     , CREATE_BY
     , MODIFY_BY
     , CREATE_DATE
     , MODIFY_DATE
     , FLAG
     , RID_MBR
     , CHG_TBL
     , CHG_COL
     , BCHNG_DATA
     , ACHNG_DATA)
     VALUES (com.getNewID('A'),
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      1,
      #{mbrRid},
      'LOY_CUST_I',
      'EMP_NO',
      #{empNo},
      #{empNoNew} )
    </insert>
    
    <insert id="insertMbrChgHistMbrStatCd" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrRenameReqDto">
     /* LoyMbrMaper.insertMbrChgHistMbrStatCd */
     INSERT INTO LOY.LOY_MBR_CHG_HIST
     (RID
     , CREATE_BY
     , MODIFY_BY
     , CREATE_DATE
     , MODIFY_DATE
     , FLAG
     , RID_MBR
     , CHG_TBL
     , CHG_COL
     , BCHNG_DATA
     , ACHNG_DATA)
     VALUES (com.getNewID('A'),
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      1,
      #{mbrRid},
      'LOY_MBR',
      'MBR_STAT_CD',
      #{oldMbrStatCd},
      #{mbrStatCd} )
    </insert>
    
    <insert id="insertMbrChgHistCustStatCd" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrRenameReqDto">
     /* LoyMbrMaper.insertMbrChgHistCustStatCd */
     INSERT INTO LOY.LOY_MBR_CHG_HIST
     (RID
     , CREATE_BY
     , MODIFY_BY
     , CREATE_DATE
     , MODIFY_DATE
     , FLAG
     , RID_MBR
     , CHG_TBL
     , CHG_COL
     , BCHNG_DATA
     , ACHNG_DATA)
     VALUES (com.getNewID('A'),
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      1,
      #{mbrRid},
      'LOY_CUST',
      'CUST_STAT_CD',
      #{oldMbrStatCd},
      #{custStatCd} )
    </insert>
    
    <update id="updateMbrTierBnftProc" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrTiersDetailReqDto" statementType="CALLABLE">
	/* LoyMbrMapper.updateMbrTierBnftProc */
     EXEC BATCH.PKG_TIERS_SP_TIERS_BNFT
            'Y',
            #{createBy},
            #{mbrRid},
            #{pRst,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
            #{pRstCd,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
            #{pRstMsg,javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
    </update>
    
    <update id="updateMbrTierUpBnftProc" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrTiersDetailReqDto" statementType="CALLABLE">
	/* LoyMbrMapper.updateMbrTierUpBnftProc */
    EXEC BATCH.PKG_TIERS.SP_TIERS_UP_BNFT
            'Y',
            #{createBy},
            #{mbrRid},
            #{pRst , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{pRstCd , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT},
            #{pRstMsg , javaType=java.lang.String,jdbcType=VARCHAR,mode=OUT}
    </update>
    
    
    <select id="selectMbrTxnHistDeliSumList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTxnHistListResDto">
	  /* LoyMbrMapper.selectMbrTxnHistDeliSumList */
	 SELECT ISNULL(sum(llo.ACT_AMT),0) AS settleDeliSum
     	    	,   count(*)			AS settleDeliCnt
	   FROM   
	    	LOY.LOY_ORD llo
	  JOIN   LOY.LOY_MBR lm ON lm.RID = llo.RID_MBR AND lm.FLAG = 1
	  WHERE  1=1
	   AND llo.RID_MBR = #{rid}
	   AND ( llo.BSAL_CLS_CD = 'POS' OR ( llo.BSAL_CLS_CD = 'LNLMALL' /* AND ORD_STEP = '75'*/) )
	   AND llo.ORD_NO ='01'
	   <if test="startDt != null and endDt != null">
	   AND llo.SALE_DATE BETWEEN com.TO_DATE(#{startDt},'YYYY-MM-DD') AND com.TO_DATE(#{endDt},'YYYY-MM-DD')+1
		</if>
		
	</select>
	
	<select id="selectMbrDorHistList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDorHistResDto">
	/* LoyMbrMapper.selectMbrDorHistList */
	SELECT 		  lcdh.DOR_HIST_TYPE_CD AS dorHistTypeCd
				, lcdh.DOR_PROC_TYPE_CD	AS dorProcTypeCd
				, CONVERT(VARCHAR,lcdh.REG_DATE,120) AS regDate
                , ${strColumn}
    FROM LOY.LOY_CUST_DOR_HIST lcdh
    JOIN LOY.LOY_CUST lc ON lcdh.RID_CUST = lc.RID 
    JOIN LOY.LOY_MBR  lm ON lc.RID = lm.RID_CUST 
	WHERE ${strWhere}
	AND lcdh.FLAG = 1
	AND lm.RID = #{rid}
	ORDER BY ${strOrderby}
	  			${strEndPaging}
	</select>
	
	<select id="selectDorMbrDetail" parameterType="com.icignal.loyalty.membership.dto.request.LoyNewCustAddReqDto"
															resultType="com.icignal.loyalty.membership.dto.response.LoyMbrResDto">
	/* LoyMbrMapper.selectDorMbrDetail */
	SELECT 		  lc.CUST_NM AS encCustNm
				, lc.HHP	 AS encHhp
				, lm.RID     AS rid
				, lc.RID_CUST AS ridCust
    FROM DOR.DOR_CUST lc  
    JOIN LOY.LOY_MBR  lm ON lc.RID_CUST = lm.RID_CUST 
	WHERE lm.MBR_STAT_CD ='D'
	AND lm.MBR_NO = #{mbrNo}
	</select>
	
	<insert id="insertDorCustChgHist" parameterType="com.icignal.loyalty.membership.dto.response.LoyMbrResDto">
    /* LoyMbrMapper.insertDorCustChgHist */
    INSERT into loy.LOY_MBR_CHG_HIST
      (RID
        ,CREATE_BY
        ,MODIFY_BY
        ,CREATE_DATE
        ,MODIFY_DATE
        ,RID_MBR
        ,CHG_TBL        -- 변경 테이블
        ,CHG_COL        -- 변경 컬럼
        ,BCHNG_DATA     -- 변경전데이터
        ,ACHNG_DATA     -- 변경후데이터
        )
    VALUES
    (com.getNewID('A'),
      #{createBy},
      #{modifyBy},
      GETDATE(),
      GETDATE(),
      #{rid},
      #{chgTbl},
      #{chgCol},
      #{chgBData},
      #{chgAData}
    )
  </insert>
  
  <update id="updateDorCust" parameterType="com.icignal.loyalty.membership.dto.request.LoyNewCustAddReqDto">
  	/* LoyMbrMapper.updateDorCust */
		UPDATE DOR.DOR_CUST
		SET CUST_NM	= #{cust_nm}
		, HHP = #{hhp}
		, MODIFY_DATE = GETDATE()
		, MODIFY_BY   = #{modifyBy}
		WHERE RID_CUST = #{ridCust}
  </update>
  
  <update id="updatePntValidDate" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrPointAcrlReqDto">
  	/* LoyMbrMapper.updatePntValidDate */
		UPDATE LOY.LOY_PNT_ACRL
		SET VALID_START_DATE = com.TO_DATE(#{validStartDate},'YYYY-MM-DD')
		, VALID_END_DATE = com.TO_DATE(#{validEndDate},'YYYY-MM-DD')
		, ACRL_DESC = #{acrlDesc}
		, MODIFY_DATE = GETDATE()
		, MODIFY_BY   = #{modifyBy}
		WHERE RID = #{acrlRid}
  </update>

    <select id="selectMbrSurveyList" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                    resultType="com.icignal.loyalty.membership.dto.response.LoyMbrSurveyListResDto">
    /* LoyMbrMapper.selectMbrSurveyList */
    SELECT S.rid
         , S.survNo
         , S.survNm
         , S.validDate
         , S.createDate
         , ${strColumn}
    FROM( SELECT DISTINCT lsm.rid AS rid
                 , lsm.SURV_NO AS survNo
                 , lsm.SURV_NM AS survNm
                 , CONCAT(CONVERT(VARCHAR,lsm.VALID_START_DATE,120),' ~ ', CONVERT(VARCHAR,lsm.VALID_END_DATE,120)) AS validDate
                 , lsm.VALID_START_DATE AS validStartDate
                 , lsm.VALID_END_DATE AS validEndDate
                 , CONVERT(varchar, lsm2.CREATE_DATE, 120) AS createDate
            FROM LOY.LOY_SURV_MST lsm
            JOIN LOY.LOY_SURV_MBR lsm2 ON lsm.RID  = lsm2.RID_SURV_MST AND lsm2.FLAG = 1 AND lsm2.RID_MBR = #{ridMbr}
            WHERE ${strWhere}
            AND lsm.FLAG = 1) AS S
    ORDER BY ${strOrderby}
        ${strEndPaging}
    </select>

    <select id="selectMbrSurveyDetailPop" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                    resultType="com.icignal.loyalty.membership.dto.response.LoyMbrSurveyListResDto">
    /* LoyMbrMapper.selectMbrSurveyDetailPop */
        SELECT S.sectNo
             , S.itemNo
             , S.itemTItle
             , S.fieldTypeCd
             , S.ansValue
             , ${strColumn}
        FROM (
                 SELECT DISTINCT lss.SECT_NO                     AS sectNo
                               , lsi.ITEM_NO                     AS itemNo
                               , lsi.ITEM_TITLE                  AS itemTItle
                               , lsi.FIELD_TYPE_CD               AS fieldTypeCd
                               , STRING_AGG(lsm.ANS_VALUE, ', ') AS ansValue
                 FROM loy.LOY_SURV_MBR lsm
                 JOIN loy.LOY_SURV_SECT lss ON lss.RID = lsm.RID_SURV_SECT AND lss.FLAG = 1
                 JOIN loy.LOY_SURV_ITEM lsi ON lsi.RID = lsm.RID_SURV_ITEM AND lsi.FLAG = 1
                 WHERE lsm.FLAG = 1
                 AND lsm.RID_MBR = #{ridMbr}
                 AND lsm.RID_SURV_MST = #{ridSurv}
                 AND ${strWhere}
                 GROUP BY lss.SECT_NO, lsi.ITEM_NO, lsi.ITEM_TITLE, lsi.FIELD_TYPE_CD
             ) AS S
        ORDER BY ${strOrderby}
            ${strEndPaging}
    </select>

    <select id="selectVocSvcReqCnt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                    resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDetailNewPageResDto">
    /* LoyMbrMapper.selectVocSvcReqCnt */
        SELECT ISNULL(SUM(t.closedCnt), 0) as closedCnt
             , ISNULL(SUM(t.vocReqCnt), 0) as vocReqCnt
        FROM (
                 SELECT CASE WHEN vsr.SR_TRT_STATUS = 'Closed'
                                 THEN COUNT( DISTINCT vsr.RID)
                             ELSE 0
                        END AS closedCnt
                      , COUNT( DISTINCT vsr.RID) AS vocReqCnt
                 FROM loy.LOY_MBR lm
                 LEFT OUTER JOIN voc.VOC_SVC_REQ vsr ON lm.RID = vsr.RID_MBR and vsr.FLAG =1
                 WHERE lm.FLAG =1
                 AND lm.RID  = #{rid}
                 AND RCP_DT >= DATEADD(YEAR, -1,GETDATE())
                 GROUP BY vsr.SR_TRT_STATUS
            ) t
    </select>

    <select id="purDetailSelect" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto"
                                resultType="com.icignal.loyalty.membership.dto.response.LoyMbrTxnHistListResDto">
        /* LoyMbrMapper.purDetailSelect */
        select lp.PROD_ID       as prodId
             , lp.PROD_NM       as prodNm
             , lod.COLOR_CD     as colorCd
             , lod.SIZE_CD      as sizeCd
             , lod.CSM_PRC      as csmPrc
             , lod.SALE_QTY     as saleQty
             , (lod.CSM_PRC*lod.SALE_QTY)                   as sellAmt
             , (lod.SALE_AMT-lod.MIL_USE_AMT)               as actAmt
             , (lod.CSM_PRC*lod.SALE_QTY)-lod.SALE_AMT      as discntAmt
             , lod.MIL_USE_AMT  as rdmPoint
             , ${strColumn}
        FROM LOY.LOY_ORD_DTL lod
        LEFT OUTER JOIN LOY.LOY_PROD lp on lod.rid_prod = lp.RID
        WHERE 1=1
        AND lod.RID_ORD = #{rid}
        ORDER BY ${strOrderby}
            ${strEndPaging}
    </select>

    <select id="selectTierLvl" parameterType="java.lang.String"
                                resultType="com.icignal.loyalty.membership.dto.response.LoyMbrDetailNewPageResDto">
        /* LoyMbrMapper.selectTierLvl */
        SELECT COUNT(RID_TG) AS tierMaxLvl
             , (SELECT SEQ_NO FROM LOY.LOY_TIERS WHERE TIER_TYPE_CD = #{tier} AND FLAG = 1) AS tierLvl
        FROM LOY.LOY_TIERS lt
        WHERE FLAG = 1
          AND RID_TG = (SELECT RID_TG FROM LOY.LOY_TIERS WHERE TIER_TYPE_CD = #{tier} AND FLAG = 1)
        GROUP BY RID_TG
    </select>

    <select id="selectMbrSurvSendTgt" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="java.lang.Integer">
    /* LoyMbrMapper.selectMbrSurvSendTgt */
    SELECT ISNULL(COUNT(*),0)
    FROM LOY.LOY_SURV_SEND_TGT
    WHERE RID_MBR = #{rid}
    AND CREATE_DATE >= DATEADD(YEAR, -1, GETDATE())
    </select>

    <select id="selectMbrSurvJoin" parameterType="com.icignal.loyalty.membership.dto.request.LoyMbrReqDto" resultType="java.lang.Integer">
    /* LoyMbrMapper.selectMbrSurvJoin */
    SELECT ISNULL(COUNT(DISTINCT RID_SURV_MST),0)
    FROM LOY.LOY_SURV_MBR
    WHERE RID_MBR  = #{rid}
    AND CREATE_DATE >= DATEADD(YEAR, -1, GETDATE())
    </select>

</mapper>