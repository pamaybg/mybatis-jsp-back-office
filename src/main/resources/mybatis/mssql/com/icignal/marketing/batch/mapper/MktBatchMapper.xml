<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Wed May 02 13:32:29 KST 2018 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icignal.marketing.batch.mapper.MktBatchMapper">

	<!-- 배치 job 목록 조회 -->
    <select id="selectMktBatchJobList" parameterType="com.icignal.marketing.batch.dto.request.MktBatchJobReqDto" resultType="com.icignal.marketing.batch.dto.response.MktBatchJobResDto">
        /* MktBatchMapper.selectMktBatchJobList */
       select rid as rid
       		, job_nm as jobNm
       		, job_desc as jobDesc
       		, use_yn as useYn
       		, exec_cycle as execCycle
       		, com.TO_CHAR(last_exec_start_dt,'YYYY-MM-DD hh24:mi:ss') as lastExecStartDt
       		, com.TO_CHAR(last_exec_end_dt,'YYYY-MM-DD hh24:mi:ss') as lastExecEndDt
       		, result_cd as resultCd
            , ${strColumn}
       from mkt.mkt_batch_job
       where flag = 1
         and ${strCondWhere}
         and ${strWhere}
         and ${strSVCType}
       order by ${strOrderby}
       ${strEndPaging}
    </select>
    
    <!-- 배치 로그 헤더 목록 조회 -->
    <select id="selectMktBatchLogHadList" parameterType="com.icignal.marketing.batch.dto.request.MktBatchJobReqDto" resultType="com.icignal.marketing.batch.dto.response.MktBatchLogResDto">
        /* MktBatchMapper.selectMktBatchLogHadList */
		select t1.id as batchExeLogHadId
			 , t1.job_nm as jobNm
			 , c1.mark_name as batchWrkjobNm
			 , c2.mark_name as batchNm
			 , com.TO_CHAR(t1.start_dt,'YYYY-MM-DD hh24:mi:ss') as startDt
			 , com.TO_CHAR(t1.end_dt,'YYYY-MM-DD hh24:mi:ss') as endDt
			 , t1.batch_status as batchStatus
			 , ${strColumn}
		  from mkt.mkt_batch_exe_log_had t1
		  left outer join com.comm_code c1 on c1.flag = 1 and c1.lang = 'ko' and c1.group_code = 'MKT_BATCH_JOB_CD' and c1.code_name = t1.batch_wrkjob_cd 
		  left outer join com.comm_code c2 on c2.flag = 1 and c2.lang = 'ko' and c2.group_code = 'MKT_BATCH_CD' and c2.code_name = t1.batch_cd 
         where t1.flag = 1
           and t1.job_nm = #{jobNm}
           and ${strCondWhere}
           and ${strWhere}
           and ${strSVCType}
         order by ${strOrderby}
         ${strEndPaging}
    </select>
    
    <!-- 배치 로그 상세 목록 조회 -->
    <select id="selectMktBatchLogDtlList" parameterType="com.icignal.marketing.batch.dto.request.MktBatchJobReqDto" resultType="com.icignal.marketing.batch.dto.response.MktBatchLogResDto">
        /* MktBatchMapper.selectMktBatchLogDtlList */
		select t1.job_nm as jobNm
			 , c1.mark_name as batchWrkjobNm
			 , c2.mark_name as batchNm
			 , c3.mark_name as batchModuleNm
			 ,  com.TO_CHAR(t2.start_dt,'YYYY-MM-DD hh24:mi:ss') as startDt
			 ,  com.TO_CHAR(t2.end_dt,'YYYY-MM-DD hh24:mi:ss') as endDt
			 , t2.batch_status_dtl as batchStatusDtl
			 , t2.err_cd as errCd
			 , t2.err_sbst as errSbst
			 , ${strColumn}
		  from mkt.mkt_batch_exe_log_had t1
		  join mkt.mkt_batch_exe_log_dtl t2 on t2.flag = 1 and t2.batch_exe_log_had_id = t1.id
		  left outer join com.comm_code c1 on c1.flag = 1 and c1.lang = 'ko' and c1.group_code = 'MKT_BATCH_JOB_CD' and c1.code_name = t1.batch_wrkjob_cd 
		  left outer join com.comm_code c2 on c2.flag = 1 and c2.lang = 'ko' and c2.group_code = 'MKT_BATCH_CD' and c2.code_name = t1.batch_cd 
		  left outer join com.comm_code c3 on c3.flag = 1 and c3.lang = 'ko' and c3.group_code = 'MKT_BATCH_MODULE_CD' and c3.code_name = t2.batch_modul_cd  
         where t1.flag = 1
         <if test="@com.icignal.common.util.StringUtil@isNotEmpty(jobNm)">
           and t1.job_nm = #{jobNm}
         </if>
         <if test="@com.icignal.common.util.StringUtil@isNotEmpty(batchExeLogHadId)">
           and t1.id = #{batchExeLogHadId}
         </if>
           and ${strCondWhere}
           and ${strWhere}
           and ${strSVCType}
         order by ${strOrderby}
         ${strEndPaging}
    </select>
    
    <!-- 배치 job 등록 -->
    <insert id="insertMktBatchJob" parameterType="com.icignal.marketing.batch.dto.request.MktBatchJobReqDto">
    	/* MktBatchMapper.insertMktBatchJob */
    	insert into mkt.mkt_batch_job (
    		rid
    		, create_by
    		, modify_by
    		, create_date
    		, modify_date
    		, flag
    		, job_nm
    		, job_desc
    		, use_yn
    		, exec_cycle
    	) values (
    		com.getNewID('')
    		, #{createBy}
    		, #{modifyBy}
    		, GETDATE()
    		, GETDATE()
    		, 1
    		, #{jobNm}
    		, #{jobDesc}
    		, #{useYn}
    		, #{execCycle}
    	)
    </insert>
    
    <!-- 배치 job 수정 -->
    <update id="updateMktBatchJob" parameterType="com.icignal.marketing.batch.dto.request.MktBatchJobReqDto">
    	/* MktBatchMapper.updateMktBatchJob */
    	update mkt.mkt_batch_job
    	   set modify_date = GETDATE()
    	     , modify_by = #{modifyBy}
    	     , job_nm = #{jobNm}
    	     , job_desc = #{jobDesc}
    	     , use_yn = #{useYn}
    	     , exec_cycle = #{execCycle}
    	 where rid = #{rid}
    </update>
    
    <!-- 배치 job 수정 -->
    <update id="updateMktBatchJobUseYn" parameterType="com.icignal.marketing.batch.dto.request.MktBatchJobReqDto">
    	/* MktBatchMapper.updateMktBatchJobUseYn */
    	update mkt.mkt_batch_job
    	   set modify_date = GETDATE()
    	     , modify_by = #{modifyBy}
    	     , use_yn = #{useYn}
    	 where rid = #{rid}
    </update>
    
    <!-- 배치 job 삭제 -->
    <update id="deleteMktBatchJob" parameterType="com.icignal.marketing.batch.dto.request.MktBatchJobReqDto">
    	/* MktBatchMapper.deleteMktBatchJob */
    	update mkt.mkt_batch_job
    	   set modify_date = GETDATE()
    	     , modify_by = #{modifyBy}
    	     , flag = flag + 1
    	 where rid = #{rid}
    </update>
 
    
    </mapper>